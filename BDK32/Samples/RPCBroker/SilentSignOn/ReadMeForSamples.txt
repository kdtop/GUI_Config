The SilentSignOn(p13) directory under Samples contains four (4) sample programs that illustrate different aspects of patch XWB*1.1*13.  Source code is included for each of these programs.

The program XWBAppHandle1 is used to illustrate the use of the StartProgSLogin method in the RpcSLogin unit.  This method is used to launch a second program (XWBAppHandle2) with a silent login using an AppHandle obtained from the server.  The AppHandle and information about the server, listener port, and Division are passed on the command line when XWBAppHandle2 is launched.  The StartProgSLogin method can also can be used to launch a non-RPCBroker related program and this can be demonstrated by entering the name of a program, and command line arguments if any, in an edit box prior to clicking the Start App2 button.  This will launch the specified program without including any broker related arguments on the command line.

The program XWBAppHandle2 is used to illustrate the use of the GetCmdLine method in the RpcSLogin unit.  This method identifies command line arguments related to the RPCBroker (identified by p=, s=, h=, and d= for listener port, server, AppHandle, and Division, respectively).  If the arguments include an AppHandle, the connection to the server is attempted as well.  This application will display information about the user logged into the server.  If an attempt is made to start the application manually, a message box is displayed asking whether the user wants to login manually.  If the response is 'OK' the normal RPCBroker login screen is shown.  If the response is 'Cancel' the application terminates.

The program XWBAVCodes is used to illustrate a silent login in which the Access and Verify codes are provided by the program, as opposed to being entered in the RPCBroker login screen.

The program XWBOnFail is used to illustrate the different types of error handling which are available in patch XWB*1.1*13.  These include permitting the application to handle errors via a specified procedure call, to showing normal errors, to simply providing the error message for the application to examine while otherwise ignoring errors completely.