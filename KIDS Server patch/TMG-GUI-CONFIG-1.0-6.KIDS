KIDS Distribution saved on Apr 15, 2014@09:24:41
TMG-GUI-CONFIG*1.0*6
**KIDS**:TMG-GUI-CONFIG*1.0*6^

**INSTALL NAME**
TMG-GUI-CONFIG*1.0*6
"BLD",8436,0)
TMG-GUI-CONFIG*1.0*6^^0^3140415^n
"BLD",8436,1,0)
^^2^2^3110626^^
"BLD",8436,1,1,0)
Adds functionality for reminder dialogs.
"BLD",8436,1,2,0)
This is preliminary, and more functionality to follow later.
"BLD",8436,4,0)
^9.64PA^^
"BLD",8436,6.3)
9
"BLD",8436,"KRN",0)
^9.67PA^779.2^20
"BLD",8436,"KRN",.4,0)
.4
"BLD",8436,"KRN",.401,0)
.401
"BLD",8436,"KRN",.402,0)
.402
"BLD",8436,"KRN",.403,0)
.403
"BLD",8436,"KRN",.5,0)
.5
"BLD",8436,"KRN",.84,0)
.84
"BLD",8436,"KRN",3.6,0)
3.6
"BLD",8436,"KRN",3.8,0)
3.8
"BLD",8436,"KRN",9.2,0)
9.2
"BLD",8436,"KRN",9.8,0)
9.8
"BLD",8436,"KRN",9.8,"NM",0)
^9.68A^9^9
"BLD",8436,"KRN",9.8,"NM",1,0)
TMGRPC3^^0^B369191340
"BLD",8436,"KRN",9.8,"NM",2,0)
TMGRPC3E^^0^B98787333
"BLD",8436,"KRN",9.8,"NM",3,0)
TMGRPC3B^^0^B435765811
"BLD",8436,"KRN",9.8,"NM",4,0)
TMGRPC3C^^0^B61196443
"BLD",8436,"KRN",9.8,"NM",5,0)
TMGRPC3D^^0^B124298019
"BLD",8436,"KRN",9.8,"NM",6,0)
TMGRPC3F^^0^B148728777
"BLD",8436,"KRN",9.8,"NM",7,0)
TMGRPC3G^^0^B926921876
"BLD",8436,"KRN",9.8,"NM",8,0)
TMGRPC3H^^0^B41138984
"BLD",8436,"KRN",9.8,"NM",9,0)
TMGRPC3I^^0^B6566255
"BLD",8436,"KRN",9.8,"NM","B","TMGRPC3",1)

"BLD",8436,"KRN",9.8,"NM","B","TMGRPC3B",3)

"BLD",8436,"KRN",9.8,"NM","B","TMGRPC3C",4)

"BLD",8436,"KRN",9.8,"NM","B","TMGRPC3D",5)

"BLD",8436,"KRN",9.8,"NM","B","TMGRPC3E",2)

"BLD",8436,"KRN",9.8,"NM","B","TMGRPC3F",6)

"BLD",8436,"KRN",9.8,"NM","B","TMGRPC3G",7)

"BLD",8436,"KRN",9.8,"NM","B","TMGRPC3H",8)

"BLD",8436,"KRN",9.8,"NM","B","TMGRPC3I",9)

"BLD",8436,"KRN",19,0)
19
"BLD",8436,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",8436,"KRN",19,"NM",1,0)
TMG RPC CONTEXT GUI_CONFIG^^0
"BLD",8436,"KRN",19,"NM","B","TMG RPC CONTEXT GUI_CONFIG",1)

"BLD",8436,"KRN",19.1,0)
19.1
"BLD",8436,"KRN",101,0)
101
"BLD",8436,"KRN",409.61,0)
409.61
"BLD",8436,"KRN",771,0)
771
"BLD",8436,"KRN",779.2,0)
779.2
"BLD",8436,"KRN",870,0)
870
"BLD",8436,"KRN",8989.51,0)
8989.51
"BLD",8436,"KRN",8989.52,0)
8989.52
"BLD",8436,"KRN",8994,0)
8994
"BLD",8436,"KRN",8994,"NM",0)
^9.68A^1^1
"BLD",8436,"KRN",8994,"NM",1,0)
TMG CHANNEL^^0
"BLD",8436,"KRN",8994,"NM","B","TMG CHANNEL",1)

"BLD",8436,"KRN","B",.4,.4)

"BLD",8436,"KRN","B",.401,.401)

"BLD",8436,"KRN","B",.402,.402)

"BLD",8436,"KRN","B",.403,.403)

"BLD",8436,"KRN","B",.5,.5)

"BLD",8436,"KRN","B",.84,.84)

"BLD",8436,"KRN","B",3.6,3.6)

"BLD",8436,"KRN","B",3.8,3.8)

"BLD",8436,"KRN","B",9.2,9.2)

"BLD",8436,"KRN","B",9.8,9.8)

"BLD",8436,"KRN","B",19,19)

"BLD",8436,"KRN","B",19.1,19.1)

"BLD",8436,"KRN","B",101,101)

"BLD",8436,"KRN","B",409.61,409.61)

"BLD",8436,"KRN","B",771,771)

"BLD",8436,"KRN","B",779.2,779.2)

"BLD",8436,"KRN","B",870,870)

"BLD",8436,"KRN","B",8989.51,8989.51)

"BLD",8436,"KRN","B",8989.52,8989.52)

"BLD",8436,"KRN","B",8994,8994)

"BLD",8436,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",8436,"QUES",0)
^9.62^^
"KRN",19,10924,-1)
0^1
"KRN",19,10924,0)
TMG RPC CONTEXT GUI_CONFIG^GUIConfig 1.0.0.0^^B^^^^^^^^FP OF GREENEVILLE (TMG)
"KRN",19,10924,1,0)
^^2^2^3080720^^
"KRN",19,10924,1,1,0)
This will be the context file for GUI_Config
"KRN",19,10924,1,2,0)
It will hold the list of all allowed RPC calls.
"KRN",19,10924,"RPC",0)
^19.05P^1^1
"KRN",19,10924,"RPC",1,0)
TMG CHANNEL
"KRN",19,10924,"U")
GUICONFIG 1.0.0.0
"KRN",8994,2379,-1)
0^1
"KRN",8994,2379,0)
TMG CHANNEL^CHANNEL^TMGRPC3^2^^^^1^1
"KRN",8994,2379,1,0)
^8994.01^2^2^3140327^^^^
"KRN",8994,2379,1,1,0)
This RPC will be used to pass multiple requests back 
"KRN",8994,2379,1,2,0)
and forth from client to server
"KRN",8994,2379,2,0)
^8994.02A^1^1
"KRN",8994,2379,2,1,0)
INPUT^2^^1^1
"KRN",8994,2379,2,1,1,0)
^8994.021^2^2^3080805^^^
"KRN",8994,2379,2,1,1,1,0)
This is the data array sent from client.
"KRN",8994,2379,2,1,1,2,0)
Format still to be decided.
"KRN",8994,2379,2,"B","INPUT",1)

"KRN",8994,2379,2,"PARAMSEQ",1,1)

"KRN",8994,2379,3,0)
^8994.03^3^3^3140327^^^^
"KRN",8994,2379,3,1,0)
This is the result array passed from server back to client.
"KRN",8994,2379,3,2,0)
Format still to be decided.
"KRN",8994,2379,3,3,0)
See documentation in CHANNEL^TMGRPC3
"MBREQ")
0
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
9
"RTN","TMGRPC3")
0^1^B369191340
"RTN","TMGRPC3",1,0)
TMGRPC3 ;TMG/kst/RPC Functions for GUI_Config ;7/6/11, 2/10/13, 2/2/14
"RTN","TMGRPC3",2,0)
         ;;1.0;TMG-LIB;**1**;08/31/08;Build 9
"RTN","TMGRPC3",3,0)
 ;
"RTN","TMGRPC3",4,0)
 ;"TMG RPC FUNCTIONS for a GUI config program -- (AND CPRS uses this too)
"RTN","TMGRPC3",5,0)
 ;
"RTN","TMGRPC3",6,0)
 ;"Kevin Toppenberg MD
"RTN","TMGRPC3",7,0)
 ;"GNU Lessor General Public License (LGPL) applies
"RTN","TMGRPC3",8,0)
 ;"7/20/08
"RTN","TMGRPC3",9,0)
 ;
"RTN","TMGRPC3",10,0)
 ;"=======================================================================
"RTN","TMGRPC3",11,0)
 ;" RPC -- Public Functions.
"RTN","TMGRPC3",12,0)
 ;"=======================================================================
"RTN","TMGRPC3",13,0)
 ;"CHANNEL(TMGRESULT,INPUT) -- general purpose channel RPC from a GUI config program
"RTN","TMGRPC3",14,0)
 ;
"RTN","TMGRPC3",15,0)
 ;"=======================================================================
"RTN","TMGRPC3",16,0)
 ;"Dependencies:
"RTN","TMGRPC3",17,0)
 ;"  TMGRPC3* only
"RTN","TMGRPC3",18,0)
 ;
"RTN","TMGRPC3",19,0)
 ;"=======================================================================
"RTN","TMGRPC3",20,0)
 ;
"RTN","TMGRPC3",21,0)
CHANNEL(TMGRESULT,INPUT) ;
"RTN","TMGRPC3",22,0)
        ;"Purpose: This will be a general purpose channel RPC from a GUI config program
"RTN","TMGRPC3",23,0)
        ;"         Also used by FM Desktop program,
"RTN","TMGRPC3",24,0)
        ;"Input: TMGRESULT -- this is an OUT parameter, and it is always passed by reference
"RTN","TMGRPC3",25,0)
        ;"       INPUT -- this will be array of data sent from the GUI client.  Defined below:
"RTN","TMGRPC3",26,0)
        ;"            <Stuff will go here>
"RTN","TMGRPC3",27,0)
        ;"            INPUT("REQUEST")="cmd^params"  Valid values for "cmd" are:
"RTN","TMGRPC3",28,0)
        ;"              "GET USER LIST"
"RTN","TMGRPC3",29,0)
        ;"                   params: <empty> or NODISUSER
"RTN","TMGRPC3",30,0)
        ;"              "GET RECORDS LIST"  -- get list of all .01 fields for file.
"RTN","TMGRPC3",31,0)
        ;"                   params: FileNumber  (e.g. 'GET RECORDS LIST^8989.3')
"RTN","TMGRPC3",32,0)
        ;"              "GET ONE USER"
"RTN","TMGRPC3",33,0)
        ;"                   params: IEN (e.g. 'GET ONE USER^12345')
"RTN","TMGRPC3",34,0)
        ;"              "GET ONE RECORD"
"RTN","TMGRPC3",35,0)
        ;"                   params: FileNum^IENS (e.g. 'GET ONE RECORD^200^73,')
"RTN","TMGRPC3",36,0)
        ;"              "GET ONE FIELD"
"RTN","TMGRPC3",37,0)
        ;"                   params: FileNum^IENS^FldNum (e.g. 'GET ONE RECORD^200^73,^.05')
"RTN","TMGRPC3",38,0)
        ;"                   Note: FldNum can be name or number or computed expression.
"RTN","TMGRPC3",39,0)
        ;"              "GET ONE WP FIELD"
"RTN","TMGRPC3",40,0)
        ;"                   params: FileNum^Field^IENS^ (e.g. 'GET ONE WP FIELD^200^2^73,')
"RTN","TMGRPC3",41,0)
        ;"              "FILE ENTRY SUBSET"
"RTN","TMGRPC3",42,0)
        ;"                   params: FileNum^ListStartValue^direction^[MaxCount]^[IENS]^[SCREEN]
"RTN","TMGRPC3",43,0)
        ;"              "SUBFILE ENTRY SUBSET"
"RTN","TMGRPC3",44,0)
        ;"                   params: SubfileNum^IENS^ListStartValue^direction^[MaxCount]^[SCREEN]
"RTN","TMGRPC3",45,0)
        ;"              "GET SUB RECS LIST"  -- get all .01 sub record entries for a subfile
"RTN","TMGRPC3",46,0)
        ;"                   params: SubFileNum^ParentIENS^Fields
"RTN","TMGRPC3",47,0)
        ;"                          Fields is a fields string to pass to LIST^DIC
"RTN","TMGRPC3",48,0)
        ;"              "GET EXPANDED FILENAME"
"RTN","TMGRPC3",49,0)
        ;"                   params: Filenum (or a File Name)
"RTN","TMGRPC3",50,0)
        ;"              "POST DATA"
"RTN","TMGRPC3",51,0)
        ;"                   params: (not used)
"RTN","TMGRPC3",52,0)
        ;"                   INPUT(0)=FileNum^IENS^FieldNum^FieldName^newValue^oldValue
"RTN","TMGRPC3",53,0)
        ;"                   INPUT(1)=FileNum^IENS^FieldNum^FieldName^newValue^oldValue
"RTN","TMGRPC3",54,0)
        ;"                   ...    (note: FieldName and oldValue are not used)
"RTN","TMGRPC3",55,0)
        ;"              "POST WP FIELD"
"RTN","TMGRPC3",56,0)
        ;"                   params: FileNum^FieldNum^IENS (e.g. 'POST WP FIELD^200^2^73,')
"RTN","TMGRPC3",57,0)
        ;"                   WP field itself is stored as follows:
"RTN","TMGRPC3",58,0)
        ;"                   INPUT(0)=0TH line
"RTN","TMGRPC3",59,0)
        ;"                   INPUT(1)=1st line
"RTN","TMGRPC3",60,0)
        ;"                   INPUT(2)=2nd line
"RTN","TMGRPC3",61,0)
        ;"                   ...
"RTN","TMGRPC3",62,0)
        ;"                   Note: don't include INPUT("REQUEST") with text.
"RTN","TMGRPC3",63,0)
        ;"              "GET EMPTY ENTRY"  -- getting stub entries for subfiles typically
"RTN","TMGRPC3",64,0)
        ;"                   params: file entry (file or subfile number)
"RTN","TMGRPC3",65,0)
        ;"              "GET CURRENT USER NAME" -- return name of DUZ (current) user
"RTN","TMGRPC3",66,0)
        ;"                   (params: not used)
"RTN","TMGRPC3",67,0)
        ;"              "CLONE USER"
"RTN","TMGRPC3",68,0)
        ;"                   params: SourceIENS^New.01Value
"RTN","TMGRPC3",69,0)
        ;"              "CLONE RECORD"
"RTN","TMGRPC3",70,0)
        ;"                   params: FileNum^SourceIENS^New.01Value
"RTN","TMGRPC3",71,0)
        ;"              "GET HELP MSG"
"RTN","TMGRPC3",72,0)
        ;"                   params     : FileNum^FieldNum^HelpType^IENS
"RTN","TMGRPC3",73,0)
        ;"              "IS WP FIELD"
"RTN","TMGRPC3",74,0)
        ;"                   params: FileNum^FieldNum
"RTN","TMGRPC3",75,0)
        ;"              "GET ONE WP FIELD" -- retrieve on word processing (WP) field entry
"RTN","TMGRPC3",76,0)
        ;"                   param -- FileNum^Field^IENS (e.g. 'GET ONE WP FIELD^200^2^73,')
"RTN","TMGRPC3",77,0)
        ;"              "REGISTER PATIENT"
"RTN","TMGRPC3",78,0)
        ;"                   param -- FieldNum1^FieldValue1^FieldNum2^FieldValue2^FieldNum3^FieldValue3^...
"RTN","TMGRPC3",79,0)
        ;"              "GET FIELD INFO"
"RTN","TMGRPC3",80,0)
        ;"                   param -- FileNum^Field
"RTN","TMGRPC3",81,0)
        ;"              "GET ALL FIELDS INFO"
"RTN","TMGRPC3",82,0)
        ;"                   param -- FileNum
"RTN","TMGRPC3",83,0)
        ;"              "DATE TO FMDATE"
"RTN","TMGRPC3",84,0)
        ;"                   param -- Date in external format
"RTN","TMGRPC3",85,0)
        ;"              "GET FMDESKTOP VIEWS"
"RTN","TMGRPC3",86,0)
        ;"                   param -- not used
"RTN","TMGRPC3",87,0)
        ;"              "SAVE FMDESKTOP VIEW"
"RTN","TMGRPC3",88,0)
        ;"                   param -- IEN(or +1)^Name^Shared
"RTN","TMGRPC3",89,0)
        ;"                   Note: this will support sending TWO WP fields at once.
"RTN","TMGRPC3",90,0)
        ;"                   The lines will be sent contigously, but the two fields will
"RTN","TMGRPC3",91,0)
        ;"                   be separated by a specific tag, as below.
"RTN","TMGRPC3",92,0)
        ;"                   WP lines stored as follows:
"RTN","TMGRPC3",93,0)
        ;"                   INPUT(0)=1st line of Description
"RTN","TMGRPC3",94,0)
        ;"                   INPUT(1)=2nd line of Description
"RTN","TMGRPC3",95,0)
        ;"                   INPUT(2)=3rd line of Description
"RTN","TMGRPC3",96,0)
        ;"                   ...
"RTN","TMGRPC3",97,0)
        ;"                   INPUT(17)="{{START OF DATA}}"  <-- tag must match exactly
"RTN","TMGRPC3",98,0)
        ;"                   INPUT(18)=1st line of Data
"RTN","TMGRPC3",99,0)
        ;"                   INPUT(29)=2nd line of Data
"RTN","TMGRPC3",100,0)
        ;"                   ...
"RTN","TMGRPC3",101,0)
        ;"                   Note: IF Description or Data is not provided when sending
"RTN","TMGRPC3",102,0)
        ;"                         data for an existing IEN, then prior results will
"RTN","TMGRPC3",103,0)
        ;"                         be deleted.
"RTN","TMGRPC3",104,0)
        ;"              "GET REMINDER DIALOG INFO"  -- return info about file REMINDER DIALOG (#801.41)
"RTN","TMGRPC3",105,0)
        ;"                   param -- not used
"RTN","TMGRPC3",106,0)
        ;"              "REMINDER DIALOG MOVE ELEMENT" -- Change ownership of a dialog element
"RTN","TMGRPC3",107,0)
        ;"                   param -- ElementIEN^CurrentParentIEN^NewParentIEN^[NewSequenceNum] -- all IEN's are from file 801.41
"RTN","TMGRPC3",108,0)
        ;"              "GET REMINDER TAXONOMY INQUIRE" 
"RTN","TMGRPC3",109,0)
        ;"                   param -- IEN from file 811.2
"RTN","TMGRPC3",110,0)
        ;"              "GET REMINDER TEST" 
"RTN","TMGRPC3",111,0)
        ;"                   params: ReminderIEN^DFNorPatientName^AsOfDate(External format)^DisplayAllTerms(Y/N)
"RTN","TMGRPC3",112,0)
        ;"              "GET REMINDER DLG ITEM TREE ROOTS"
"RTN","TMGRPC3",113,0)
        ;"                   param -- IEN from file 801.41
"RTN","TMGRPC3",114,0)
        ;"              "REMINDER DIALOG COPY TREE"
"RTN","TMGRPC3",115,0)
        ;"                   param -- IEN^Namespace^AcceptList
"RTN","TMGRPC3",116,0)
        ;"                      IEN - IEN in REMINDER DIALOG (801.41) file.
"RTN","TMGRPC3",117,0)
        ;"                      NAMESPACE -- prefixed to .01 field (name).  
"RTN","TMGRPC3",118,0)
        ;"                              E.g. IF NAMESPACE="ZZ", and prior name was "VA-HTN", 
"RTN","TMGRPC3",119,0)
        ;"                              then NEW name will be "ZZ-VA-HTN"
"RTN","TMGRPC3",120,0)
        ;"                      AcceptList -- semicolon delimited.  
"RTN","TMGRPC3",121,0)
        ;"                              List of component names spaces to accept
"RTN","TMGRPC3",122,0)
        ;"                              e.g. DG PH;ED;VA-HDL
"RTN","TMGRPC3",123,0)
        ;"                              If Reminder dialog subcomponents were to refer to a standard
"RTN","TMGRPC3",124,0)
        ;"                              library, and when copying a parent, these library items should
"RTN","TMGRPC3",125,0)
        ;"                              not also be copied, then these items should be noted in the
"RTN","TMGRPC3",126,0)
        ;"                              E.g. "DG PH" <-- will cause all subcomponents with
"RTN","TMGRPC3",127,0)
        ;"                                     names starting with "DG PH" to not be copied
"RTN","TMGRPC3",128,0)
        ;"                                   "ED" <-- all with name starting with "ED" not copied.
"RTN","TMGRPC3",129,0)
        ;"              "GET REMINDER DLG CHILD LIST" 
"RTN","TMGRPC3",130,0)
        ;"                   param -- IEN 
"RTN","TMGRPC3",131,0)
        ;"                              IEN is from REMINDER DIALOG (801.41) file.
"RTN","TMGRPC3",132,0)
        ;"              "FIND ONE RECORD"  -- Wrapper for $$FIND1^DIC()
"RTN","TMGRPC3",133,0)
        ;"                   params: File^IENS^Value^Flags^Indexes^Screen        
"RTN","TMGRPC3",134,0)
        ;"                   See Fileman reference for details of input values.
"RTN","TMGRPC3",135,0)
        ;"                   Note: Indexes should be delimited with ";", not "^" -- e.g. B;C;D 
"RTN","TMGRPC3",136,0)
        ;"                         Screen code can not contain "^"
"RTN","TMGRPC3",137,0)
        ;"              "FIND RECORDS"  -- Wrapper for FIND^DIC()
"RTN","TMGRPC3",138,0)
        ;"                   param: File^IENS^Value^Fields^Flags^Number^Indexes^Screen^Identifier        
"RTN","TMGRPC3",139,0)
        ;"                   See Fileman reference for details of input values.
"RTN","TMGRPC3",140,0)
        ;"                   Note: Indexes should be delimited with ";", not "^" -- e.g. B;C;D 
"RTN","TMGRPC3",141,0)
        ;"                         Screen code can not contain "^"
"RTN","TMGRPC3",142,0)
        ;"              "GET CODE ROUTINE" -- Retrieve mumps code in Routine.        
"RTN","TMGRPC3",143,0)
        ;"                   param -- RoutineName 
"RTN","TMGRPC3",144,0)
        ;"              "GET FUNC FINDING ARG SIGNATURE" -- returns function arguments signature
"RTN","TMGRPC3",145,0)
        ;"                   param -- function finding name (name of record in 802.4)
"RTN","TMGRPC3",146,0)
        ;"                   ...
"RTN","TMGRPC3",147,0)
        ;"Output: results of this function should be put into TMGRESULTS array.
"RTN","TMGRPC3",148,0)
        ;"        For cmd:
"RTN","TMGRPC3",149,0)
        ;"          "GET USER LIST"
"RTN","TMGRPC3",150,0)
        ;"            TMGRESULT(0)="1^Success" or "-1^Message"
"RTN","TMGRPC3",151,0)
        ;"            TMGRESULT(1)=Name^IEN^200^DISUSER   DISUSER will be 1 for "Y" or 0 for "N"
"RTN","TMGRPC3",152,0)
        ;"            TMGRESULT(2)=Name^IEN^200^DISUSER
"RTN","TMGRPC3",153,0)
        ;"            etc ...
"RTN","TMGRPC3",154,0)
        ;"          "GET RECORDS LIST"
"RTN","TMGRPC3",155,0)
        ;"            TMGRESULT(0)="1^Success" or "-1^Message"
"RTN","TMGRPC3",156,0)
        ;"            TMGRESULT(1)=.01Value^IEN^FileNum
"RTN","TMGRPC3",157,0)
        ;"            TMGRESULT(2)=.01Value^IEN^FileNum
"RTN","TMGRPC3",158,0)
        ;"            etc ...
"RTN","TMGRPC3",159,0)
        ;"          "GET ONE USER"
"RTN","TMGRPC3",160,0)
        ;"            TMGRESULT(0)="1^Success" or "-1^Message"
"RTN","TMGRPC3",161,0)
        ;"            TMGRESULT(1)=File^IENS^FieldNum^ExternalValue^DDInfo...
"RTN","TMGRPC3",162,0)
        ;"            TMGRESULT(2)=File^IENS^FieldNum^ExternalValue^DDInfo...
"RTN","TMGRPC3",163,0)
        ;"            etc ...
"RTN","TMGRPC3",164,0)
        ;"          "GET ONE RECORD"
"RTN","TMGRPC3",165,0)
        ;"            TMGRESULT(0)="1^Success" or "-1^Message"
"RTN","TMGRPC3",166,0)
        ;"            TMGRESULT(1)=File^IENS^FieldNum^ExternalValue^DDInfo...
"RTN","TMGRPC3",167,0)
        ;"            TMGRESULT(2)=File^IENS^FieldNum^ExternalValue^DDInfo...
"RTN","TMGRPC3",168,0)
        ;"            ...
"RTN","TMGRPC3",169,0)
        ;"            (note: the quotes (') shown below are NOT included.  Shown below to indicate that these ascii chars are sent)
"RTN","TMGRPC3",170,0)
        ;"            (the V nodes are only sent when a field of variable pointer type is sent back.)
"RTN","TMGRPC3",171,0)
        ;"            TMGRESULT(10)='INFO'^'DD'^FileNum^FieldNum^'V',1,0)&=&<DD ENTRY>
"RTN","TMGRPC3",172,0)
        ;"            TMGRESULT(12)='INFO'^'DD'^FileNum^FieldNum^'V',2,0)&=&<DD ENTRY>
"RTN","TMGRPC3",173,0)
        ;"            TMGRESULT(13)='INFO'^'DD'^FileNum^FieldNum^'V',3,0)&=&<DD ENTRY>
"RTN","TMGRPC3",174,0)
        ;"            ...
"RTN","TMGRPC3",175,0)
        ;"          "GET ONE FIELD"
"RTN","TMGRPC3",176,0)
        ;"            TMGRESULT(0)="1^Success" or "-1^Message"
"RTN","TMGRPC3",177,0)
        ;"            TMGRESULT(1)=File^IENS^FieldNum^ExternalValue
"RTN","TMGRPC3",178,0)
        ;"          "GET ONE WP FIELD"
"RTN","TMGRPC3",179,0)
        ;"            TMGRESULT(0): "1^Success" or "-1^Message"
"RTN","TMGRPC3",180,0)
        ;"            TMGRESULT(1) will contain Fileman error, IF any
"RTN","TMGRPC3",181,0)
        ;"            - or to return WP array -
"RTN","TMGRPC3",182,0)
        ;"            TMGRESULT(1)=1st line of text
"RTN","TMGRPC3",183,0)
        ;"            TMGRESULT(2)=2nd line of text
"RTN","TMGRPC3",184,0)
        ;"            etc..
"RTN","TMGRPC3",185,0)
        ;"          "FILE ENTRY SUBSET"
"RTN","TMGRPC3",186,0)
        ;"            TMGRESULT(0)="1^Success" or "-1^Message"
"RTN","TMGRPC3",187,0)
        ;"            TMGRESULT(1)=Value
"RTN","TMGRPC3",188,0)
        ;"            TMGRESULT(2)=Value
"RTN","TMGRPC3",189,0)
        ;"            etc ...
"RTN","TMGRPC3",190,0)
        ;"          "SUBFILE ENTRY SUBSET"
"RTN","TMGRPC3",191,0)
        ;"            TMGRESULT(0)="1^Success" or "-1^Message"
"RTN","TMGRPC3",192,0)
        ;"            TMGRESULT(1)=Value
"RTN","TMGRPC3",193,0)
        ;"            TMGRESULT(2)=Value
"RTN","TMGRPC3",194,0)
        ;"            etc ...
"RTN","TMGRPC3",195,0)
        ;"          "GET SUB RECS LIST"
"RTN","TMGRPC3",196,0)
        ;"            TMGRESULT(0)="1^Success^<Map>" or "-1^Message"
"RTN","TMGRPC3",197,0)
        ;"                <Map> gives the label name for each piece of the output.
"RTN","TMGRPC3",198,0)
        ;"                     e.g. 'IEN^IX(1)^,01^2I^WID(WRITE)'
"RTN","TMGRPC3",199,0)
        ;"            TMGRESULT(1)=IEN^Value
"RTN","TMGRPC3",200,0)
        ;"            TMGRESULT(2)=IEN^Value
"RTN","TMGRPC3",201,0)
        ;"            ...
"RTN","TMGRPC3",202,0)
        ;"          "GET EXPANDED FILENAME"
"RTN","TMGRPC3",203,0)
        ;"            TMGRESULT(0)="1^Success" or "-1^Message"
"RTN","TMGRPC3",204,0)
        ;"            TMGRESULT(1)=GRANDPARENTFILENAME:PARENTILENAME:FILENAME^FILENUMBER
"RTN","TMGRPC3",205,0)
        ;"          "POST DATA"
"RTN","TMGRPC3",206,0)
        ;"            TMGRESULT(0)="1^Success" or "-1^Message"
"RTN","TMGRPC3",207,0)
        ;"            TMGRESULT(1)=Fileman message (long) (if generated)
"RTN","TMGRPC3",208,0)
        ;"            -or (if +1 etc values used)-
"RTN","TMGRPC3",209,0)
        ;"            TMGRESULT(1)=+5^1234  <--  results of IEN array returned (+5 converted to record 1234)
"RTN","TMGRPC3",210,0)
        ;"            TMGRESULT(2)=+3^2341  <--  results of IEN array returned (+3 converted to record 2341)
"RTN","TMGRPC3",211,0)
        ;"            ...
"RTN","TMGRPC3",212,0)
        ;"          "GET EMPTY ENTRY"
"RTN","TMGRPC3",213,0)
        ;"            TMGRESULT(0)="1^Success" or "-1^Message"
"RTN","TMGRPC3",214,0)
        ;"            TMGRESULT(1)=File^^FieldNum^^DDInfo...
"RTN","TMGRPC3",215,0)
        ;"            TMGRESULT(2)=File^^FieldNum^^DDInfo...
"RTN","TMGRPC3",216,0)
        ;"            etc ...
"RTN","TMGRPC3",217,0)
        ;"          "GET CURRENT USER NAME" -- return name of DUZ (current) user
"RTN","TMGRPC3",218,0)
        ;"            TMGRESULT(0)="1^Success^UserName" or "-1^Message"
"RTN","TMGRPC3",219,0)
        ;"          "CLONE USER"
"RTN","TMGRPC3",220,0)
        ;"            TMGRESULT(0)="1^Success^NewIENS" or "-1^Message"
"RTN","TMGRPC3",221,0)
        ;"            TMGRESULT(1)=Long Fileman message (if -1 error)
"RTN","TMGRPC3",222,0)
        ;"          "CLONE RECORD"
"RTN","TMGRPC3",223,0)
        ;"            TMGRESULT(0)="1^Success^NewIENS" or "-1^Message"
"RTN","TMGRPC3",224,0)
        ;"            TMGRESULT(1)=Fileman message (long) (if generated)
"RTN","TMGRPC3",225,0)
        ;"          "GET HELP MSG"
"RTN","TMGRPC3",226,0)
        ;"            TMGRESULT(0)="1^Success^NewIENS" or "-1^Message"
"RTN","TMGRPC3",227,0)
        ;"            TMGRESULT(1)=Fileman message (long) (if generated)
"RTN","TMGRPC3",228,0)
        ;"          "IS WP FIELD"
"RTN","TMGRPC3",229,0)
        ;"            TMGRESULT(0)="1^Success^YES/NO" or "-1^Message"
"RTN","TMGRPC3",230,0)
        ;"            "YES" IF is a WP subfile, otherwise "NO"
"RTN","TMGRPC3",231,0)
        ;"            TMGRESULT(1)=Fileman message (long) (if generated)
"RTN","TMGRPC3",232,0)
        ;"          "REGISTER PATIENT"
"RTN","TMGRPC3",233,0)
        ;"            TMGRESULT(0)="1^Success^NewIEN" or
"RTN","TMGRPC3",234,0)
        ;"                         "-1^Message"    Frank failure...  or
"RTN","TMGRPC3",235,0)
        ;"                         "0^BoolAndMessage^NewIEN".  Format:
"RTN","TMGRPC3",236,0)
        ;"                       [Bool1;Bool2;Bool3;Bool4;Bool5*MessageText]  (e.g. '1;0;1;0;0*ErrorMsg')
"RTN","TMGRPC3",237,0)
        ;"                         (for Bool fields, 0=no or 1=yes)
"RTN","TMGRPC3",238,0)
        ;"                         Bool1 -- patient had previously been registered
"RTN","TMGRPC3",239,0)
        ;"                         Bool2 -- patient registered during this Fn
"RTN","TMGRPC3",240,0)
        ;"                         Bool3 -- problem filing data into non-identifier fields
"RTN","TMGRPC3",241,0)
        ;"                         Bool4 -- problem filing data into sub-file fields
"RTN","TMGRPC3",242,0)
        ;"                         Bool5 -- problem with filing HRN
"RTN","TMGRPC3",243,0)
        ;"            TMGRESULT(1)=Long Fileman message (if -1 error, or perhaps 0 code)
"RTN","TMGRPC3",244,0)
        ;"          "GET FIELD INFO"
"RTN","TMGRPC3",245,0)
        ;"            TMGRESULT(0)="1^Success^NewIENS" or "-1^Message"
"RTN","TMGRPC3",246,0)
        ;"            TMGRESULT(1)=Returns the 0 node from ^DD(File,Fieldnum,0)
"RTN","TMGRPC3",247,0)
        ;"          "GET ALL FIELDS INFO"
"RTN","TMGRPC3",248,0)
        ;"            TMGRESULT(0)="1^Success^NewIENS" or "-1^Message"
"RTN","TMGRPC3",249,0)
        ;"            TMGRESULT(1)=FileNum^FldNum^{Returns the 0 node from ^DD(File,Fieldnum,0)}
"RTN","TMGRPC3",250,0)
        ;"            TMGRESULT(2)=FileNum^FldNum^{Returns the 0 node from ^DD(File,Fieldnum,0)}  ... etc.
"RTN","TMGRPC3",251,0)
        ;"            NOTE: If the DD info contains a pointer to another file (or subfile or WP field), then that is also sent.
"RTN","TMGRPC3",252,0)
        ;"            e.g.TMGRESULT(3)=P2FILE^.01^DDInfo
"RTN","TMGRPC3",253,0)
        ;"          "DATE TO FMDATE"
"RTN","TMGRPC3",254,0)
        ;"            TMGRESULT(0)="-1^Error Message" or "1^FMDateTime"
"RTN","TMGRPC3",255,0)
        ;"          "GET FMDESKTOP SAVES"
"RTN","TMGRPC3",256,0)
        ;"            TMGRESULT(0)="1^Success" or "-1^Error Message"
"RTN","TMGRPC3",257,0)
        ;"            TMGRESULT(1)=SELF or OTHERS^Shared(Y/N)^Name^Owner^DateCreated^IEN in 22714
"RTN","TMGRPC3",258,0)
        ;"            TMGRESULT(2)=SELF or OTHERS^Shared(Y/N)^Name^Owner^DateCreated^IEN in 22714  ... etc
"RTN","TMGRPC3",259,0)
        ;"          "GET REMINDER DIALOG INFO"
"RTN","TMGRPC3",260,0)
        ;"            TMGRESULT(0)="1^Success" or "-1^Message"
"RTN","TMGRPC3",261,0)
        ;"            TMGRESULT(#)= (as below)
"RTN","TMGRPC3",262,0)
        ;"               piece#   Description
"RTN","TMGRPC3",263,0)
        ;"                1       IEN801.4
"RTN","TMGRPC3",264,0)
        ;"                2       Reminder dialog name
"RTN","TMGRPC3",265,0)
        ;"                ----- Below to match output from ORWCV START and ORWCV POL ----
"RTN","TMGRPC3",266,0)
        ;"                ----- only included IF there is a matching reminder definition ----
"RTN","TMGRPC3",267,0)
        ;"                3       IEN of linked REMINDER DEF (#811.9)    matches piece 1
"RTN","TMGRPC3",268,0)
        ;"                4       print name of REMINDER DEF             matches piece 2
"RTN","TMGRPC3",269,0)
        ;"                5-8     not used here                          matches piece 3-6
"RTN","TMGRPC3",270,0)
        ;"                9       Has linked active Rem Dlg (0 or 1)     matches piece 7
"RTN","TMGRPC3",271,0)
        ;"                10-12   not used here                          matches piece 8-10
"RTN","TMGRPC3",272,0)
        ;"                13      Additional check "DLGWIPE" (0 or 1)    matches piece 11
"RTN","TMGRPC3",273,0)
        ;"             e.g. TMGRESULT(1464)='663000719^VA-ALCOHOL F/U POS AUDIT-C^925^Positive AUDIT-C Needs Evaluation^^^^^1^^^^1'
"RTN","TMGRPC3",274,0)
        ;"          "REMINDER DIALOG MOVE ELEMENT"
"RTN","TMGRPC3",275,0)
        ;"            TMGRESULT(0)="1^Success^NewIENS" or "-1^Message"
"RTN","TMGRPC3",276,0)
        ;"               NewIENS is the IENS of the record *in the parent's elements list* (subfile 801.412)
"RTN","TMGRPC3",277,0)
        ;"          "REMINDER DIALOG COPY TREE"
"RTN","TMGRPC3",278,0)
        ;"            TMGRESULT(0)="1^Success^IENOfNewDialogTreeRoot^NewName" or "-1^Error Message"
"RTN","TMGRPC3",279,0)
        ;"          "GET REMINDER DLG CHILD LIST" 
"RTN","TMGRPC3",280,0)
        ;"            TMGRESULT(0)="1^Success^NewIENS" or "-1^Message"
"RTN","TMGRPC3",281,0)
        ;"            TMGRESULT(1)= <Child Element Name>
"RTN","TMGRPC3",282,0)
        ;"            TMGRESULT(2)= <Child Element Name>  etc.
"RTN","TMGRPC3",283,0)
        ;"          "GET REMINDER TAXONOMY INQUIRE" 
"RTN","TMGRPC3",284,0)
        ;"              param -- IEN from file 811.2
"RTN","TMGRPC3",285,0)
        ;"            TMGRESULT(0)="1^Success" or "-1^Error Message"
"RTN","TMGRPC3",286,0)
        ;"            TMGRESULT(1)=First line of report
"RTN","TMGRPC3",287,0)
        ;"            TMGRESULT(2)=Second line of report ...
"RTN","TMGRPC3",288,0)
        ;"          "GET REMINDER TEST" 
"RTN","TMGRPC3",289,0)
        ;"            TMGRESULT(0)="1^Success" or "-1^Error Message"
"RTN","TMGRPC3",290,0)
        ;"            TMGRESULT(1)=First line of report
"RTN","TMGRPC3",291,0)
        ;"            TMGRESULT(2)=Second line of report ...
"RTN","TMGRPC3",292,0)
        ;"          "GET REMINDER DLG ITEM TREE ROOTS"
"RTN","TMGRPC3",293,0)
        ;"            TMGRESULT(0)="1^Success" or "-1^Error Message"
"RTN","TMGRPC3",294,0)
        ;"            TMGRESULT(#)=IEN^Name
"RTN","TMGRPC3",295,0)
        ;"          "FIND ONE RECORD"  
"RTN","TMGRPC3",296,0)
        ;"            TMGRESULT(0)="1^FoundIEN" or "-1^Message"
"RTN","TMGRPC3",297,0)
        ;"          "FIND RECORDS" 
"RTN","TMGRPC3",298,0)
        ;"            TMGRESULT(0)="1^Success" or "-1^Error Message"
"RTN","TMGRPC3",299,0)
        ;"            TMGRESULT(#)=lines from output of FIND^DIC.  See documentation.  Example:
"RTN","TMGRPC3",300,0)
        ;"            TMGRESULT(1)="SRCH(0)=""51^*^0"""
"RTN","TMGRPC3",301,0)
        ;"            TMGRESULT(2)="SRCH(0,""MAP"")=""FID(1)"""
"RTN","TMGRPC3",302,0)
        ;"            TMGRESULT(3)="SRCH(1,1)=""ANRV STATE LIST""  .... etc.
"RTN","TMGRPC3",303,0)
        ;"          "GET CODE ROUTINE"
"RTN","TMGRPC3",304,0)
        ;"            TMGRESULT(0): "1^Success" or "-1^Message"
"RTN","TMGRPC3",305,0)
        ;"            TMGRESULT(1)=1st line of text
"RTN","TMGRPC3",306,0)
        ;"            TMGRESULT(2)=2nd line of text
"RTN","TMGRPC3",307,0)
        ;"          "GET FUNC FINDING ARG SIGNATURE" -- returns function arguments signature
"RTN","TMGRPC3",308,0)
        ;"            TMGRESULT(0): "1^Success" or "-1^Message"
"RTN","TMGRPC3",309,0)
        ;"            TMGRESULT(1)=<result>
"RTN","TMGRPC3",310,0)
        ;"              <result> format:  X^X^X^X^X^....
"RTN","TMGRPC3",311,0)
        ;"              <X> is one of following codes: F=FINDING, N=NUMBER, S=STRING
"RTN","TMGRPC3",312,0)
        ;"              Piece position of code matches argument position.
"RTN","TMGRPC3",313,0)
        ;"              e.g. 'F^N^S'  means 1st param is function, 2nd is number, 3rd is string.        
"RTN","TMGRPC3",314,0)
        ;"Result: none
"RTN","TMGRPC3",315,0)
        ;
"RTN","TMGRPC3",316,0)
        NEW DEBUG SET DEBUG=0 ;"Set to 1 at runtime to use stored input
"RTN","TMGRPC3",317,0)
        IF DEBUG=0 DO
"RTN","TMGRPC3",318,0)
        . KILL ^TMG("TMP","RPC3")
"RTN","TMGRPC3",319,0)
        . MERGE ^TMG("TMP","RPC3","INPUT")=INPUT
"RTN","TMGRPC3",320,0)
        . SET ^TMG("TMP","RPC3","JOB")=$J
"RTN","TMGRPC3",321,0)
        ELSE  DO
"RTN","TMGRPC3",322,0)
        . KILL INPUT MERGE INPUT=^TMG("TMP","RPC3","INPUT")
"RTN","TMGRPC3",323,0)
        KILL TMGRESULT
"RTN","TMGRPC3",324,0)
        NEW TMGCOMMAND,TMGCOMMAND
"RTN","TMGRPC3",325,0)
        SET TMGCOMMAND=$$TRIM^XLFSTR($$UP^XLFSTR($PIECE($GET(INPUT("REQUEST")),"^",1)))
"RTN","TMGRPC3",326,0)
        SET TMGPARAMS=$$UP^XLFSTR($PIECE($GET(INPUT("REQUEST")),"^",2,199))
"RTN","TMGRPC3",327,0)
        NEW TMGORGPARAMS SET TMGORGPARAMS=$PIECE($GET(INPUT("REQUEST")),"^",2,199)
"RTN","TMGRPC3",328,0)
        SET TMGRESULT(0)="-1^No command requested. Got: '"_$GET(INPUT("REQUEST"))_"'"  ;"default to error state.
"RTN","TMGRPC3",329,0)
        IF TMGCOMMAND="GET USER LIST" DO  GOTO CHDN
"RTN","TMGRPC3",330,0)
        . DO GETUSRLT^TMGRPC3B(.TMGRESULT,TMGPARAMS)
"RTN","TMGRPC3",331,0)
        IF TMGCOMMAND="GET RECORDS LIST" DO  GOTO CHDN
"RTN","TMGRPC3",332,0)
        . DO GETRECLT^TMGRPC3B(.TMGRESULT,TMGPARAMS)
"RTN","TMGRPC3",333,0)
        ELSE  IF TMGCOMMAND="GET ONE USER" DO  GOTO CHDN
"RTN","TMGRPC3",334,0)
        . DO GET1USER^TMGRPC3B(.TMGRESULT,TMGPARAMS)
"RTN","TMGRPC3",335,0)
        ELSE  IF TMGCOMMAND="GET ONE RECORD" DO  GOTO CHDN
"RTN","TMGRPC3",336,0)
        . DO GET1REC^TMGRPC3B(.TMGRESULT,TMGPARAMS)
"RTN","TMGRPC3",337,0)
        ELSE  IF TMGCOMMAND="GET ONE FIELD" DO  GOTO CHDN
"RTN","TMGRPC3",338,0)
        . DO GET1FLD^TMGRPC3B(.TMGRESULT,TMGPARAMS)
"RTN","TMGRPC3",339,0)
        ELSE  IF TMGCOMMAND="GET FIELD INFO" DO  GOTO CHDN
"RTN","TMGRPC3",340,0)
        . DO GETFLDIF^TMGRPC3B(.TMGRESULT,TMGPARAMS)
"RTN","TMGRPC3",341,0)
        ELSE  IF TMGCOMMAND="GET ALL FIELDS INFO" DO  GOTO CHDN
"RTN","TMGRPC3",342,0)
        . DO GETAFINF^TMGRPC3B(.TMGRESULT,TMGPARAMS)
"RTN","TMGRPC3",343,0)
        ELSE  IF TMGCOMMAND="FILE ENTRY SUBSET" DO  GOTO CHDN
"RTN","TMGRPC3",344,0)
        . DO GFLSUBST^TMGRPC3B(.TMGRESULT,TMGORGPARAMS)
"RTN","TMGRPC3",345,0)
        ELSE  IF TMGCOMMAND="SUBFILE ENTRY SUBSET" DO  GOTO CHDN
"RTN","TMGRPC3",346,0)
        . DO GSFSUBST^TMGRPC3B(.TMGRESULT,TMGPARAMS)
"RTN","TMGRPC3",347,0)
        ELSE  IF TMGCOMMAND="GET SUB RECS LIST" DO  GOTO CHDN
"RTN","TMGRPC3",348,0)
        . DO GETSRLST^TMGRPC3D(.TMGRESULT,TMGPARAMS)
"RTN","TMGRPC3",349,0)
        ELSE  IF TMGCOMMAND="POST DATA" DO  GOTO CHDN
"RTN","TMGRPC3",350,0)
        . KILL INPUT("REQUEST")
"RTN","TMGRPC3",351,0)
        . MERGE ^TMG("POST DATA","INPUT")=INPUT
"RTN","TMGRPC3",352,0)
        . DO POSTDATA^TMGRPC3C(.TMGRESULT,.INPUT)
"RTN","TMGRPC3",353,0)
        ELSE  IF TMGCOMMAND="GET EMPTY ENTRY" DO  GOTO CHDN
"RTN","TMGRPC3",354,0)
        . DO GETEMPTY^TMGRPC3E(.TMGRESULT,TMGPARAMS)
"RTN","TMGRPC3",355,0)
        ELSE  IF TMGCOMMAND="GET CURRENT USER NAME" DO  GOTO CHDN
"RTN","TMGRPC3",356,0)
        . SET TMGRESULT(0)="1^Success^"_$PIECE($GET(^VA(200,DUZ,0)),"^",1)
"RTN","TMGRPC3",357,0)
        ELSE  IF TMGCOMMAND="CLONE RECORD" DO  GOTO CHDN
"RTN","TMGRPC3",358,0)
        . DO CLONEREC^TMGRPC3D(.TMGRESULT,TMGPARAMS)
"RTN","TMGRPC3",359,0)
        ELSE  IF TMGCOMMAND="CLONE USER" DO  GOTO CHDN
"RTN","TMGRPC3",360,0)
        . DO CLONEUSR^TMGRPC3D(.TMGRESULT,TMGPARAMS)
"RTN","TMGRPC3",361,0)
        ELSE  IF TMGCOMMAND="GET HELP MSG" DO  GOTO CHDN
"RTN","TMGRPC3",362,0)
        . DO GETHELPM^TMGRPC3E(.TMGRESULT,TMGPARAMS)
"RTN","TMGRPC3",363,0)
        ELSE  IF TMGCOMMAND="IS WP FIELD" DO  GOTO CHDN
"RTN","TMGRPC3",364,0)
        . DO GETIFWP^TMGRPC3E(.TMGRESULT,TMGPARAMS)
"RTN","TMGRPC3",365,0)
        ELSE  IF TMGCOMMAND="GET ONE WP FIELD" DO  GOTO CHDN
"RTN","TMGRPC3",366,0)
        . DO GETWPFLD^TMGRPC3E(.TMGRESULT,TMGPARAMS)
"RTN","TMGRPC3",367,0)
        ELSE  IF TMGCOMMAND="GET CODE ROUTINE" DO  GOTO CHDN
"RTN","TMGRPC3",368,0)
        . DO GETRCODE^TMGRPC3E(.TMGRESULT,TMGPARAMS)
"RTN","TMGRPC3",369,0)
        ELSE  IF TMGCOMMAND="DATE TO FMDATE" DO  GOTO CHDN
"RTN","TMGRPC3",370,0)
        . DO DTTOFMDT^TMGRPC3B(.TMGRESULT,TMGPARAMS)
"RTN","TMGRPC3",371,0)
        ELSE  IF TMGCOMMAND="GET EXPANDED FILENAME" DO  GOTO CHDN
"RTN","TMGRPC3",372,0)
        . DO EXPFNAME^TMGRPC3G(.TMGRESULT,TMGPARAMS)
"RTN","TMGRPC3",373,0)
        ELSE  IF TMGCOMMAND="POST WP FIELD" DO  GOTO CHDN
"RTN","TMGRPC3",374,0)
        . KILL INPUT("REQUEST")
"RTN","TMGRPC3",375,0)
        . DO PSTWPFLD^TMGRPC3E(.TMGRESULT,TMGPARAMS,.INPUT)
"RTN","TMGRPC3",376,0)
        ELSE  IF TMGCOMMAND="REGISTER PATIENT" DO  GOTO CHDN
"RTN","TMGRPC3",377,0)
        . DO REGPAT^TMGRPC3F(.TMGRESULT,TMGPARAMS)
"RTN","TMGRPC3",378,0)
        ELSE  IF TMGCOMMAND="GET FMDESKTOP VIEWS" DO  GOTO CHDN
"RTN","TMGRPC3",379,0)
        . DO GETFMDSV^TMGRPC3H(.TMGRESULT,TMGPARAMS)
"RTN","TMGRPC3",380,0)
        ELSE  IF TMGCOMMAND="SAVE FMDESKTOP VIEW" DO  GOTO CHDN
"RTN","TMGRPC3",381,0)
        . KILL INPUT("REQUEST")
"RTN","TMGRPC3",382,0)
        . DO SAVFMDV^TMGRPC3H(.TMGRESULT,TMGPARAMS,.INPUT)
"RTN","TMGRPC3",383,0)
        ELSE  IF TMGCOMMAND="GET REMINDER DIALOG INFO" DO  GOTO CHDN
"RTN","TMGRPC3",384,0)
        . DO GETDLGIF^TMGRPC3G(.TMGRESULT,TMGPARAMS)
"RTN","TMGRPC3",385,0)
        ELSE  IF TMGCOMMAND="REMINDER DIALOG MOVE ELEMENT" DO  GOTO CHDN
"RTN","TMGRPC3",386,0)
        . DO MOVDLGEL^TMGRPC3G(.TMGRESULT,TMGPARAMS)
"RTN","TMGRPC3",387,0)
        ELSE  IF TMGCOMMAND="GET REMINDER TAXONOMY INQUIRE" DO  GOTO CHDN
"RTN","TMGRPC3",388,0)
        . DO RPTPXRM^TMGRPC3G(.TMGRESULT,TMGPARAMS)
"RTN","TMGRPC3",389,0)
        ELSE  IF TMGCOMMAND="GET REMINDER TEST" DO  GOTO CHDN
"RTN","TMGRPC3",390,0)
        . DO TESTREM^TMGRPC3G(.TMGRESULT,TMGPARAMS)
"RTN","TMGRPC3",391,0)
        ELSE  IF TMGCOMMAND="GET REMINDER DLG ITEM TREE ROOTS" DO  GOTO CHDN
"RTN","TMGRPC3",392,0)
        . DO GDLGROOT^TMGRPC3G(.TMGRESULT,TMGPARAMS)
"RTN","TMGRPC3",393,0)
        ELSE  IF TMGCOMMAND="REMINDER DIALOG COPY TREE" DO  GOTO CHDN
"RTN","TMGRPC3",394,0)
        . DO DOCPYRMD^TMGRPC3G(.TMGRESULT,TMGPARAMS)
"RTN","TMGRPC3",395,0)
        ELSE  IF TMGCOMMAND="GET REMINDER DLG CHILD LIST" DO  GOTO CHDN
"RTN","TMGRPC3",396,0)
        . DO GETCHLST^TMGRPC3G(.TMGRESULT,TMGPARAMS)
"RTN","TMGRPC3",397,0)
        ELSE  IF TMGCOMMAND="FIND ONE RECORD" DO  GOTO CHDN
"RTN","TMGRPC3",398,0)
        . DO FIND1^TMGRPC3G(.TMGRESULT,TMGPARAMS)
"RTN","TMGRPC3",399,0)
        ELSE  IF TMGCOMMAND="FIND RECORDS" DO  GOTO CHDN
"RTN","TMGRPC3",400,0)
        . DO FIND^TMGRPC3G(.TMGRESULT,TMGPARAMS)
"RTN","TMGRPC3",401,0)
        ELSE  IF TMGCOMMAND="GET FUNC FINDING ARG SIGNATURE" DO  GOTO CHDN
"RTN","TMGRPC3",402,0)
        . DO GETFFNSG^TMGRPC3G(.TMGRESULT,TMGPARAMS) 
"RTN","TMGRPC3",403,0)
 
"RTN","TMGRPC3",404,0)
        ;"
"RTN","TMGRPC3",405,0)
CHDN    MERGE ^TMG("TMP","RPC3","RESULT")=TMGRESULT
"RTN","TMGRPC3",406,0)
        ;"
"RTN","TMGRPC3",407,0)
        QUIT
"RTN","TMGRPC3",408,0)
        ;
"RTN","TMGRPC3B")
0^3^B435765811
"RTN","TMGRPC3B",1,0)
TMGRPC3B ;TMG/kst/Support Functions for GUI_Config ;12/13/13, 2/2/14
"RTN","TMGRPC3B",2,0)
         ;;1.0;TMG-LIB;**1**;08/31/08;Build 9
"RTN","TMGRPC3B",3,0)
 ;
"RTN","TMGRPC3B",4,0)
 ;"TMG RPC FUNCTIONS for a GUI config program
"RTN","TMGRPC3B",5,0)
 ;
"RTN","TMGRPC3B",6,0)
 ;"Kevin Toppenberg MD
"RTN","TMGRPC3B",7,0)
 ;"GNU Lessor General Public License (LGPL) applies
"RTN","TMGRPC3B",8,0)
 ;"7/20/08
"RTN","TMGRPC3B",9,0)
 ;
"RTN","TMGRPC3B",10,0)
 ;"=======================================================================
"RTN","TMGRPC3B",11,0)
 ;" RPC -- Public Functions.
"RTN","TMGRPC3B",12,0)
 ;"=======================================================================
"RTN","TMGRPC3B",13,0)
 ;" <none>
"RTN","TMGRPC3B",14,0)
 ;"=======================================================================
"RTN","TMGRPC3B",15,0)
 ;"PRIVATE API FUNCTIONS
"RTN","TMGRPC3B",16,0)
 ;"=======================================================================
"RTN","TMGRPC3B",17,0)
 ;"GETUSRLT(TMGOUT,TMGPARAMS) -- fill list with users on the system.
"RTN","TMGRPC3B",18,0)
 ;"GETRECLT(TMGOUT,TMGPARAMS) -- fill list with records in file on the system
"RTN","TMGRPC3B",19,0)
 ;"GET1USER(TMGOUT,TMGIEN) -- Get one user's record
"RTN","TMGRPC3B",20,0)
 ;"GET1REC(TMGOUT,TMGPARAMS) -- get one record in file
"RTN","TMGRPC3B",21,0)
 ;"GET1FLD((TMGOUT,TMGPARAMS) -- get one field from one record in file
"RTN","TMGRPC3B",22,0)
 ;"XTRCTFLD(TMGOUT,TMGARRAY,TMGFLAG) -- convert output from GETS^DIQ into another format
"RTN","TMGRPC3B",23,0)
 ;"GFLSUBST(TMGOUT,TMGPARAMS) -- return a subset of entries a file's .01 names
"RTN","TMGRPC3B",24,0)
 ;
"RTN","TMGRPC3B",25,0)
 ;"=======================================================================
"RTN","TMGRPC3B",26,0)
 ;"=======================================================================
"RTN","TMGRPC3B",27,0)
 ;"Dependencies:
"RTN","TMGRPC3B",28,0)
 ;"  TMGRPC3* only
"RTN","TMGRPC3B",29,0)
 ;
"RTN","TMGRPC3B",30,0)
 ;"=======================================================================
"RTN","TMGRPC3B",31,0)
 ;"=======================================================================
"RTN","TMGRPC3B",32,0)
 ;
"RTN","TMGRPC3B",33,0)
 ;"=======================================================================
"RTN","TMGRPC3B",34,0)
 ;
"RTN","TMGRPC3B",35,0)
GETUSRLT(TMGOUT,TMGPARAMS) ;"GET USER LIST
"RTN","TMGRPC3B",36,0)
        ;"Purpose: to fill list with users on the system.
"RTN","TMGRPC3B",37,0)
        ;"Input: TMGOUT -- an OUT PARAMETER, PASS BY REFERENCE.
"RTN","TMGRPC3B",38,0)
        ;"       TMGPARAMS -- either "" or "NODISUSER" IF not to return DISUSER=YES users
"RTN","TMGRPC3B",39,0)
        ;"Output: TMGOUT is filled as follows:
"RTN","TMGRPC3B",40,0)
        ;"          TMGOUT(0)="1^Success" or "-1^Message"
"RTN","TMGRPC3B",41,0)
        ;"          TMGOUT(1)=Name^IEN^200^DISUSER  DISUSER will be 1 for "Y" or 0 for "N"
"RTN","TMGRPC3B",42,0)
        ;"          TMGOUT(2)=Name^IEN^200^DISUSER
"RTN","TMGRPC3B",43,0)
        ;"Results: none
"RTN","TMGRPC3B",44,0)
 ;
"RTN","TMGRPC3B",45,0)
        NEW TMGACTIVEONLY SET TMGACTIVEONLY=($GET(TMGPARAMS)="NODISUSER")
"RTN","TMGRPC3B",46,0)
        NEW TMGINDEX SET TMGINDEX=1
"RTN","TMGRPC3B",47,0)
        NEW TMGNAME SET TMGNAME=""
"RTN","TMGRPC3B",48,0)
        FOR  SET TMGNAME=$ORDER(^VA(200,"B",TMGNAME)) QUIT:(TMGNAME="")  DO
"RTN","TMGRPC3B",49,0)
        . NEW TMGIEN SET TMGIEN=""
"RTN","TMGRPC3B",50,0)
        . FOR  SET TMGIEN=$ORDER(^VA(200,"B",TMGNAME,TMGIEN)) QUIT:(+TMGIEN'>0)  DO
"RTN","TMGRPC3B",51,0)
        . . NEW TMGDISUSER SET TMGDISUSER=$PIECE($GET(^VA(200,TMGIEN,0)),"^",7)
"RTN","TMGRPC3B",52,0)
        . . IF (TMGACTIVEONLY)&(TMGDISUSER) QUIT
"RTN","TMGRPC3B",53,0)
        . . NEW TMGNAME SET TMGNAME=$PIECE($GET(^VA(200,TMGIEN,0)),"^",1)
"RTN","TMGRPC3B",54,0)
        . . SET TMGOUT(TMGINDEX)=TMGNAME_"^"_TMGIEN_"^200^"_TMGDISUSER
"RTN","TMGRPC3B",55,0)
        . . SET TMGINDEX=TMGINDEX+1
"RTN","TMGRPC3B",56,0)
 ;
"RTN","TMGRPC3B",57,0)
        SET TMGOUT(0)="1^Success"
"RTN","TMGRPC3B",58,0)
 ;
"RTN","TMGRPC3B",59,0)
        QUIT
"RTN","TMGRPC3B",60,0)
 ;
"RTN","TMGRPC3B",61,0)
GETRECLT(TMGOUT,TMGPARAMS) ;"GET RECS LIST
"RTN","TMGRPC3B",62,0)
        ;"Purpose: to fill list with records in file on the system.
"RTN","TMGRPC3B",63,0)
        ;"Input: TMGOUT -- an OUT PARAMETER, PASS BY REFERENCE.
"RTN","TMGRPC3B",64,0)
        ;"       TMGPARAMS -- Filenumber
"RTN","TMGRPC3B",65,0)
        ;"Output: TMGOUT is filled as follows:
"RTN","TMGRPC3B",66,0)
        ;"          TMGOUT(0)="1^Success" or "-1^Message"
"RTN","TMGRPC3B",67,0)
        ;"          TMGOUT(1)=.01Value^IEN^FileNum
"RTN","TMGRPC3B",68,0)
        ;"          TMGOUT(2)=.01Value^IEN^FileNum
"RTN","TMGRPC3B",69,0)
        ;"Results: none
"RTN","TMGRPC3B",70,0)
 ;
"RTN","TMGRPC3B",71,0)
        NEW TMGINDEX SET TMGINDEX=1
"RTN","TMGRPC3B",72,0)
        NEW TMGNAME SET TMGNAME=""
"RTN","TMGRPC3B",73,0)
        NEW TMGFNUM SET TMGFNUM=+$GET(TMGPARAMS)
"RTN","TMGRPC3B",74,0)
        IF TMGFNUM'>0 DO  GOTO GRLDONE
"RTN","TMGRPC3B",75,0)
        . SET TMGOUT(0)="-1^Valid file number not found"
"RTN","TMGRPC3B",76,0)
        NEW TMGREF SET TMGREF=$GET(^DIC(TMGFNUM,0,"GL"))
"RTN","TMGRPC3B",77,0)
        SET TMGREF=$$CREF^DILF(TMGREF)
"RTN","TMGRPC3B",78,0)
        IF TMGREF="" DO  GOTO GRLDONE
"RTN","TMGRPC3B",79,0)
        . SET TMGOUT(0)="-1^Unable to find global reference for file: "_TMGFNUM
"RTN","TMGRPC3B",80,0)
        NEW TMGLOC,TMGPIECE
"RTN","TMGRPC3B",81,0)
        SET TMGLOC=$PIECE(^DD(TMGFNUM,.01,0),"^",4)
"RTN","TMGRPC3B",82,0)
        SET TMGPIECE=$PIECE(TMGLOC,";",2)
"RTN","TMGRPC3B",83,0)
        SET TMGLOC=$PIECE(TMGLOC,";",1)
"RTN","TMGRPC3B",84,0)
        FOR  SET TMGNAME=$ORDER(@TMGREF@("B",TMGNAME)) QUIT:(TMGNAME="")  DO
"RTN","TMGRPC3B",85,0)
        . NEW TMGIEN SET TMGIEN=""
"RTN","TMGRPC3B",86,0)
        . FOR  SET TMGIEN=$ORDER(@TMGREF@("B",TMGNAME,TMGIEN)) QUIT:(+TMGIEN'>0)  DO
"RTN","TMGRPC3B",87,0)
        . . NEW TMGNAME SET TMGNAME=$PIECE($GET(@TMGREF@(TMGIEN,TMGLOC)),"^",TMGPIECE)
"RTN","TMGRPC3B",88,0)
        . . SET TMGOUT(TMGINDEX)=TMGNAME_"^"_TMGIEN_"^"_TMGFNUM
"RTN","TMGRPC3B",89,0)
        . . SET TMGINDEX=TMGINDEX+1
"RTN","TMGRPC3B",90,0)
 ;
"RTN","TMGRPC3B",91,0)
        SET TMGOUT(0)="1^Success"
"RTN","TMGRPC3B",92,0)
GRLDONE ;
"RTN","TMGRPC3B",93,0)
        QUIT
"RTN","TMGRPC3B",94,0)
 ;
"RTN","TMGRPC3B",95,0)
GET1USER(TMGOUT,TMGIEN) ;"GET ONE USER
"RTN","TMGRPC3B",96,0)
        ;"Purpose: to get record of one user
"RTN","TMGRPC3B",97,0)
        ;"Input: TMGOUT -- an OUT PARAMETER, PASS BY REFERENCE.
"RTN","TMGRPC3B",98,0)
        ;"       TMGIEN -- the IEN in file 200 to get
"RTN","TMGRPC3B",99,0)
        ;"Output: TMGOUT is filled as follows:
"RTN","TMGRPC3B",100,0)
        ;"          TMGOUT(0)="1^Success" or "-1^Message"
"RTN","TMGRPC3B",101,0)
        ;"          TMGOUT(1)=File^IENS^FieldNum^ExternalValue^DDInfo...
"RTN","TMGRPC3B",102,0)
        ;"          TMGOUT(2)=File^IENS^FieldNum^ExternalValue^DDInfo...
"RTN","TMGRPC3B",103,0)
        ;"Note: the fields to return are decided HERE
"RTN","TMGRPC3B",104,0)
        ;"Results: none
"RTN","TMGRPC3B",105,0)
 ;
"RTN","TMGRPC3B",106,0)
        NEW TMGIENS SET TMGIENS=+$GET(TMGIEN)_","
"RTN","TMGRPC3B",107,0)
        DO GET1REC(.TMGOUT,"200^"_TMGIENS)
"RTN","TMGRPC3B",108,0)
        QUIT
"RTN","TMGRPC3B",109,0)
 ;
"RTN","TMGRPC3B",110,0)
 ;
"RTN","TMGRPC3B",111,0)
GET1REC(TMGOUT,TMGPARAMS) ;
"RTN","TMGRPC3B",112,0)
        ;"Purpose: to get one record in file
"RTN","TMGRPC3B",113,0)
        ;"Input: TMGOUT -- an OUT PARAMETER, PASS BY REFERENCE.
"RTN","TMGRPC3B",114,0)
        ;"       TMGPARAMS: File^IENS
"RTN","TMGRPC3B",115,0)
        ;"         File -- the file or subfile to retrieve from
"RTN","TMGRPC3B",116,0)
        ;"         IENS -- IF File is a subfile, then IENS should be full IENS to get (e.g. '2,103,')
"RTN","TMGRPC3B",117,0)
        ;"                 IF File is not a subfile, then IENS can be just IEN or IEN_","
"RTN","TMGRPC3B",118,0)
        ;"Output: TMGOUT is filled as follows:
"RTN","TMGRPC3B",119,0)
        ;"          TMGOUT(0)="1^Success" or "-1^Message"
"RTN","TMGRPC3B",120,0)
        ;"          TMGOUT(1)=File^IENS^FieldNum^ExternalValue^DDInfo...
"RTN","TMGRPC3B",121,0)
        ;"          TMGOUT(2)=File^IENS^FieldNum^ExternalValue^DDInfo...
"RTN","TMGRPC3B",122,0)
        ;"          ...
"RTN","TMGRPC3B",123,0)
        ;"          (note: the quote char ' not included.  Shown below to indicate that these ascii chars are sent)
"RTN","TMGRPC3B",124,0)
        ;"          (the V nodes are only sent when a field of variable pointer type is sent back.)
"RTN","TMGRPC3B",125,0)
        ;"          TMGOUT(10)='INFO'^'DD'^FileNum^FieldNum^'V',1,0)&=&<DD ENTRY>
"RTN","TMGRPC3B",126,0)
        ;"          TMGOUT(11)='INFO'^'DD'^FileNum^FieldNum^'V',2,0)&=&<DD ENTRY>
"RTN","TMGRPC3B",127,0)
        ;"          TMGOUT(12)='INFO'^'DD'^FileNum^FieldNum^'V',3,0)&=&<DD ENTRY>
"RTN","TMGRPC3B",128,0)
        ;"Note: the fields to return are decided HERE
"RTN","TMGRPC3B",129,0)
        ;"Results: none
"RTN","TMGRPC3B",130,0)
 ;
"RTN","TMGRPC3B",131,0)
        SET TMGOUT(0)="1^Success"  ;"default to success
"RTN","TMGRPC3B",132,0)
        NEW TMGARRAY,TMGMSG
"RTN","TMGRPC3B",133,0)
        SET TMGPARAMS=$GET(TMGPARAMS)
"RTN","TMGRPC3B",134,0)
        SET ^TMG("TMP","RPC","GET1REC")=TMGPARAMS
"RTN","TMGRPC3B",135,0)
        NEW TMGFILE SET TMGFILE=$PIECE(TMGPARAMS,"^",1)
"RTN","TMGRPC3B",136,0)
        IF +TMGFILE'>0 DO  GOTO GORDONE
"RTN","TMGRPC3B",137,0)
        . SET TMGOUT(0)="-1^No file number supplied"
"RTN","TMGRPC3B",138,0)
        NEW TMGIENS SET TMGIENS=$PIECE(TMGPARAMS,"^",2)
"RTN","TMGRPC3B",139,0)
        IF TMGIENS="" DO  GOTO GORDONE
"RTN","TMGRPC3B",140,0)
        . SET TMGOUT(0)="-1^No IENS supplied"
"RTN","TMGRPC3B",141,0)
        ;
"RTN","TMGRPC3B",142,0)
        DO GETS^DIQ(TMGFILE,TMGIENS,"**","IE","TMGARRAY","TMGMSG")
"RTN","TMGRPC3B",143,0)
        ;
"RTN","TMGRPC3B",144,0)
        IF $DATA(TMGMSG("DIERR")) DO  GOTO GORDONE
"RTN","TMGRPC3B",145,0)
        . SET TMGOUT(0)="-1^See Fileman message"
"RTN","TMGRPC3B",146,0)
        . SET TMGOUT(1)=$$GETERSTR^TMGRPC3G(.TMGMSG)
"RTN","TMGRPC3B",147,0)
        ;
"RTN","TMGRPC3B",148,0)
        DO XTRCTFLD(.TMGOUT,.TMGARRAY,"E")
"RTN","TMGRPC3B",149,0)
        ;
"RTN","TMGRPC3B",150,0)
GORDONE ;
"RTN","TMGRPC3B",151,0)
        QUIT
"RTN","TMGRPC3B",152,0)
        ;
"RTN","TMGRPC3B",153,0)
GET1FLD(TMGOUT,TMGPARAMS) ; 
"RTN","TMGRPC3B",154,0)
        ;"Purpose: to get one record in file
"RTN","TMGRPC3B",155,0)
        ;"Input: TMGOUT -- an OUT PARAMETER, PASS BY REFERENCE.
"RTN","TMGRPC3B",156,0)
        ;"       TMGPARAMS: File^IENS^FldNum
"RTN","TMGRPC3B",157,0)
        ;"         File -- the file or subfile to retrieve from
"RTN","TMGRPC3B",158,0)
        ;"         IENS -- IF File is a subfile, then IENS should be full IENS to get (e.g. '2,103,')
"RTN","TMGRPC3B",159,0)
        ;"                 IF File is not a subfile, then IENS can be just IEN or IEN_","
"RTN","TMGRPC3B",160,0)
        ;"         FldNum -- The Field number (or name or computed expression) to lookup.
"RTN","TMGRPC3B",161,0)
        ;"Output: TMGOUT is filled as follows:
"RTN","TMGRPC3B",162,0)
        ;"          TMGOUT(0)="1^Success" or "-1^Message"
"RTN","TMGRPC3B",163,0)
        ;"          TMGOUT(1)=File^IENS^FieldNum^ExternalValue
"RTN","TMGRPC3B",164,0)
        ;"Note: the fields to return are decided HERE
"RTN","TMGRPC3B",165,0)
        ;"NOTE: If FldNum is a WP field, then nothing is returned.
"RTN","TMGRPC3B",166,0)
        ;"Results: none
"RTN","TMGRPC3B",167,0)
        ;
"RTN","TMGRPC3B",168,0)
        SET TMGOUT(0)="1^Success"  ;"default to success
"RTN","TMGRPC3B",169,0)
        NEW TMGARRAY,TMGMSG
"RTN","TMGRPC3B",170,0)
        NEW TMGREF SET TMGREF="TMGARRAY"
"RTN","TMGRPC3B",171,0)
        SET TMGPARAMS=$GET(TMGPARAMS)
"RTN","TMGRPC3B",172,0)
        SET ^TMG("TMP","RPC","GET1FLD")=TMGPARAMS
"RTN","TMGRPC3B",173,0)
        NEW TMGFILE SET TMGFILE=$PIECE(TMGPARAMS,"^",1)
"RTN","TMGRPC3B",174,0)
        IF +TMGFILE'>0 DO  GOTO GORDONE
"RTN","TMGRPC3B",175,0)
        . SET TMGOUT(0)="-1^No file number supplied"
"RTN","TMGRPC3B",176,0)
        NEW TMGIENS SET TMGIENS=$PIECE(TMGPARAMS,"^",2)
"RTN","TMGRPC3B",177,0)
        IF TMGIENS="" DO  GOTO GOFDONE
"RTN","TMGRPC3B",178,0)
        . SET TMGOUT(0)="-1^No IENS supplied"
"RTN","TMGRPC3B",179,0)
        NEW TMGFLD SET TMGFLD=$PIECE(TMGPARAMS,"^",3)
"RTN","TMGRPC3B",180,0)
        ;
"RTN","TMGRPC3B",181,0)
        NEW TMGVAL SET TMGVAL=$$GET1^DIQ(TMGFILE,TMGIENS,TMGFLD,"",TMGREF,"TMGMSG")
"RTN","TMGRPC3B",182,0)
        ;
"RTN","TMGRPC3B",183,0)
        IF $DATA(TMGMSG("DIERR")) DO  GOTO GORDONE
"RTN","TMGRPC3B",184,0)
        . SET TMGOUT(0)="-1^See Fileman message"
"RTN","TMGRPC3B",185,0)
        . SET TMGOUT(1)=$$GETERSTR^TMGRPC3G(.TMGMSG)
"RTN","TMGRPC3B",186,0)
        ;
"RTN","TMGRPC3B",187,0)
        SET TMGOUT(1)=TMGFILE_"^"_TMGIENS_"^"_TMGFLD_"^"_TMGVAL
"RTN","TMGRPC3B",188,0)
        ;
"RTN","TMGRPC3B",189,0)
GOFDONE QUIT
"RTN","TMGRPC3B",190,0)
        ;
"RTN","TMGRPC3B",191,0)
GETFLDIF(TMGOUT,TMGPARAMS)  ;"GET FIELD INFO  //kt 11/17/10
"RTN","TMGRPC3B",192,0)
        ;"Purpose: to get data dictionary information about one field in file
"RTN","TMGRPC3B",193,0)
        ;"Input: TMGOUT -- an OUT PARAMETER, PASS BY REFERENCE.
"RTN","TMGRPC3B",194,0)
        ;"       TMGPARAMS: File^FldNum
"RTN","TMGRPC3B",195,0)
        ;"         File -- the file or subfile to retrieve from
"RTN","TMGRPC3B",196,0)
        ;"         FldNum -- The Field number (or name or computed expression) to lookup.
"RTN","TMGRPC3B",197,0)
        ;"Output: TMGOUT is filled as follows:
"RTN","TMGRPC3B",198,0)
        ;"          TMGOUT(0)="1^Success" or "-1^Message"
"RTN","TMGRPC3B",199,0)
        ;"          TMGOUT(1)=(returns the 0 node from ^DD(File,Fieldnum,0)
"RTN","TMGRPC3B",200,0)
        ;"Results: none
"RTN","TMGRPC3B",201,0)
        ;
"RTN","TMGRPC3B",202,0)
        NEW TMGFILE SET TMGFILE=$PIECE(TMGPARAMS,"^",1)
"RTN","TMGRPC3B",203,0)
        IF +TMGFILE'>0 DO  GOTO GFIFDN
"RTN","TMGRPC3B",204,0)
        . SET TMGOUT(0)="-1^No numeric file number supplied. Got: "_TMGFILE
"RTN","TMGRPC3B",205,0)
        NEW TMGFLD SET TMGFLD=$PIECE(TMGPARAMS,"^",2)
"RTN","TMGRPC3B",206,0)
        IF +TMGFLD'>0 DO  GOTO GFIFDN
"RTN","TMGRPC3B",207,0)
        . SET TMGOUT(0)="-1^No numeric field number supplied. Got: "_TMGFLD
"RTN","TMGRPC3B",208,0)
        IF $DATA(^DD(+TMGFILE,+TMGFLD,0))=0 DO  GOTO GFIFDN
"RTN","TMGRPC3B",209,0)
        . SET TMGOUT(0)="-1^No data dictionary info found."
"RTN","TMGRPC3B",210,0)
        SET TMGOUT(0)="1^Success"
"RTN","TMGRPC3B",211,0)
        SET TMGOUT(1)=^DD(+TMGFILE,+TMGFLD,0)
"RTN","TMGRPC3B",212,0)
        ;
"RTN","TMGRPC3B",213,0)
GFIFDN  QUIT
"RTN","TMGRPC3B",214,0)
 ;
"RTN","TMGRPC3B",215,0)
GETAFINF(TMGOUT,TMGPARAMS)  ;"GET FIELD INFO  //elh 11/19/10
"RTN","TMGRPC3B",216,0)
        ;"Purpose: to get data dictionary information about all fields in file
"RTN","TMGRPC3B",217,0)
        ;"Input: TMGOUT -- an OUT PARAMETER, PASS BY REFERENCE.
"RTN","TMGRPC3B",218,0)
        ;"       TMGPARAMS: File
"RTN","TMGRPC3B",219,0)
        ;"         File -- the file or subfile to retrieve from
"RTN","TMGRPC3B",220,0)
        ;"Output: TMGOUT is filled as follows:
"RTN","TMGRPC3B",221,0)
        ;"          TMGOUT(0)="1^Success" or "-1^Message"
"RTN","TMGRPC3B",222,0)
        ;"          TMGOUT(1)=FileNum^FieldNum^{0 node from ^DD(File,Fieldnum,0)}
"RTN","TMGRPC3B",223,0)
        ;"          TMGOUT(2)=FileNum^FieldNum^{0 node from ^DD(File,Fieldnum,0)} ... etc.
"RTN","TMGRPC3B",224,0)
        ;"Results: none
"RTN","TMGRPC3B",225,0)
        ;
"RTN","TMGRPC3B",226,0)
        NEW TMGFILE SET TMGFILE=$PIECE(TMGPARAMS,"^",1)
"RTN","TMGRPC3B",227,0)
        IF +TMGFILE'>0 DO  GOTO GAFIFDN
"RTN","TMGRPC3B",228,0)
        . SET TMGOUT(0)="-1^No numeric file number supplied. Got: "_TMGFILE
"RTN","TMGRPC3B",229,0)
        SET TMGOUT(0)="1^Success"
"RTN","TMGRPC3B",230,0)
        NEW TMGFIELD SET TMGFIELD=0
"RTN","TMGRPC3B",231,0)
        NEW COUNTER SET COUNTER=1
"RTN","TMGRPC3B",232,0)
        FOR  SET TMGFIELD=$ORDER(^DD(+TMGFILE,+TMGFIELD)) QUIT:(+TMGFIELD'>0)  DO
"RTN","TMGRPC3B",233,0)
        . NEW DEF SET DEF=$GET(^DD(+TMGFILE,+TMGFIELD,0))
"RTN","TMGRPC3B",234,0)
        . SET TMGOUT(COUNTER)=+TMGFILE_"^"_+TMGFIELD_"^"_DEF
"RTN","TMGRPC3B",235,0)
        . SET COUNTER=COUNTER+1
"RTN","TMGRPC3B",236,0)
        . ;"IF ($PIECE(DEF,"^",2)["P")!(+$PIECE(DEF,"^",2)=$PIECE(DEF,"^",2)) DO
"RTN","TMGRPC3B",237,0)
        . NEW P2FILE SET P2FILE=+$PIECE(DEF,"P",2)
"RTN","TMGRPC3B",238,0)
        . IF P2FILE=0 SET P2FILE=+$PIECE(DEF,"^",2)
"RTN","TMGRPC3B",239,0)
        . IF P2FILE>0 DO
"RTN","TMGRPC3B",240,0)
        . . SET DEF=$GET(^DD(P2FILE,.01,0))
"RTN","TMGRPC3B",241,0)
        . . IF $GET(^DD(P2FILE,0,"UP"))=+TMGFILE DO
"RTN","TMGRPC3B",242,0)
        . . . IF $PIECE(DEF,"^",2)["W" QUIT
"RTN","TMGRPC3B",243,0)
        . . . SET $PIECE(DEF,"^",2)=$TRANSLATE($PIECE(DEF,"^",2),"P","p")
"RTN","TMGRPC3B",244,0)
        . . . IF $PIECE(DEF,"^",2)'["p" DO
"RTN","TMGRPC3B",245,0)
        . . . . SET $PIECE(DEF,"^",2)="p"_$PIECE(DEF,"^",2)
"RTN","TMGRPC3B",246,0)
        . . SET TMGOUT(COUNTER)=P2FILE_"^.01^"_DEF
"RTN","TMGRPC3B",247,0)
        . . SET COUNTER=COUNTER+1
"RTN","TMGRPC3B",248,0)
        ;
"RTN","TMGRPC3B",249,0)
GAFIFDN QUIT
"RTN","TMGRPC3B",250,0)
        ;
"RTN","TMGRPC3B",251,0)
DTTOFMDT(TMGOUT,TMGPARAMS)  ;"DATE TO FMDATE  //elh 11/22/10
"RTN","TMGRPC3B",252,0)
        ;"Purpose: To convert an external date into a FM date
"RTN","TMGRPC3B",253,0)
        ;"Input: TMGOUT -- an OUT PARAMETER, PASS BY REFERENCE.
"RTN","TMGRPC3B",254,0)
        ;"       TMGPARAMS: Date
"RTN","TMGRPC3B",255,0)
        ;"         Date -- the date to convert
"RTN","TMGRPC3B",256,0)
        ;"Output: TMGOUT is filled as follows:
"RTN","TMGRPC3B",257,0)
        ;"          TMGOUT(0)="-1^ERROR MESSAGE" or "1^FM DATE"
"RTN","TMGRPC3B",258,0)
        ;"Results: none
"RTN","TMGRPC3B",259,0)
        NEW X SET X=TMGPARAMS
"RTN","TMGRPC3B",260,0)
        SET %DT="TX"
"RTN","TMGRPC3B",261,0)
        D ^%DT
"RTN","TMGRPC3B",262,0)
        IF Y=-1 DO
"RTN","TMGRPC3B",263,0)
        . SET TMGOUT(0)="-1"
"RTN","TMGRPC3B",264,0)
        ELSE  DO
"RTN","TMGRPC3B",265,0)
        . SET TMGOUT(0)="1^"_Y
"RTN","TMGRPC3B",266,0)
        QUIT
"RTN","TMGRPC3B",267,0)
        ;
"RTN","TMGRPC3B",268,0)
XTRCTFLD(TMGOUT,TMGARRAY,TMGFLAG) ;"EXTRACT FIELDS
"RTN","TMGRPC3B",269,0)
        ;"Purpose: convert output from GETS^DIQ into another format
"RTN","TMGRPC3B",270,0)
        ;
"RTN","TMGRPC3B",271,0)
        NEW TMGINDEX SET TMGINDEX=1
"RTN","TMGRPC3B",272,0)
        NEW TMGFILE,TMGFIELD,TMGIENS
"RTN","TMGRPC3B",273,0)
        SET TMGFILE=""
"RTN","TMGRPC3B",274,0)
        FOR  SET TMGFILE=$ORDER(TMGARRAY(TMGFILE)) QUIT:(TMGFILE="")  DO
"RTN","TMGRPC3B",275,0)
        . SET TMGIENS=""
"RTN","TMGRPC3B",276,0)
        . FOR  SET TMGIENS=$ORDER(TMGARRAY(TMGFILE,TMGIENS)) QUIT:(TMGIENS="")  DO
"RTN","TMGRPC3B",277,0)
        . . SET TMGFIELD=0
"RTN","TMGRPC3B",278,0)
        . . FOR  SET TMGFIELD=$ORDER(^DD(TMGFILE,TMGFIELD)) QUIT:(+TMGFIELD'>0)  DO
"RTN","TMGRPC3B",279,0)
        . . . IF $GET(TMGARRAY(TMGFILE,TMGIENS,TMGFIELD,TMGFLAG))="" DO
"RTN","TMGRPC3B",280,0)
        . . . . SET TMGARRAY(TMGFILE,TMGIENS,TMGFIELD,TMGFLAG)=""
"RTN","TMGRPC3B",281,0)
        . . SET TMGFIELD=""
"RTN","TMGRPC3B",282,0)
        . . FOR  SET TMGFIELD=$ORDER(TMGARRAY(TMGFILE,TMGIENS,TMGFIELD)) QUIT:(TMGFIELD="")  DO
"RTN","TMGRPC3B",283,0)
        . . . NEW TMGVALUE SET TMGVALUE=$GET(TMGARRAY(TMGFILE,TMGIENS,TMGFIELD,TMGFLAG))
"RTN","TMGRPC3B",284,0)
        . . . NEW TMGDDINFO SET TMGDDINFO=$PIECE($GET(^DD(TMGFILE,TMGFIELD,0)),"^",1,4)
"RTN","TMGRPC3B",285,0)
        . . . IF $PIECE(TMGDDINFO,"^",2)["V" DO  ;"Thanks to Rick Marshall for this part.  Add var ptr with prefix, e.g. INFLUENZA --> IM.INFLUENZA
"RTN","TMGRPC3B",286,0)
        . . . . NEW TMGINTVALUE SET TMGINTVALUE=$GET(TMGARRAY(TMGFILE,TMGIENS,TMGFIELD,"I")) QUIT:(TMGINTVALUE="")
"RTN","TMGRPC3B",287,0)
        . . . . NEW TMGROOT SET TMGROOT="^"_$PIECE(TMGINTVALUE,";",2)_"0)"
"RTN","TMGRPC3B",288,0)
        . . . . NEW TMGVFNUM SET TMGVFNUM=+$PIECE($GET(@TMGROOT),"^",2) QUIT:(TMGVFNUM'>0)
"RTN","TMGRPC3B",289,0)
        . . . . NEW TMGVPIEN SET TMGVPIEN=+$ORDER(^DD(TMGFILE,TMGFIELD,"V","B",TMGVFNUM,0)) QUIT:(TMGVPIEN'>0)
"RTN","TMGRPC3B",290,0)
        . . . . NEW TMGPREFIX SET TMGPREFIX=$PIECE($GET(^DD(TMGFILE,TMGFIELD,"V",TMGVPIEN,0)),"^",4) QUIT:(TMGPREFIX="")
"RTN","TMGRPC3B",291,0)
        . . . . SET TMGVALUE=TMGPREFIX_"."_TMGVALUE
"RTN","TMGRPC3B",292,0)
        . . . IF $PIECE(TMGDDINFO,"^",2)["D" DO  ;"convert data format to one Delphi can use
"RTN","TMGRPC3B",293,0)
        . . . . IF TMGFLAG="I" QUIT
"RTN","TMGRPC3B",294,0)
        . . . . NEW X SET X=$GET(TMGARRAY(TMGFILE,TMGIENS,TMGFIELD,"I"))
"RTN","TMGRPC3B",295,0)
        . . . . SET TMGVALUE=$$FMTE^XLFDT(X,5)
"RTN","TMGRPC3B",296,0)
        . . . SET TMGOUT(TMGINDEX)=TMGFILE_"^"_TMGIENS_"^"_TMGFIELD_"^"_TMGVALUE
"RTN","TMGRPC3B",297,0)
        . . . SET TMGOUT(TMGINDEX)=TMGOUT(TMGINDEX)_"^"_TMGDDINFO
"RTN","TMGRPC3B",298,0)
        . . . SET TMGINDEX=TMGINDEX+1
"RTN","TMGRPC3B",299,0)
        . . . IF $PIECE(TMGDDINFO,"^",2)["V" DO
"RTN","TMGRPC3B",300,0)
        . . . . SET TMGINDEX=$$ADDVINFO(.TMGOUT,TMGFILE,TMGFIELD)
"RTN","TMGRPC3B",301,0)
        . . . . ;"NEW TMGREF SET TMGREF=$NAME(^DD(TMGFILE,TMGFIELD,"V",0))
"RTN","TMGRPC3B",302,0)
        . . . . ;"FOR  SET TMGREF=$QUERY(@TMGREF) QUIT:($QSUBSCRIPT(TMGREF,3)'="V")  DO
"RTN","TMGRPC3B",303,0)
        . . . . ;". NEW TMGREFTAIL SET TMGREFTAIL=$PIECE(TMGREF,",",3,99)
"RTN","TMGRPC3B",304,0)
        . . . . ;". NEW TMGDDVAL SET TMGDDVAL=$GET(@TMGREF)
"RTN","TMGRPC3B",305,0)
        . . . . ;". SET TMGOUT(TMGINDEX)="INFO^DD^"_TMGFILE_"^"_TMGFIELD_"^"_TMGREFTAIL_"&=&"_TMGDDVAL
"RTN","TMGRPC3B",306,0)
        . . . . ;". SET TMGINDEX=TMGINDEX+1
"RTN","TMGRPC3B",307,0)
        ;
"RTN","TMGRPC3B",308,0)
        QUIT
"RTN","TMGRPC3B",309,0)
        ;
"RTN","TMGRPC3B",310,0)
ADDVINFO(TMGARRAY,TMGFILE,TMGFIELD) ;
"RTN","TMGRPC3B",311,0)
        ;"Purpose: to add DD info to output array for a variable pointer field.
"RTN","TMGRPC3B",312,0)
        ;"Input: TMGARRAY -- An OUT PARAMETER.  Pass by reference.  Expected format:
"RTN","TMGRPC3B",313,0)
        ;"          TMGARRAY(#)=value.
"RTN","TMGRPC3B",314,0)
        ;"          Data from this function will be added at TMGARRAY(#+1)=...
"RTN","TMGRPC3B",315,0)
        ;"      TMGFILE -- The file
"RTN","TMGRPC3B",316,0)
        ;"      TMGFIELD -- The field.
"RTN","TMGRPC3B",317,0)
        ;"Results: Returns next available index number, e.g. #+1
"RTN","TMGRPC3B",318,0)
        ;"Output: TMGARRAY is changed.
"RTN","TMGRPC3B",319,0)
        ;
"RTN","TMGRPC3B",320,0)
        NEW TMGINDEX SET TMGINDEX=+$ORDER(TMGARRAY(""),-1)+1
"RTN","TMGRPC3B",321,0)
        NEW TMGINITINDEX SET TMGINITINDEX=TMGINDEX
"RTN","TMGRPC3B",322,0)
        NEW TMGREF SET TMGREF=$NAME(^DD(TMGFILE,TMGFIELD,"V",0))
"RTN","TMGRPC3B",323,0)
        FOR  SET TMGREF=$QUERY(@TMGREF) QUIT:($QSUBSCRIPT(TMGREF,3)'="V")  DO
"RTN","TMGRPC3B",324,0)
        . NEW TMGREFTAIL SET TMGREFTAIL=$PIECE(TMGREF,",",3,99)
"RTN","TMGRPC3B",325,0)
        . NEW TMGDDVAL SET TMGDDVAL=$GET(@TMGREF)
"RTN","TMGRPC3B",326,0)
        . SET TMGOUT(TMGINDEX)="INFO^DD^"_TMGFILE_"^"_TMGFIELD_"^"_TMGREFTAIL_"&=&"_TMGDDVAL
"RTN","TMGRPC3B",327,0)
        . SET TMGINDEX=TMGINDEX+1
"RTN","TMGRPC3B",328,0)
        QUIT TMGINDEX
"RTN","TMGRPC3B",329,0)
  ;
"RTN","TMGRPC3B",330,0)
GFLSUBST(TMGOUT,TMGPARAMS) ;"GET FILE SUBSET
"RTN","TMGRPC3B",331,0)
        ;"Purpose: to return a subset of entries a file's .01 names
"RTN","TMGRPC3B",332,0)
        ;"Input: TMGOUT -- an OUT PARAMETER, PASS BY REFERENCE.
"RTN","TMGRPC3B",333,0)
        ;"       TMGPARAMS -- FileNum^StartFrom^Direction^maxCount^[IENS]^[SCREEN]
"RTN","TMGRPC3B",334,0)
        ;"              FileNum  -- file number to traverse
"RTN","TMGRPC3B",335,0)
        ;"              StartFrom -- text to $ORDER() from  -- OPTIONAL
"RTN","TMGRPC3B",336,0)
        ;"              Direction -- $ORDER(xx,Direction) direction (should be 1 or -1) -- OPTIONAL
"RTN","TMGRPC3B",337,0)
        ;"              maxCt -- OPTIONAL -- the max number of entries to return.
"RTN","TMGRPC3B",338,0)
        ;"              IENS -- OPTIONAL -- only used IF FileNum is a subfile.  A standard IENS string
"RTN","TMGRPC3B",339,0)
        ;"              SCREEN -- OPTIONAL -- 
"RTN","TMGRPC3B",340,0)
        ;"                  Format#1: 'FldNum=value|FldNum=value|FldNum=...'
"RTN","TMGRPC3B",341,0)
        ;"                    Each SET is a matching value.  Each record that is returned
"RTN","TMGRPC3B",342,0)
        ;"                    will match value.  Multiple sets may be supplied, delimited by
"RTN","TMGRPC3B",343,0)
        ;"                    "|" Each returned value will match ALL restrictions.
"RTN","TMGRPC3B",344,0)
        ;"                     Only EXTERNAL value of field compared.
"RTN","TMGRPC3B",345,0)
        ;"                    NOTE: 'Fldnum' is passed to $$GET1^DIQ.  So this should be
"RTN","TMGRPC3B",346,0)
        ;"                        able to be field number, or name or a FM computed expression
"RTN","TMGRPC3B",347,0)
        ;"                  Format#2:
"RTN","TMGRPC3B",348,0)
        ;"                      [REMDEF FLAGS:abcdefg] -- Only passed for file 811.9
"RTN","TMGRPC3B",349,0)
        ;"                      [REMDLG ITEM PARENT:####] -- only passed for file 801.41
"RTN","TMGRPC3B",350,0)
        ;"                      [FROM FileNum:FieldNum] -- Generic description of the file:field needing pointer options
"RTN","TMGRPC3B",351,0)
        ;"Output: TMGOUT is filled as follows:
"RTN","TMGRPC3B",352,0)
        ;"          TMGOUT(0)="1^Success" or "-1^Message"
"RTN","TMGRPC3B",353,0)
        ;"          TMGOUT(1)=IEN^Value
"RTN","TMGRPC3B",354,0)
        ;"          TMGOUT(2)=IEN^Value
"RTN","TMGRPC3B",355,0)
        ;"          ...
"RTN","TMGRPC3B",356,0)
        ;"Results: none
"RTN","TMGRPC3B",357,0)
        ;
"RTN","TMGRPC3B",358,0)
        ;"KILL ^TMG("TMP","RPC3B")
"RTN","TMGRPC3B",359,0)
        ;"MERGE ^TMG("TMP","RPC3B","TMGPARAMS")=TMGPARAMS
"RTN","TMGRPC3B",360,0)
        NEW TMGTEMP1,TMGTEMP2  ;"scratch variables, available to screening processes.
"RTN","TMGRPC3B",361,0)
        NEW TMGFILE SET TMGFILE=+$PIECE(TMGPARAMS,"^",1)
"RTN","TMGRPC3B",362,0)
        IF TMGFILE'>0 DO  GOTO GFSDONE
"RTN","TMGRPC3B",363,0)
        . SET TMGOUT(0)="-1^No file number supplied"
"RTN","TMGRPC3B",364,0)
        NEW TMGFROM SET TMGFROM=$PIECE(TMGPARAMS,"^",2)
"RTN","TMGRPC3B",365,0)
        SET TMGPARAMS=$$UP^XLFSTR(TMGPARAMS)
"RTN","TMGRPC3B",366,0)
        NEW TMGDIR SET TMGDIR=$PIECE(TMGPARAMS,"^",3)
"RTN","TMGRPC3B",367,0)
        IF TMGDIR'=-1 SET TMGDIR=1
"RTN","TMGRPC3B",368,0)
        NEW TMGMAXCT SET TMGMAXCT=+$PIECE(TMGPARAMS,"^",4)
"RTN","TMGRPC3B",369,0)
        IF TMGMAXCT=0 SET TMGMAXCT=44
"RTN","TMGRPC3B",370,0)
        NEW TMGISPTR SET TMGISPTR=($PIECE($GET(^DD(TMGFILE,.01,0)),"^",2)["P")
"RTN","TMGRPC3B",371,0)
        NEW TMGSTARTIEN SET TMGSTARTIEN=""
"RTN","TMGRPC3B",372,0)
        IF TMGISPTR DO
"RTN","TMGRPC3B",373,0)
        . IF $LENGTH(TMGFROM,";")>2 SET TMGSTARTIEN=+$PIECE(TMGFROM,";",2)
"RTN","TMGRPC3B",374,0)
        . IF TMGFROM?1.N1";".E SET TMGFROM=+TMGFROM
"RTN","TMGRPC3B",375,0)
        NEW TMGIENS  ;"//kt added
"RTN","TMGRPC3B",376,0)
        SET TMGIENS=$PIECE(TMGPARAMS,"^",5)
"RTN","TMGRPC3B",377,0)
        NEW TMGSCRN SET TMGSCRN=$PIECE(TMGPARAMS,"^",6)
"RTN","TMGRPC3B",378,0)
        NEW TMGFNSCRN SET TMGFNSCRN=""
"RTN","TMGRPC3B",379,0)
        ;
"RTN","TMGRPC3B",380,0)
        IF $EXTRACT(TMGSCRN,1)="[" DO
"RTN","TMGRPC3B",381,0)
        . SET TMGFNSCRN=$$GFSSCRN(TMGSCRN),TMGSCRN=""
"RTN","TMGRPC3B",382,0)
        ELSE  FOR  QUIT:TMGSCRN=""  DO
"RTN","TMGRPC3B",383,0)
        . NEW SA SET SA=$PIECE(TMGSCRN,"|",1)
"RTN","TMGRPC3B",384,0)
        . SET TMGSCRN=$PIECE(TMGSCRN,"|",2,999)
"RTN","TMGRPC3B",385,0)
        . NEW I SET I=+$ORDER(TMGSCRN(""),-1)+1
"RTN","TMGRPC3B",386,0)
        . SET TMGSCRN(I,"FLD")=$PIECE(SA,"=",1)
"RTN","TMGRPC3B",387,0)
        . SET TMGSCRN(I,"VAL")=$PIECE(SA,"=",2,999)
"RTN","TMGRPC3B",388,0)
        ;
"RTN","TMGRPC3B",389,0)
        ;"MERGE ^TMG("TMP","RPC3B","TMGSCRN")=TMGSCRN
"RTN","TMGRPC3B",390,0)
        NEW TMGI SET TMGI=0
"RTN","TMGRPC3B",391,0)
        ;"NEW TMGLAST SET TMGLAST=""
"RTN","TMGRPC3B",392,0)
        ;"NEW prev SET prev=""
"RTN","TMGRPC3B",393,0)
        ;"NEW TMGREF SET TMGREF=$GET(^DIC(TMGFILE,0,"GL"))
"RTN","TMGRPC3B",394,0)
        NEW TMGREF SET TMGREF=$$GETGREF^TMGFMUT2(TMGFILE,TMGIENS) ;"IENS not used unless TMGFILE is a subfile
"RTN","TMGRPC3B",395,0)
        SET TMGREF=$$CREF^DILF(TMGREF)  ;"convert open --> closed reference
"RTN","TMGRPC3B",396,0)
        IF TMGREF="" DO  GOTO GFSDONE
"RTN","TMGRPC3B",397,0)
        . SET TMGOUT(0)="-1^Unable to obtain global ref for file #"_TMGFILE
"RTN","TMGRPC3B",398,0)
        ;
"RTN","TMGRPC3B",399,0)
        FOR  SET TMGFROM=$ORDER(@TMGREF@("B",TMGFROM),TMGDIR) QUIT:(TMGFROM="")!(TMGI'<TMGMAXCT)  DO
"RTN","TMGRPC3B",400,0)
        . NEW TMGIEN SET TMGIEN=TMGSTARTIEN
"RTN","TMGRPC3B",401,0)
        . FOR  SET TMGIEN=$ORDER(@TMGREF@("B",TMGFROM,TMGIEN),TMGDIR) QUIT:(+TMGIEN'>0)!(TMGI'<TMGMAXCT)  DO
"RTN","TMGRPC3B",402,0)
        . . NEW TMGIENS0
"RTN","TMGRPC3B",403,0)
        . . IF TMGIENS="" SET TMGIENS0=TMGIEN_","
"RTN","TMGRPC3B",404,0)
        . . ELSE  DO
"RTN","TMGRPC3B",405,0)
        . . . SET TMGIENS0=TMGIENS
"RTN","TMGRPC3B",406,0)
        . . . SET $PIECE(TMGIENS0,",",1)=TMGIEN
"RTN","TMGRPC3B",407,0)
        . . NEW TMGFLDS SET TMGFLDS=".01"
"RTN","TMGRPC3B",408,0)
        . . IF TMGFNSCRN'="" DO  QUIT:(TMGOK'=1)
"RTN","TMGRPC3B",409,0)
        . . . XECUTE TMGFNSCRN
"RTN","TMGRPC3B",410,0)
        . . . SET TMGOK=$T
"RTN","TMGRPC3B",411,0)
        . . IF $DATA(TMGSCRN)>1 DO
"RTN","TMGRPC3B",412,0)
        . . . NEW I SET I=0
"RTN","TMGRPC3B",413,0)
        . . . FOR  SET I=$ORDER(TMGSCRN(I)) QUIT:(I'>0)  DO
"RTN","TMGRPC3B",414,0)
        . . . . NEW FLD SET FLD=$GET(TMGSCRN(I,"FLD"))
"RTN","TMGRPC3B",415,0)
        . . . . IF (FLD=.01)!(FLD="") QUIT
"RTN","TMGRPC3B",416,0)
        . . . . SET TMGFLDS=TMGFLDS_";"_FLD
"RTN","TMGRPC3B",417,0)
        . . NEW TMGARRAY,TMGMSG
"RTN","TMGRPC3B",418,0)
        . . DO GETS^DIQ(TMGFILE,TMGIENS0,TMGFLDS,"E","TMGARRAY","TMGMSG")
"RTN","TMGRPC3B",419,0)
        . . NEW TMGOK SET TMGOK=1
"RTN","TMGRPC3B",420,0)
        . . IF $DATA(TMGSCRN)>1 DO  QUIT:(TMGOK'=1)
"RTN","TMGRPC3B",421,0)
        . . . NEW I SET I=0
"RTN","TMGRPC3B",422,0)
        . . . FOR  SET I=$ORDER(TMGSCRN(I)) QUIT:(I'>0)!(TMGOK'=1)  DO
"RTN","TMGRPC3B",423,0)
        . . . . NEW FLD SET FLD=$GET(TMGSCRN(I,"FLD"))
"RTN","TMGRPC3B",424,0)
        . . . . IF $$UP^XLFSTR($GET(TMGARRAY(TMGFILE,TMGIENS0,FLD,"E")))'=$GET(TMGSCRN(I,"VAL")) SET TMGOK=0 QUIT
"RTN","TMGRPC3B",425,0)
        . . SET TMGI=TMGI+1
"RTN","TMGRPC3B",426,0)
        . . SET TMGOUT(TMGI)=TMGIEN_"^"
"RTN","TMGRPC3B",427,0)
        . . IF TMGISPTR SET TMGOUT(TMGI)=TMGOUT(TMGI)_TMGFROM_";"_TMGIEN_";"
"RTN","TMGRPC3B",428,0)
        . . SET TMGOUT(TMGI)=TMGOUT(TMGI)_$GET(TMGARRAY(TMGFILE,TMGIENS0,.01,"E"))
"RTN","TMGRPC3B",429,0)
        . . ;"SET TMGOUT(TMGI)=TMGOUT(TMGI)_$$GET1^DIQ(TMGFILE,TMGIENS0,.01)
"RTN","TMGRPC3B",430,0)
        ;
"RTN","TMGRPC3B",431,0)
        SET TMGOUT(0)="1^Success"
"RTN","TMGRPC3B",432,0)
GFSDONE QUIT
"RTN","TMGRPC3B",433,0)
        ;
"RTN","TMGRPC3B",434,0)
GFSSCRN(TMGSCRN) ;"Convert special screens, called from GFLSUBST
"RTN","TMGRPC3B",435,0)
        ;"Input: TMGSCRN -- text of screen messgae
"RTN","TMGRPC3B",436,0)
        ;"Also may use TMGFILE in global scope -- the target Filenumber.
"RTN","TMGRPC3B",437,0)
        ;"Result: returns like of code to execute for each TMGIEN, that sets $T
"RTN","TMGRPC3B",438,0)
        NEW RESULT SET RESULT=""
"RTN","TMGRPC3B",439,0)
        IF TMGSCRN["REMDEF FLAGS" DO
"RTN","TMGRPC3B",440,0)
        . NEW FLGS SET FLGS=$PIECE(TMGSCRN,":",2),FLGS=$PIECE(FLGS,"]",1),TMGSCRN=""
"RTN","TMGRPC3B",441,0)
        . SET RESULT="IF $$IFREMFLG^TMGRPC3G(TMGIEN,"""_FLGS_""")"
"RTN","TMGRPC3B",442,0)
        ELSE  IF TMGSCRN["REMDLG ITEM PARENT" DO
"RTN","TMGRPC3B",443,0)
        . NEW PARENTIEN SET PARENTIEN=+$PIECE(TMGSCRN,":",2),TMGSCRN=""
"RTN","TMGRPC3B",444,0)
        . SET RESULT="IF $$IFRMDLGO^TMGRPC3G(TMGIEN,"_PARENTIEN_")"
"RTN","TMGRPC3B",445,0)
        . SET TMGTEMP1(PARENTIEN)=""                  ;"NOTE: TMGTEMP1 was NEW'd in GFLSUBST.  
"RTN","TMGRPC3B",446,0)
        . DO LOADPRNT^TMGRPC3G(PARENTIEN,.TMGTEMP1)   ;"      Will be used in IFRMDLGO^TMGRPC3G
"RTN","TMGRPC3B",447,0)
        ELSE  IF TMGSCRN["[FROM " DO
"RTN","TMGRPC3B",448,0)
        . NEW STR,CONTFNUM,CONTFLD ;"Contianing File:field that needs pointer options.
"RTN","TMGRPC3B",449,0)
        . SET STR=$PIECE(TMGSCRN,"[FROM ",2)
"RTN","TMGRPC3B",450,0)
        . SET CONTFNUM=+$PIECE(STR,":",1),CONTFLD=+$PIECE(STR,":",2)
"RTN","TMGRPC3B",451,0)
        . IF ((CONTFNUM="801.41")&(CONTFLD="15"))!((CONTFNUM="801.4118")&(CONTFLD=".01")) DO
"RTN","TMGRPC3B",452,0)
        . . NEW TARGETFNUM SET TARGETFNUM=+$GET(TMGFILE) QUIT:TARGETFNUM'>0
"RTN","TMGRPC3B",453,0)
        . . NEW IDX SET IDX=0  ;"Get screen for variable pointer for FINDING ITEM in 801.41 (REMINDER DIALOG)
"RTN","TMGRPC3B",454,0)
        . . FOR  SET IDX=$ORDER(^DD(801.41,15,"V",IDX)) QUIT:(+IDX'>0)!(RESULT'="")  DO
"RTN","TMGRPC3B",455,0)
        . . . IF +$PIECE($GET(^DD(801.41,15,"V",IDX,0)),"^",1)'=TARGETFNUM QUIT
"RTN","TMGRPC3B",456,0)
        . . . NEW ASCRN SET ASCRN=$GET(^DD(801.41,15,"V",IDX,1)) QUIT:(ASCRN="")
"RTN","TMGRPC3B",457,0)
        . . . NEW DIC XECUTE ASCRN
"RTN","TMGRPC3B",458,0)
        . . . IF $GET(DIC("S"))="" QUIT
"RTN","TMGRPC3B",459,0)
        . . . SET RESULT="N Y S Y=TMGIEN "_DIC("S")
"RTN","TMGRPC3B",460,0)
        QUIT RESULT
"RTN","TMGRPC3B",461,0)
        ;
"RTN","TMGRPC3B",462,0)
GSFSUBST(TMGOUT,TMGPARAMS) ;"GET SUBFILE SUBSET   //kt 11/24/10
"RTN","TMGRPC3B",463,0)
        ;"Purpose: to return a subset of entries a file's .01 names
"RTN","TMGRPC3B",464,0)
        ;"Input: TMGOUT -- an OUT PARAMETER, PASS BY REFERENCE.
"RTN","TMGRPC3B",465,0)
        ;"       TMGPARAMS -- SubfileNum^IENS^StartFrom^Direction^maxCount^[SCREEN]
"RTN","TMGRPC3B",466,0)
        ;"              FileNum - subfilename file to traverse
"RTN","TMGRPC3B",467,0)
        ;"              IENS -- needed to locate particular subfile instance
"RTN","TMGRPC3B",468,0)
        ;"              StartFrom -- text to $ORDER() from  -- OPTIONAL
"RTN","TMGRPC3B",469,0)
        ;"              Direction -- $ORDER(xx,Direction) direction (should be 1 or -1) -- OPTIONAL
"RTN","TMGRPC3B",470,0)
        ;"              maxCt -- OPTIONAL -- the max number of entries to return.
"RTN","TMGRPC3B",471,0)
        ;"              SCREEN -- OPTIONAL -- see documentation in GFLSUBST
"RTN","TMGRPC3B",472,0)
        ;"Output: TMGOUT is filled as follows:
"RTN","TMGRPC3B",473,0)
        ;"          TMGOUT(0)="1^Success" or "-1^Message"
"RTN","TMGRPC3B",474,0)
        ;"          TMGOUT(1)=IEN^Value
"RTN","TMGRPC3B",475,0)
        ;"          TMGOUT(2)=IEN^Value
"RTN","TMGRPC3B",476,0)
        ;"          ...
"RTN","TMGRPC3B",477,0)
        ;"Results: none
"RTN","TMGRPC3B",478,0)
        ;
"RTN","TMGRPC3B",479,0)
        NEW P2
"RTN","TMGRPC3B",480,0)
        MERGE ^TMG("TMP","RPC3B","TMGPARAMS")=TMGPARAMS
"RTN","TMGRPC3B",481,0)
        SET P2=$P(TMGPARAMS,"^",1)_"^"_$P(TMGPARAMS,"^",3,5)_"^"_$P(TMGPARAMS,"^",2)_"^"_$P(TMGPARAMS,"^",6)
"RTN","TMGRPC3B",482,0)
        SET ^EDDIE(2)=P2
"RTN","TMGRPC3B",483,0)
        MERGE ^TMG("TMP","RPC3B","P2")=P2
"RTN","TMGRPC3B",484,0)
        DO GFLSUBST(.TMGOUT,P2)
"RTN","TMGRPC3B",485,0)
        QUIT
"RTN","TMGRPC3B",486,0)
        ;
"RTN","TMGRPC3C")
0^4^B61196443
"RTN","TMGRPC3C",1,0)
TMGRPC3C ;TMG/kst/Support Functions for GUI_Config ;08/31/08, 2/2/14
"RTN","TMGRPC3C",2,0)
         ;;1.0;TMG-LIB;**1**;08/12/09;Build 9
"RTN","TMGRPC3C",3,0)
 ;
"RTN","TMGRPC3C",4,0)
 ;"TMG RPC FUNCTIONS for a GUI config program
"RTN","TMGRPC3C",5,0)
 ;
"RTN","TMGRPC3C",6,0)
 ;"Kevin Toppenberg MD
"RTN","TMGRPC3C",7,0)
 ;"GNU Lessor General Public License (LGPL) applies
"RTN","TMGRPC3C",8,0)
 ;"7/20/08
"RTN","TMGRPC3C",9,0)
 ;
"RTN","TMGRPC3C",10,0)
 ;"=======================================================================
"RTN","TMGRPC3C",11,0)
 ;" RPC -- Public Functions.
"RTN","TMGRPC3C",12,0)
 ;"=======================================================================
"RTN","TMGRPC3C",13,0)
 ;" <none>
"RTN","TMGRPC3C",14,0)
 ;"=======================================================================
"RTN","TMGRPC3C",15,0)
 ;"PRIVATE API FUNCTIONS
"RTN","TMGRPC3C",16,0)
 ;"=======================================================================
"RTN","TMGRPC3C",17,0)
 ;"POSTDATA(TMGOUT,TMGDATA) -- Post Changes to database via Fileman
"RTN","TMGRPC3C",18,0)
 ;
"RTN","TMGRPC3C",19,0)
 ;"=======================================================================
"RTN","TMGRPC3C",20,0)
 ;"Dependencies:
"RTN","TMGRPC3C",21,0)
 ;"  TMGRPC3* only
"RTN","TMGRPC3C",22,0)
 ;
"RTN","TMGRPC3C",23,0)
 ;"=======================================================================
"RTN","TMGRPC3C",24,0)
 ;
"RTN","TMGRPC3C",25,0)
POSTDATA(TMGOUT,TMGDATA,TMGFLAG) ;
"RTN","TMGRPC3C",26,0)
        ;"Post Changes to database via Fileman
"RTN","TMGRPC3C",27,0)
        ;"Input: TMGOUT -- an OUT PARAMETER, PASS BY REFERENCE.
"RTN","TMGRPC3C",28,0)
        ;"       TMGDATA -- Entries to be filed.  Format:
"RTN","TMGRPC3C",29,0)
        ;"              TMGDATA(0)=FileNum^IENS^FieldNum^FieldName^newValue^oldValue
"RTN","TMGRPC3C",30,0)
        ;"              TMGDATA(1)=FileNum^IENS^FieldNum^FieldName^newValue^oldValue
"RTN","TMGRPC3C",31,0)
        ;"              TMGDATA(2)=FileNum^IENS^FieldNum^FieldName^newValue^oldValue
"RTN","TMGRPC3C",32,0)
        ;"              ...
"RTN","TMGRPC3C",33,0)
        ;"              Note: FieldName, oldValue pieces are not used (optional)
"RTN","TMGRPC3C",34,0)
        ;"       TMGFLAG -- OPTIONAL, "E" is default.  Flag passed to FILE^DIE or UPDATE^DIE
"RTN","TMGRPC3C",35,0)
        ;"                 should be "E" or "I"
"RTN","TMGRPC3C",36,0)
        ;"Output: TMGOUT is filled as follows:
"RTN","TMGRPC3C",37,0)
        ;"          TMGOUT(0)="1^Success" or "-1^Short Message"
"RTN","TMGRPC3C",38,0)
        ;"          TMGOUT(1)=Fileman message (long)
"RTN","TMGRPC3C",39,0)
        ;"          -or IF NEW records added:
"RTN","TMGRPC3C",40,0)
        ;"          TMGOUT(1)=5^1234   ,c<--  results of IEN array returned (+5 converted to record 1234)
"RTN","TMGRPC3C",41,0)
        ;"          TMGOUT(2)=3^2341   <--  results of IEN array returned (+3 converted to record 2341)
"RTN","TMGRPC3C",42,0)
        ;"          ...
"RTN","TMGRPC3C",43,0)
        ;"Results: none
"RTN","TMGRPC3C",44,0)
 ;
"RTN","TMGRPC3C",45,0)
        NEW TMGAVC SET TMGAVC=0  ;"TMGAVC=AccessVerifyCode. Default to no change.
"RTN","TMGRPC3C",46,0)
        NEW TMGINACTUSER,TMGREACTUSER
"RTN","TMGRPC3C",47,0)
        SET TMGFLAG=$GET(TMGFLAG,"E")
"RTN","TMGRPC3C",48,0)
        NEW TMGI SET TMGI=""
"RTN","TMGRPC3C",49,0)
        NEW TMGFDA,TMGNEWFDA,TMGMSG,TMGIEN,DIC
"RTN","TMGRPC3C",50,0)
        NEW TMGOLDDUZ  ;"elh - to save previous fiel access level
"RTN","TMGRPC3C",51,0)
        NEW TMGINTFDA
"RTN","TMGRPC3C",52,0)
        FOR  SET TMGI=$ORDER(TMGDATA(TMGI)) QUIT:(TMGI="")  DO
"RTN","TMGRPC3C",53,0)
        . NEW TMGFILE,TMGIENS,TMGFIELD,TMGVALUE,TMGONEENTRY
"RTN","TMGRPC3C",54,0)
        . NEW TMGINTVALUE SET TMGINTVALUE=0
"RTN","TMGRPC3C",55,0)
        . NEW TMGCONTINUE SET TMGCONTINUE=0
"RTN","TMGRPC3C",56,0)
        . SET TMGONEENTRY=$GET(TMGDATA(TMGI))
"RTN","TMGRPC3C",57,0)
        . SET TMGFILE=$PIECE(TMGONEENTRY,"^",1)
"RTN","TMGRPC3C",58,0)
        . SET TMGIENS=$PIECE(TMGONEENTRY,"^",2)
"RTN","TMGRPC3C",59,0)
        . SET TMGFIELD=$PIECE(TMGONEENTRY,"^",3)
"RTN","TMGRPC3C",60,0)
        . SET TMGVALUE=$PIECE(TMGONEENTRY,"^",5)
"RTN","TMGRPC3C",61,0)
        . IF TMGFILE=200 DO
"RTN","TMGRPC3C",62,0)
        . . IF TMGFIELD=2 DO  ;"2 = Access Code
"RTN","TMGRPC3C",63,0)
        . . . SET TMGOLDDUZ=DUZ(0)  ;"elh   Save File Access Level
"RTN","TMGRPC3C",64,0)
        . . . SET DUZ(0)="^"    ;"elh   Set proper WRITE access level
"RTN","TMGRPC3C",65,0)
        . . . IF TMGIENS["+" DO  QUIT
"RTN","TMGRPC3C",66,0)
        . . . . SET TMGCONTINUE=1
"RTN","TMGRPC3C",67,0)
        . . . . SET TMGOUT(1)="Can't SET Access code when first adding NEW user.  Try again."
"RTN","TMGRPC3C",68,0)
        . . . ;"NOTICE: currently this code DOes NOT force code of certain length etc.
"RTN","TMGRPC3C",69,0)
        . . . ;"S Y=$$VCHK(XV2,XUH) Q:Y Y  ;check for valid verify code, returns 0 (for OK), or 1^msg
"RTN","TMGRPC3C",70,0)
        . . . ;"SET TMGVALUE=$$UP^XLFSTR(TMGVALUE)  ;"access code must be upper case   elh
"RTN","TMGRPC3C",71,0)
        . . . SET TMGVALUE=$$EN^XUSHSH(TMGVALUE)  ;"access code is supposed to be hashed first
"RTN","TMGRPC3C",72,0)
        . . . SET TMGAVC=1  ;"signal change
"RTN","TMGRPC3C",73,0)
        . . . SET TMGAVC("DA")=+TMGIENS
"RTN","TMGRPC3C",74,0)
        . . . SET TMGINTVALUE=1
"RTN","TMGRPC3C",75,0)
        . . ELSE  IF TMGFIELD=11 DO  ;"11 = Verify Code
"RTN","TMGRPC3C",76,0)
        . . . SET TMGOLDDUZ=DUZ(0) ;" elh   Save File Access Level
"RTN","TMGRPC3C",77,0)
        . . . SET DUZ(0)="^"  ;" elh   Set proper WRITE access level
"RTN","TMGRPC3C",78,0)
        . . . IF TMGIENS["+" DO  QUIT
"RTN","TMGRPC3C",79,0)
        . . . . SET TMGCONTINUE=1
"RTN","TMGRPC3C",80,0)
        . . . . SET TMGOUT(1)="Can't SET Verify code when first adding NEW user.  Try again."
"RTN","TMGRPC3C",81,0)
        . . . ;"NOTICE: currently this code does NOT force code of certain length etc.
"RTN","TMGRPC3C",82,0)
        . . . ;"S Y=$$VCHK(XV2,XUH) Q:Y Y  ;check for valid verify code, returns 0 (for OK), or 1^msg
"RTN","TMGRPC3C",83,0)
        . . . ;"SET TMGVALUE=$$UP^XLFSTR(TMGVALUE) ;"verify code must be upper case   elh
"RTN","TMGRPC3C",84,0)
        . . . SET TMGVALUE=$$EN^XUSHSH(TMGVALUE)  ;"verify code is supposed to be hashed first
"RTN","TMGRPC3C",85,0)
        . . . SET TMGAVC=1  ;"signal change
"RTN","TMGRPC3C",86,0)
        . . . SET TMGAVC("DA")=+TMGIENS
"RTN","TMGRPC3C",87,0)
        . . . SET TMGINTVALUE=1
"RTN","TMGRPC3C",88,0)
        . . ELSE  IF TMGFIELD=7 DO  ;"7 = DISUSER  Value should be 'YES' or 'NO'
"RTN","TMGRPC3C",89,0)
        . . . IF TMGIENS["+" DO  QUIT
"RTN","TMGRPC3C",90,0)
        . . . . SET TMGCONTINUE=1
"RTN","TMGRPC3C",91,0)
        . . . . SET TMGOUT(1)="Can't SET DISUSER code when first adding NEW user.  Try again."
"RTN","TMGRPC3C",92,0)
        . . . IF TMGVALUE="YES" DO
"RTN","TMGRPC3C",93,0)
        . . . . SET TMGFDA(200,TMGIENS,9.2)="NOW" ;"add 9.2 = termination date
"RTN","TMGRPC3C",94,0)
        . . . . SET TMGINACTUSER("DA")=+TMGIENS
"RTN","TMGRPC3C",95,0)
        . . . IF (TMGVALUE="NO")!(TMGVALUE="@") DO
"RTN","TMGRPC3C",96,0)
        . . . . SET TMGFDA(200,TMGIENS,9.2)="@" ;"delete 9.2 = termination date
"RTN","TMGRPC3C",97,0)
        . . . . SET TMGFDA(200,TMGIENS,9.4)="@" ;"delete 9.4 = termination reason
"RTN","TMGRPC3C",98,0)
        . . . . SET TMGREACTUSER("DA")=+TMGIENS
"RTN","TMGRPC3C",99,0)
        . . ELSE  IF TMGFIELD=3 DO  ;"3 = FILE MANAGER ACCESS CODE  (i.e. @ etc)
"RTN","TMGRPC3C",100,0)
        . . . IF TMGVALUE'["^" DO
"RTN","TMGRPC3C",101,0)
        . . . . SET $PIECE(^VA(200,+TMGIENS,0),"^",4)=TMGVALUE  ;"force value in with low-level write
"RTN","TMGRPC3C",102,0)
        . . . . SET TMGCONTINUE=1
"RTN","TMGRPC3C",103,0)
        . IF TMGCONTINUE QUIT
"RTN","TMGRPC3C",104,0)
        . IF TMGIENS["+" DO
"RTN","TMGRPC3C",105,0)
        . . SET TMGNEWFDA(TMGFILE,TMGIENS,TMGFIELD)=TMGVALUE
"RTN","TMGRPC3C",106,0)
        . ELSE  DO
"RTN","TMGRPC3C",107,0)
        . . IF TMGINTVALUE=1 SET TMGINTFDA(TMGFILE,TMGIENS,TMGFIELD)=TMGVALUE
"RTN","TMGRPC3C",108,0)
        . . ELSE  SET TMGFDA(TMGFILE,TMGIENS,TMGFIELD)=TMGVALUE
"RTN","TMGRPC3C",109,0)
        . IF $DATA(TMGOLDDUZ) DO      ;"elh  reset file access
"RTN","TMGRPC3C",110,0)
        . . SET DUZ(0)=TMGOLDDUZ
"RTN","TMGRPC3C",111,0)
        . . KILL TMGOLDDUZ
"RTN","TMGRPC3C",112,0)
 ;
"RTN","TMGRPC3C",113,0)
        SET TMGOUT(0)="1^Success"  ;"default to success
"RTN","TMGRPC3C",114,0)
        IF $DATA(TMGFDA) DO
"RTN","TMGRPC3C",115,0)
        . DO FILE^DIE(TMGFLAG_"K","TMGFDA","TMGMSG")
"RTN","TMGRPC3C",116,0)
        IF $DATA(TMGMSG("DIERR")) DO
"RTN","TMGRPC3C",117,0)
        . SET TMGOUT(0)="-1^See Fileman message re posting"
"RTN","TMGRPC3C",118,0)
        . SET TMGOUT(1)=$$GETERSTR^TMGRPC3G(.TMGMSG)_";"_$GET(TMGOUT(1))
"RTN","TMGRPC3C",119,0)
        . KILL TMGMSG
"RTN","TMGRPC3C",120,0)
 ;
"RTN","TMGRPC3C",121,0)
        IF $DATA(TMGINTFDA) DO  ;"process FDA with INTERNAL values
"RTN","TMGRPC3C",122,0)
        . DO FILE^DIE("K","TMGINTFDA","TMGMSG")
"RTN","TMGRPC3C",123,0)
        IF $DATA(TMGMSG("DIERR")) DO
"RTN","TMGRPC3C",124,0)
        . SET TMGOUT(0)="-1^See Fileman message re posting"
"RTN","TMGRPC3C",125,0)
        . SET TMGOUT(1)=$$GETERSTR^TMGRPC3G(.TMGMSG)_";"_$GET(TMGOUT(1))
"RTN","TMGRPC3C",126,0)
        . KILL TMGMSG
"RTN","TMGRPC3C",127,0)
 ;
"RTN","TMGRPC3C",128,0)
        IF $DATA(TMGNEWFDA) DO
"RTN","TMGRPC3C",129,0)
        . DO UPDATE^DIE(TMGFLAG_"K","TMGNEWFDA","TMGIEN","TMGMSG")
"RTN","TMGRPC3C",130,0)
        IF $DATA(TMGMSG("DIERR")) DO
"RTN","TMGRPC3C",131,0)
        . SET TMGOUT(0)="-1^See Fileman message re posting"
"RTN","TMGRPC3C",132,0)
        . SET TMGOUT(1)=$$GETERSTR^TMGRPC3G(.TMGMSG)_";"_$GET(TMGOUT(1))
"RTN","TMGRPC3C",133,0)
        . KILL TMGMSG
"RTN","TMGRPC3C",134,0)
 ;
"RTN","TMGRPC3C",135,0)
        IF ($PIECE(TMGOUT(0),"^",1)=1)&($DATA(TMGIEN)) DO
"RTN","TMGRPC3C",136,0)
        . NEW TMGCOUNT SET TMGCOUNT=1
"RTN","TMGRPC3C",137,0)
        . NEW TMGI SET TMGI=""
"RTN","TMGRPC3C",138,0)
        . FOR  SET TMGI=$ORDER(TMGIEN(TMGI)) QUIT:(TMGI="")  DO
"RTN","TMGRPC3C",139,0)
        . . SET TMGOUT(TMGCOUNT)=TMGI_"^"_$GET(TMGIEN(TMGI))
"RTN","TMGRPC3C",140,0)
        . . SET TMGCOUNT=TMGCOUNT+1
"RTN","TMGRPC3C",141,0)
 ;
"RTN","TMGRPC3C",142,0)
        ;"If Access code / Verify code changed, then finish some follow up business
"RTN","TMGRPC3C",143,0)
        ;"  as per BRCVC^XUS2<--CVC^XUSRB<--called by RPC 'XUS CVC'
"RTN","TMGRPC3C",144,0)
        IF TMGAVC DO
"RTN","TMGRPC3C",145,0)
        . NEW DA SET DA=TMGAVC("DA")
"RTN","TMGRPC3C",146,0)
        . DO CALL^XUSERP(DA,2)  ;"Call for Kernel Create, **Update**, Disuser or Terminate events
"RTN","TMGRPC3C",147,0)
        . ;"The above sets Taskman job -->DEQUE^XUSERP--> -->  D HL7^ALPBGEN
"RTN","TMGRPC3C",148,0)
 ;
"RTN","TMGRPC3C",149,0)
        IF $DATA(TMGINACTUSER) DO  ;"Finish up inactivating user with VistA code
"RTN","TMGRPC3C",150,0)
        . NEW TMGRESULT
"RTN","TMGRPC3C",151,0)
        . SET TMGRESULT=$$QTERMUSR^TMGRPC3D(TMGINACTUSER("DA"))  ;"finish termination of user code
"RTN","TMGRPC3C",152,0)
        . IF +TMGRESULT'=0 DO
"RTN","TMGRPC3C",153,0)
        . . SET TMGOUT(0)="-1^See Fileman message re terminating user"
"RTN","TMGRPC3C",154,0)
        . . SET TMGOUT(1)=$GET(TMGOUT(1))_";"_TMGRESULT
"RTN","TMGRPC3C",155,0)
 ;
"RTN","TMGRPC3C",156,0)
        IF $DATA(TMGREACTUSER) DO  ;"finish up reactivating user with VistA code
"RTN","TMGRPC3C",157,0)
        . NEW TMGRESULT
"RTN","TMGRPC3C",158,0)
        . SET TMGRESULT=$$QTREAUSR^TMGRPC3D(TMGREACTUSER("DA")) ;"launch quiet reactivation code
"RTN","TMGRPC3C",159,0)
        . IF +TMGRESULT'=0 DO
"RTN","TMGRPC3C",160,0)
        . . SET TMGOUT(0)="-1^See Fileman message re reactivating user"
"RTN","TMGRPC3C",161,0)
        . . SET TMGOUT(1)=$GET(TMGOUT(1))_";"_TMGRESULT
"RTN","TMGRPC3C",162,0)
 ;
"RTN","TMGRPC3C",163,0)
        QUIT
"RTN","TMGRPC3D")
0^5^B124298019
"RTN","TMGRPC3D",1,0)
TMGRPC3D ;TMG/kst/Support Functions for GUI_Config ;6/23/11, 2/2/14
"RTN","TMGRPC3D",2,0)
         ;;1.0;TMG-LIB;**1**;08/31/08;Build 9
"RTN","TMGRPC3D",3,0)
 ;
"RTN","TMGRPC3D",4,0)
 ;"TMG RPC FUNCTIONS for a GUI config program
"RTN","TMGRPC3D",5,0)
 ;
"RTN","TMGRPC3D",6,0)
 ;"Kevin Toppenberg MD
"RTN","TMGRPC3D",7,0)
 ;"GNU Lessor General Public License (LGPL) applies
"RTN","TMGRPC3D",8,0)
 ;"7/20/08
"RTN","TMGRPC3D",9,0)
 ;
"RTN","TMGRPC3D",10,0)
 ;"=======================================================================
"RTN","TMGRPC3D",11,0)
 ;" RPC -- Public Functions.
"RTN","TMGRPC3D",12,0)
 ;"=======================================================================
"RTN","TMGRPC3D",13,0)
 ;" <none>
"RTN","TMGRPC3D",14,0)
 ;"=======================================================================
"RTN","TMGRPC3D",15,0)
 ;"PRIVATE API FUNCTIONS
"RTN","TMGRPC3D",16,0)
 ;"=======================================================================
"RTN","TMGRPC3D",17,0)
 ;"QTERMUSR(XUDA) -- quietly inactive a given user
"RTN","TMGRPC3D",18,0)
 ;"QTREAUSR(TMGDA) -- launch quiet reactivation code
"RTN","TMGRPC3D",19,0)
 ;"GETSRLST(TMGOUT,TMGPARAMS) -- Get all .01 sub record entries for a subfile
"RTN","TMGRPC3D",20,0)
 ;"CLONEUSR(TMGOUT,TMGPARAMS) -- replicate a record into a NEW record, including all subrecs.
"RTN","TMGRPC3D",21,0)
 ;"CLONEREC(TMGOUT,TMGPARAMS) --- replicate a record into a NEW record, including all subrecs.
"RTN","TMGRPC3D",22,0)
 ;
"RTN","TMGRPC3D",23,0)
 ;"=======================================================================
"RTN","TMGRPC3D",24,0)
 ;"=======================================================================
"RTN","TMGRPC3D",25,0)
 ;"Dependencies:
"RTN","TMGRPC3D",26,0)
 ;"  TMGRPC3* only
"RTN","TMGRPC3D",27,0)
 ;
"RTN","TMGRPC3D",28,0)
 ;"=======================================================================
"RTN","TMGRPC3D",29,0)
 ;"=======================================================================
"RTN","TMGRPC3D",30,0)
 ;
"RTN","TMGRPC3D",31,0)
QTERMUSR(XUDA) ;"QUITELY TERMINATE USER
"RTN","TMGRPC3D",32,0)
        ;"Purpose: to quietly inactive a given user
"RTN","TMGRPC3D",33,0)
        ;"         I traced through menu option XUSERDEACT --> XUSTERM to create below
"RTN","TMGRPC3D",34,0)
        ;"Input: XUDA -- the IEN in 200 of user to inactivate
"RTN","TMGRPC3D",35,0)
        ;"Note:  based on code from XUSTERM
"RTN","TMGRPC3D",36,0)
        ;"Results: 0 = OK, or 1^message IF error
"RTN","TMGRPC3D",37,0)
 ;
"RTN","TMGRPC3D",38,0)
        NEW TMGRESULT SET TMGRESULT=0
"RTN","TMGRPC3D",39,0)
        NEW TMGFDA,TMGMSG,XUDT,DIC
"RTN","TMGRPC3D",40,0)
        SET TMGFDA(200,+XUDA_",",9.2)="NOW"
"RTN","TMGRPC3D",41,0)
        DO FILE^DIE("EK","TMGFDA","TMGMSG")
"RTN","TMGRPC3D",42,0)
        IF $DATA(TMGMSG("DIERR")) DO  GOTO QTUDONE
"RTN","TMGRPC3D",43,0)
        . SET TMGRESULT="1^"_$$GETERSTR^TMGRPC3G(.TMGMSG)_";"_$GET(TMGOUT(1))
"RTN","TMGRPC3D",44,0)
        SET XUDT=$P(^VA(200,+XUDA,0),"^",11)  ;" field 9.2 termination date
"RTN","TMGRPC3D",45,0)
        DO GET^XUSTERM  ;"load up info about mail, mailboxes, keys   ? needed ?
"RTN","TMGRPC3D",46,0)
        SET ZTDTH=XUDT  ;"Task Start time. VA FileMan or $HOROLOG format
"RTN","TMGRPC3D",47,0)
        SET ZTRTN="DQ1^XUSTERM1"  ;"routine to be fired
"RTN","TMGRPC3D",48,0)
        SET ZTDESC="DEACTIVATE USER"  ;"description
"RTN","TMGRPC3D",49,0)
        SET ZTSAVE("XUDA")=""    ;"save variable XUDA for use in task
"RTN","TMGRPC3D",50,0)
        SET ZTIO=""    ;"no IO device needed
"RTN","TMGRPC3D",51,0)
        DO ^%ZTLOAD  ;"que a taskman task
"RTN","TMGRPC3D",52,0)
QTUDONE ;
"RTN","TMGRPC3D",53,0)
        QUIT TMGRESULT
"RTN","TMGRPC3D",54,0)
 ;
"RTN","TMGRPC3D",55,0)
 ;
"RTN","TMGRPC3D",56,0)
QTREAUSR(TMGDA) ;"QUITELY REACTIVE USER
"RTN","TMGRPC3D",57,0)
        ;"Purpose: launch quiet reactivation code
"RTN","TMGRPC3D",58,0)
        ;"         I traced through menu option XUSERREACT --> REACT^XUSERNEW to create below
"RTN","TMGRPC3D",59,0)
        ;"Input: TMGDA -- the IEN in 200 to be reactivated
"RTN","TMGRPC3D",60,0)
        ;"Results: 0 IF OK, or 1^ErrMsg
"RTN","TMGRPC3D",61,0)
        ;"NOTE: when user is deleated through VistA code, the access and verify codes
"RTN","TMGRPC3D",62,0)
        ;"      are deleted.  This function does NOT replace these.
"RTN","TMGRPC3D",63,0)
 ;
"RTN","TMGRPC3D",64,0)
        NEW TMGRESULT SET TMGRESULT=0
"RTN","TMGRPC3D",65,0)
        NEW TMGFDA,TMGMSG,DIC,Y
"RTN","TMGRPC3D",66,0)
        SET TMGFDA(200,TMGDA_",",9.2)="@" ;"Clear the Termination date
"RTN","TMGRPC3D",67,0)
        DO FILE^DIE("EK","TMGFDA","TMGMSG")      ;"Post data
"RTN","TMGRPC3D",68,0)
        IF $DATA(TMGMSG("DIERR")) DO  GOTO QRUDONE
"RTN","TMGRPC3D",69,0)
        . SET TMGRESULT="1^"_$$GETERSTR^TMGRPC3G(.TMGMSG)
"RTN","TMGRPC3D",70,0)
 ;
"RTN","TMGRPC3D",71,0)
        KILL XMZ   ;" IF null, then user can access old mail.
"RTN","TMGRPC3D",72,0)
        SET Y=TMGDA ;"set user to work on.
"RTN","TMGRPC3D",73,0)
        DO NEW^XM  ;"mailman driver -- create a mailbox for user Y
"RTN","TMGRPC3D",74,0)
 ;
"RTN","TMGRPC3D",75,0)
        IF +$PIECE($GET(^VA(200,TMGDA,201)),"^",1)'>0 DO  ;"201;1 = PRIMARY MENU OPTION (#201)
"RTN","TMGRPC3D",76,0)
        . SET TMGFDA(200,TMGDA_",",201)="EVE"  ;"set default primary menu to EVE (high level!)
"RTN","TMGRPC3D",77,0)
        . DO FILE^DIE("EK","TMGFDA","TMGMSG")
"RTN","TMGRPC3D",78,0)
        . IF $DATA(TMGMSG("DIERR")) DO
"RTN","TMGRPC3D",79,0)
        . . SET TMGRESULT="1^"_$$GETERSTR^TMGRPC3G(.TMGMSG)
"RTN","TMGRPC3D",80,0)
        IF +TMGRESULT>0 GOTO QRUDONE
"RTN","TMGRPC3D",81,0)
 ;
"RTN","TMGRPC3D",82,0)
        KILL XMDT,XMM,XMZ
"RTN","TMGRPC3D",83,0)
        DO REACT^XQ84(TMGDA) ;"See IF this user's menu trees need to be rebuilt
"RTN","TMGRPC3D",84,0)
QRUDONE ;
"RTN","TMGRPC3D",85,0)
        QUIT TMGRESULT
"RTN","TMGRPC3D",86,0)
 ;
"RTN","TMGRPC3D",87,0)
 ;
"RTN","TMGRPC3D",88,0)
GETSRLST(TMGOUT,TMGPARAMS) ;"GET SUB-RECS LIST
"RTN","TMGRPC3D",89,0)
        ;"Purpose: Get all .01 sub record entries for a subfile
"RTN","TMGRPC3D",90,0)
        ;"Input: TMGOUT -- an OUT PARAMETER, PASS BY REFERENCE.
"RTN","TMGRPC3D",91,0)
        ;"       TMGPARAMS -- SubFileNum^ParentIENS^[FIELDS]
"RTN","TMGRPC3D",92,0)
        ;"              SubFileNum - Subfile Number to get list from.
"RTN","TMGRPC3D",93,0)
        ;"              ParentIENS -- IENS for parent to get list from (e.g. "73,"
"RTN","TMGRPC3D",94,0)
        ;"              FIELDS -- OPTIONAL, a Fields string to pass to LIST^DIC, for getting back values
"RTN","TMGRPC3D",95,0)
        ;"Output: TMGOUT is filled as follows:
"RTN","TMGRPC3D",96,0)
        ;"          TMGOUT(0)="1^Success^<Map>" or "-1^Message"
"RTN","TMGRPC3D",97,0)
        ;"                <Map> gives the label name for each piece of the output.
"RTN","TMGRPC3D",98,0)
        ;"                     e.g. 'IEN^IX(1)^,01^2I^WID(WRITE)'
"RTN","TMGRPC3D",99,0)
        ;"          TMGOUT(1)=IEN^Value^... (return depends of fields requested.  Default is .01)
"RTN","TMGRPC3D",100,0)
        ;"          TMGOUT(2)=IEN^Value^...
"RTN","TMGRPC3D",101,0)
        ;"          ...
"RTN","TMGRPC3D",102,0)
        ;"Results: none
"RTN","TMGRPC3D",103,0)
 ;
"RTN","TMGRPC3D",104,0)
        SET TMGOUT(0)="1^Success"
"RTN","TMGRPC3D",105,0)
        NEW TMGSUBFILE SET TMGSUBFILE=+$PIECE(TMGPARAMS,"^",1)
"RTN","TMGRPC3D",106,0)
        IF TMGSUBFILE'>0 DO  GOTO GSRLDONE
"RTN","TMGRPC3D",107,0)
        . SET TMGOUT(0)="-1^No Subfile number supplied"
"RTN","TMGRPC3D",108,0)
        NEW TMGPARIENTIENS SET TMGPARIENTIENS=$PIECE(TMGPARAMS,"^",2)
"RTN","TMGRPC3D",109,0)
        IF TMGPARIENTIENS="" DO  GOTO GSRLDONE
"RTN","TMGRPC3D",110,0)
        . SET TMGOUT(0)="-1^No Parent IENS supplied"
"RTN","TMGRPC3D",111,0)
        NEW TMGIENS SET TMGIENS=","_TMGPARIENTIENS
"RTN","TMGRPC3D",112,0)
        NEW TMGFLDS SET TMGFLDS=$PIECE(TMGPARAMS,"^",3)
"RTN","TMGRPC3D",113,0)
        NEW TMGMSG,TMGERR
"RTN","TMGRPC3D",114,0)
 ;
"RTN","TMGRPC3D",115,0)
        DO LIST^DIC(TMGSUBFILE,TMGIENS,TMGFLDS,"PU","*",,,,,,"TMGMSG","TMGERR")
"RTN","TMGRPC3D",116,0)
 ;
"RTN","TMGRPC3D",117,0)
        IF $DATA(TMGMSG("DIERR")) DO  GOTO GSRLDONE
"RTN","TMGRPC3D",118,0)
        . SET TMGOUT(0)="-1^See Fileman message"
"RTN","TMGRPC3D",119,0)
        . SET TMGOUT(1)=$$GETERSTR^TMGRPC3G(.TMGMSG)
"RTN","TMGRPC3D",120,0)
        . SET TMGOUT(2)="Actual call was:"
"RTN","TMGRPC3D",121,0)
        . SET TMGOUT(3)="DO LIST^DIC("""_TMGSUBFILE_""","""_TMGIENS_""","""_TMGFLDS_""",""PU"",""*"",,,,,,""TMGMSG"",""TMGERR"")"
"RTN","TMGRPC3D",122,0)
 ;
"RTN","TMGRPC3D",123,0)
        NEW TMGCOUNT SET TMGCOUNT=1
"RTN","TMGRPC3D",124,0)
        NEW TMGI SET TMGI=0
"RTN","TMGRPC3D",125,0)
        FOR  SET TMGI=$ORDER(TMGMSG("DILIST",TMGI)) QUIT:(+TMGI'>0)  DO
"RTN","TMGRPC3D",126,0)
        . NEW TMGONEENTRY SET TMGONEENTRY=$GET(TMGMSG("DILIST",TMGI,0))
"RTN","TMGRPC3D",127,0)
        . IF TMGONEENTRY="" QUIT
"RTN","TMGRPC3D",128,0)
        . NEW TMGIEN SET TMGIEN=$PIECE(TMGONEENTRY,"^",1)
"RTN","TMGRPC3D",129,0)
        . SET $PIECE(TMGONEENTRY,"^",1)=TMGIEN_","_TMGPARIENTIENS
"RTN","TMGRPC3D",130,0)
        . SET TMGOUT(TMGCOUNT)=TMGONEENTRY
"RTN","TMGRPC3D",131,0)
        . SET TMGCOUNT=TMGCOUNT+1
"RTN","TMGRPC3D",132,0)
        NEW MAP SET MAP=$GET(TMGMSG("DILIST",0,"MAP"))
"RTN","TMGRPC3D",133,0)
        SET TMGOUT(0)=TMGOUT(0)_"^"_MAP
"RTN","TMGRPC3D",134,0)
 ;
"RTN","TMGRPC3D",135,0)
GSRLDONE ;
"RTN","TMGRPC3D",136,0)
        QUIT
"RTN","TMGRPC3D",137,0)
 ;
"RTN","TMGRPC3D",138,0)
CLONEUSR(TMGOUT,TMGPARAMS) ;
"RTN","TMGRPC3D",139,0)
        ;"Purpose: to replicate a record into a NEW record, including all
"RTN","TMGRPC3D",140,0)
        ; subrecs.
"RTN","TMGRPC3D",141,0)
        ;"         Implementation of "CLONE RECORD" request
"RTN","TMGRPC3D",142,0)
        ;"Input: TMGOUT -- an OUT PARAMETER, PASS BY REFERENCE.
"RTN","TMGRPC3D",143,0)
        ;"       TMGPARAMS -- SourceIENS^New.01Value
"RTN","TMGRPC3D",144,0)
        ;"          FileNum - filename file that is to be worked in
"RTN","TMGRPC3D",145,0)
        ;"          SourceIENS -- source IENS for NEW record, (i.e. '123,'
"RTN","TMGRPC3D",146,0)
        ;not '123')
"RTN","TMGRPC3D",147,0)
        ;"          New.01Value -- NEW value to be put into the .01 field
"RTN","TMGRPC3D",148,0)
        ;(to distinguish it from the old record)
"RTN","TMGRPC3D",149,0)
        ;"Output: TMGOUT is filled as follows:
"RTN","TMGRPC3D",150,0)
        ;"          TMGOUT(0)="1^Success^NewIENS" or "-1^Message"
"RTN","TMGRPC3D",151,0)
        ;"          TMGOUT(1)=Long Fileman message (if -1 error)
"RTN","TMGRPC3D",152,0)
 ;
"RTN","TMGRPC3D",153,0)
        ;LOCAL GOW 2/4/2012 SECONDARY OPTION COPY
"RTN","TMGRPC3D",154,0)
        N SOURCEIEN
"RTN","TMGRPC3D",155,0)
        S SOURCEIEN=$P(TMGPARAMS,"^",1)
"RTN","TMGRPC3D",156,0)
        ;END LOCAL MOD
"RTN","TMGRPC3D",157,0)
        SET TMGPARAMS="200^"_TMGPARAMS
"RTN","TMGRPC3D",158,0)
        DO CLONEREC(.TMGOUT,TMGPARAMS)
"RTN","TMGRPC3D",159,0)
        NEW TMGFDA,TMGMSG
"RTN","TMGRPC3D",160,0)
        IF +TMGOUT(0)'=1 GOTO CUDONE
"RTN","TMGRPC3D",161,0)
        NEW TMGNEWIEN
"RTN","TMGRPC3D",162,0)
        SET TMGNEWIEN=+$PIECE(TMGOUT(0),"^",3)
"RTN","TMGRPC3D",163,0)
        IF TMGNEWIEN="" DO  GOTO CUDONE
"RTN","TMGRPC3D",164,0)
        . SET TMGOUT(0)="-1^Can't find IEN of added record"
"RTN","TMGRPC3D",165,0)
 ;
"RTN","TMGRPC3D",166,0)
        ;
"RTN","TMGRPC3D",167,0)
        ;"Set NEW user to inactive (needs editing before it is active)
"RTN","TMGRPC3D",168,0)
        NEW TMGDATA
"RTN","TMGRPC3D",169,0)
        SET TMGDATA(0)="200^"_TMGNEWIEN_",^7^^YES"
"RTN","TMGRPC3D",170,0)
        DO POSTDATA^TMGRPC3C(.TMGOUT,.TMGDATA,"E")
"RTN","TMGRPC3D",171,0)
        IF +TMGOUT(0)=1 SET $PIECE(TMGOUT(0),"^",3)=TMGNEWIEN
"RTN","TMGRPC3D",172,0)
        ;
"RTN","TMGRPC3D",173,0)
 ;
"RTN","TMGRPC3D",174,0)
        ;LOCAL GOW 2/4/12 SECONDARY OPTION COPY
"RTN","TMGRPC3D",175,0)
        ;I $E(TMGOUT(1),1,1)="+" D
"RTN","TMGRPC3D",176,0)
        ;.SET $PIECE(TMGOUT(0),"^",3)=$PIECE(TMGOUT(1),"^",2)
"RTN","TMGRPC3D",177,0)
        ;.S TMGNEWIEN=$PIECE(TMGOUT(1),"^",2)
"RTN","TMGRPC3D",178,0)
        ;TRANSFER SECONDARY OPTIONS SUBFILE ENTRIES
"RTN","TMGRPC3D",179,0)
        H 5
"RTN","TMGRPC3D",180,0)
        D EN1^TMGRPC3I(SOURCEIEN,TMGNEWIEN)
"RTN","TMGRPC3D",181,0)
        ;END LOCAL MODS
"RTN","TMGRPC3D",182,0)
        ;
"RTN","TMGRPC3D",183,0)
 ;
"RTN","TMGRPC3D",184,0)
CUDONE  ;
"RTN","TMGRPC3D",185,0)
        QUIT
"RTN","TMGRPC3D",186,0)
 ;
"RTN","TMGRPC3D",187,0)
CLONEREC(TMGOUT,TMGPARAMS) ;
"RTN","TMGRPC3D",188,0)
        ;"Purpose: to replicate a record into a NEW record, including all subrecs (to be implemented).
"RTN","TMGRPC3D",189,0)
        ;"         Implementation of "CLONE RECORD" request
"RTN","TMGRPC3D",190,0)
        ;"Input: TMGOUT -- an OUT PARAMETER, PASS BY REFERENCE.
"RTN","TMGRPC3D",191,0)
        ;"       TMGPARAMS -- FileNum^SourceIENS^New.01Value
"RTN","TMGRPC3D",192,0)
        ;"              FileNum - filename file that is to be worked in
"RTN","TMGRPC3D",193,0)
        ;"              SourceIENS -- the source IENS for the NEW record, (i.e. 123,  not 123)
"RTN","TMGRPC3D",194,0)
        ;"              New.01Value -- the NEW value to be put into the .01 field (to distinguish it from the old record)
"RTN","TMGRPC3D",195,0)
        ;"Output: TMGOUT is filled as follows:
"RTN","TMGRPC3D",196,0)
        ;"          TMGOUT(0)="1^Success^NewIENS" or "-1^Message"
"RTN","TMGRPC3D",197,0)
        ;"          TMGOUT(1)=Long Fileman message (if -1 error)
"RTN","TMGRPC3D",198,0)
        ;"NOTE: This hasn't been tested on subfiles yet...
"RTN","TMGRPC3D",199,0)
 ;
"RTN","TMGRPC3D",200,0)
        NEW TMGFILE,TMGIENS,TMGNEW01VALUE
"RTN","TMGRPC3D",201,0)
        SET TMGOUT(0)="-1^Error"  ;"default to error
"RTN","TMGRPC3D",202,0)
 ;
"RTN","TMGRPC3D",203,0)
        SET TMGFILE=+$PIECE(TMGPARAMS,"^",1)
"RTN","TMGRPC3D",204,0)
        IF TMGFILE'>0 DO  GOTO CRDONE
"RTN","TMGRPC3D",205,0)
        . SET TMGOUT(0)="-1^No file number supplied"
"RTN","TMGRPC3D",206,0)
        SET TMGIENS=$PIECE(TMGPARAMS,"^",2)
"RTN","TMGRPC3D",207,0)
        IF TMGIENS="" DO  GOTO CRDONE
"RTN","TMGRPC3D",208,0)
        . SET TMGOUT(0)="-1^IENS not supplied"
"RTN","TMGRPC3D",209,0)
        IF +TMGIENS=TMGIENS DO
"RTN","TMGRPC3D",210,0)
        . IF TMGIENS'["," SET TMGIENS=TMGIENS_","
"RTN","TMGRPC3D",211,0)
        SET TMGNEW01VALUE=$PIECE(TMGPARAMS,"^",3)
"RTN","TMGRPC3D",212,0)
        IF TMGNEW01VALUE="" DO  GOTO CRDONE
"RTN","TMGRPC3D",213,0)
        . SET TMGOUT(0)="-1^No NEW value supplied for .01 value"
"RTN","TMGRPC3D",214,0)
 ;
"RTN","TMGRPC3D",215,0)
        NEW TMGARRAY,TMGMSG,TMGTEMP
"RTN","TMGRPC3D",216,0)
        NEW TMGREF SET TMGREF="TMGARRAY"
"RTN","TMGRPC3D",217,0)
 ;
"RTN","TMGRPC3D",218,0)
        DO STUBNEWR^TMGRPC3E(TMGFILE,TMGNEW01VALUE,.TMGOUT)
"RTN","TMGRPC3D",219,0)
        IF +TMGOUT(0)'=1 DO  GOTO CRDONE
"RTN","TMGRPC3D",220,0)
        . SET $PIECE(TMGOUT(0),"^",2)="Unable to stub in NEW record. "_$PIECE(TMGOUT(0),"^",2)
"RTN","TMGRPC3D",221,0)
        NEW TMGNEWIEN SET TMGNEWIEN=$PIECE(TMGOUT(0),"^",3)
"RTN","TMGRPC3D",222,0)
        ;"Write "The IENS of the NEW record is: ",TMGNEWIEN,! ;"TEMP!!!
"RTN","TMGRPC3D",223,0)
 ;
"RTN","TMGRPC3D",224,0)
        ;"Note: Using a "X" flag is VERY slow, because it reindexes
"RTN","TMGRPC3D",225,0)
        ;"      ALL XREFS for ALL entries in file (e.g. 60 seconds)
"RTN","TMGRPC3D",226,0)
        ;"DO TRNMRG^TMGDIT("M",TMGFILE,TMGFILE,TMGIENS,TMGNEWIEN_",")  ;"DO actual record copy.
"RTN","TMGRPC3D",227,0)
        DO TRNMRG^DIT("M",TMGFILE,TMGFILE,TMGIENS,TMGNEWIEN_",")  ;"do actual record copy.
"RTN","TMGRPC3D",228,0)
        NEW DA,DIK
"RTN","TMGRPC3D",229,0)
        SET DIK=$GET(^DIC(TMGFILE,0,"GL"))
"RTN","TMGRPC3D",230,0)
        SET DA=TMGNEWIEN
"RTN","TMGRPC3D",231,0)
        IF (+DA>0)&(DIK'="") DO IX1^DIK  ;"index just the NEW record
"RTN","TMGRPC3D",232,0)
 ;
"RTN","TMGRPC3D",233,0)
        ;"OK IF we got this far (can't check error from TRNMRG)
"RTN","TMGRPC3D",234,0)
        SET TMGOUT(0)="1^Success^"_TMGNEWIEN
"RTN","TMGRPC3D",235,0)
 ;
"RTN","TMGRPC3D",236,0)
        ;"Now copy selected subfile records
"RTN","TMGRPC3D",237,0)
 ;
"RTN","TMGRPC3D",238,0)
CRDONE  QUIT
"RTN","TMGRPC3D",239,0)
 ;
"RTN","TMGRPC3D",240,0)
COPYSREC(PARENTFNUM,PARENTFLD,SRCIEN,DESTIEN) ;
"RTN","TMGRPC3D",241,0)
        ;"Purpose: to copy all subfile file records in a parent record, and copy
"RTN","TMGRPC3D",242,0)
        ;"         into a NEW **BLANK** parent record
"RTN","TMGRPC3D",243,0)
        ;"NOTE: This function should NOT be used with any destination record
"RTN","TMGRPC3D",244,0)
        ;"      that already has subfile records.  They will be deleted with
"RTN","TMGRPC3D",245,0)
        ;"      direct global kills. This could leave dangling xref pointers
"RTN","TMGRPC3D",246,0)
        ;"NOTE: This function has not been written to work with sub-sub-files.
"RTN","TMGRPC3D",247,0)
        ;"      It will only work with first-level subfiles.
"RTN","TMGRPC3D",248,0)
        ;"Input: PARENTFNUM -- this is NOT the subfile number.  It is the file
"RTN","TMGRPC3D",249,0)
        ;"                   number of the PARENT file.
"RTN","TMGRPC3D",250,0)
        ;"       PARENTFLD: this is the field (in the parent file) that
"RTN","TMGRPC3D",251,0)
        ;"                     represents the subfile
"RTN","TMGRPC3D",252,0)
        ;"       SRCIEN: This is the IEN of the *parent* record, in the parent file
"RTN","TMGRPC3D",253,0)
        ;"       DESTIEN: This is the IEN of the destination record, in the parent
"RTN","TMGRPC3D",254,0)
        ;"                file. This record must already exist.  This should be
"RTN","TMGRPC3D",255,0)
        ;"                an empty record.   See NOTE above.
"RTN","TMGRPC3D",256,0)
 ;
"RTN","TMGRPC3E")
0^2^B98787333
"RTN","TMGRPC3E",1,0)
TMGRPC3E ;TMG/kst/Support Functions for GUI_Config ;08/31/08, 7/7/10, 3/31/13, 2/2/14
"RTN","TMGRPC3E",2,0)
         ;;1.0;TMG-LIB;**1**;08/31/08;Build 9
"RTN","TMGRPC3E",3,0)
 ;
"RTN","TMGRPC3E",4,0)
 ;"TMG RPC FUNCTIONS for a GUI config program
"RTN","TMGRPC3E",5,0)
 ;
"RTN","TMGRPC3E",6,0)
 ;"Kevin Toppenberg MD
"RTN","TMGRPC3E",7,0)
 ;"GNU Lessor General Public License (LGPL) applies
"RTN","TMGRPC3E",8,0)
 ;"7/20/08
"RTN","TMGRPC3E",9,0)
 ;
"RTN","TMGRPC3E",10,0)
 ;"=======================================================================
"RTN","TMGRPC3E",11,0)
 ;" RPC -- Public Functions.
"RTN","TMGRPC3E",12,0)
 ;"=======================================================================
"RTN","TMGRPC3E",13,0)
 ;" <none>
"RTN","TMGRPC3E",14,0)
 ;"=======================================================================
"RTN","TMGRPC3E",15,0)
 ;"PRIVATE API FUNCTIONS
"RTN","TMGRPC3E",16,0)
 ;"=======================================================================
"RTN","TMGRPC3E",17,0)
 ;"GETEMPTY(TMGOUT,TMGPARAMS) -- get stub entries for a file (typically a subfile)
"RTN","TMGRPC3E",18,0)
 ;"GETHELPM(TMGOUT,TMGPARAMS)  -- retrieve the help message for a given field.
"RTN","TMGRPC3E",19,0)
 ;"STUBNEWR(TMGFILE,NewValue,TMGOUT) -- create a stub entry in the file (200), to be filled in elsewhere
"RTN","TMGRPC3E",20,0)
 ;"GETIFWP(TMGOUT,TMGPARAMS) -- return IF filenumber is a WP subfile
"RTN","TMGRPC3E",21,0)
 ;"GETWPFLD(TMGOUT,TMGPARAMS) -- retrieve on word processing (WP) field entry
"RTN","TMGRPC3E",22,0)
 ;"PSTWPFLD(TMGOUT,TMGPARAMS,INPUT) -- store a word processing (WP) field entry
"RTN","TMGRPC3E",23,0)
 ;
"RTN","TMGRPC3E",24,0)
 ;"=======================================================================
"RTN","TMGRPC3E",25,0)
 ;"=======================================================================
"RTN","TMGRPC3E",26,0)
 ;"Dependencies:
"RTN","TMGRPC3E",27,0)
 ;"  TMGRPC3* only
"RTN","TMGRPC3E",28,0)
 ;
"RTN","TMGRPC3E",29,0)
 ;"=======================================================================
"RTN","TMGRPC3E",30,0)
 ;"=======================================================================
"RTN","TMGRPC3E",31,0)
 ;
"RTN","TMGRPC3E",32,0)
GETEMPTY(TMGOUT,TMGPARAMS) ;"GET EMPTY ENTRY
"RTN","TMGRPC3E",33,0)
        ;"Purpose: to get stub entries for a file (typically a subfile)
"RTN","TMGRPC3E",34,0)
        ;"              "GET EMPTY ENTRY"  -- getting stub entries for subfiles typically
"RTN","TMGRPC3E",35,0)
        ;"                   TMGPARAMS: file entry (file or subfile number)
"RTN","TMGRPC3E",36,0)
        ;"Input: TMGOUT --an OUT ARRAY, filled as follows:
"RTN","TMGRPC3E",37,0)
        ;"          TMGOUT(0)="1^Success" or "-1^Message"
"RTN","TMGRPC3E",38,0)
        ;"          TMGOUT(1)=File^^FieldNum^^DDInfo...
"RTN","TMGRPC3E",39,0)
        ;"          TMGOUT(2)=File^^FieldNum^^DDInfo...
"RTN","TMGRPC3E",40,0)
        ;"          Etc ...
"RTN","TMGRPC3E",41,0)
        ;"       Params: filenumber (typically a subfilenumber)
"RTN","TMGRPC3E",42,0)
        ;"Result: None
"RTN","TMGRPC3E",43,0)
        SET TMGOUT(0)="1^Success"
"RTN","TMGRPC3E",44,0)
        NEW TMGCOUNT SET TMGCOUNT=1
"RTN","TMGRPC3E",45,0)
        NEW TMGFNUM SET TMGFNUM=+$GET(TMGPARAMS)
"RTN","TMGRPC3E",46,0)
        NEW TMGFLDNUM SET TMGFLDNUM=0
"RTN","TMGRPC3E",47,0)
        IF $DATA(^DD(TMGFNUM))=0 DO  GOTO GEPDN
"RTN","TMGRPC3E",48,0)
        . SET TMGOUT(0)="-1^Invalid file number.  Got: "_$GET(TMGPARAMS)
"RTN","TMGRPC3E",49,0)
        FOR  SET TMGFLDNUM=$ORDER(^DD(TMGFNUM,TMGFLDNUM)) QUIT:(+TMGFLDNUM'>0)  DO
"RTN","TMGRPC3E",50,0)
        . NEW TMGDDINFO SET TMGDDINFO=$PIECE($GET(^DD(TMGFNUM,TMGFLDNUM,0)),"^",1,4)
"RTN","TMGRPC3E",51,0)
        . NEW TMGFLDVAL SET TMGFLDVAL=$$GETEFLD(TMGFNUM,TMGFLDNUM)
"RTN","TMGRPC3E",52,0)
        . SET TMGOUT(TMGCOUNT)=TMGFNUM_"^^"_TMGFLDNUM_"^"_TMGFLDVAL_"^"_TMGDDINFO
"RTN","TMGRPC3E",53,0)
        . SET TMGCOUNT=TMGCOUNT+1
"RTN","TMGRPC3E",54,0)
        . IF $PIECE(TMGDDINFO,"^",2)["V" DO
"RTN","TMGRPC3E",55,0)
        . . SET TMGCOUNT=$$ADDVINFO^TMGRPC3B(.TMGOUT,TMGFNUM,TMGFLDNUM)
"RTN","TMGRPC3E",56,0)
GEPDN   QUIT
"RTN","TMGRPC3E",57,0)
 ;
"RTN","TMGRPC3E",58,0)
GETEFLD(FILENUM,FLDNUM) ;"GET EMPTY FIELD VALUE
"RTN","TMGRPC3E",59,0)
        NEW RESULT SET RESULT=""
"RTN","TMGRPC3E",60,0)
        IF FLDNUM=".01" SET RESULT="<NEW>" GOTO GEFDN
"RTN","TMGRPC3E",61,0)
        IF FILENUM="811.97" DO  ;"REMINDER DEFINITION:BASELINE AGE FINDINGS
"RTN","TMGRPC3E",62,0)
        . IF FLDNUM=".01" SET RESULT="1Y"
"RTN","TMGRPC3E",63,0)
        . IF (FLDNUM="5")!(FLDNUM="6") SET RESULT="0"
"RTN","TMGRPC3E",64,0)
        ;"Can add more special cases later        
"RTN","TMGRPC3E",65,0)
GEFDN   QUIT RESULT        
"RTN","TMGRPC3E",66,0)
 ;
"RTN","TMGRPC3E",67,0)
GETHELPM(TMGOUT,TMGPARAMS) ;
"RTN","TMGRPC3E",68,0)
        ;"Purpose: to retrieve the help message for a given field.
"RTN","TMGRPC3E",69,0)
        ;"Input: TMGOUT -- an OUT PARAMETER, PASS BY REFERENCE.
"RTN","TMGRPC3E",70,0)
        ;"       TMGPARAMS -- file^field^HelpType^IENS
"RTN","TMGRPC3E",71,0)
        ;"Output: TMGOUT is filled as follows:
"RTN","TMGRPC3E",72,0)
        ;"          TMGOUT(0)="1^Success" or "-1^Message"
"RTN","TMGRPC3E",73,0)
        ;"          TMGOUT(1...?)=Help Message
"RTN","TMGRPC3E",74,0)
        NEW TMGMSG
"RTN","TMGRPC3E",75,0)
        NEW TMGINDEX SET TMGINDEX=1
"RTN","TMGRPC3E",76,0)
        NEW TMGFILE SET TMGFILE=+$PIECE(TMGPARAMS,"^",1)
"RTN","TMGRPC3E",77,0)
        NEW TMGFIELD SET TMGFIELD=+$PIECE(TMGPARAMS,"^",2)
"RTN","TMGRPC3E",78,0)
        NEW TMGHELPTYPE SET TMGHELPTYPE=$PIECE(TMGPARAMS,"^",3)
"RTN","TMGRPC3E",79,0)
        NEW TMGIENS SET TMGIENS=$PIECE(TMGPARAMS,"^",4)
"RTN","TMGRPC3E",80,0)
        IF TMGFILE'>0 DO  GOTO GHMDONE
"RTN","TMGRPC3E",81,0)
        . SET TMGOUT(0)="-1^No file number supplied"
"RTN","TMGRPC3E",82,0)
        IF TMGFIELD'>0 DO  GOTO GHMDONE
"RTN","TMGRPC3E",83,0)
        . SET TMGOUT(0)="-1^No Field Number supplied"
"RTN","TMGRPC3E",84,0)
        DO HELP^DIE(TMGFILE,TMGIENS,TMGFIELD,TMGHELPTYPE,"TMGMSG")
"RTN","TMGRPC3E",85,0)
        NEW TMGI SET TMGI=""
"RTN","TMGRPC3E",86,0)
        FOR  SET TMGI=$ORDER(TMGMSG("DIHELP",TMGI)) QUIT:(TMGI="")  DO
"RTN","TMGRPC3E",87,0)
        . SET TMGOUT(TMGINDEX)=TMGMSG("DIHELP",TMGI)
"RTN","TMGRPC3E",88,0)
        . SET TMGINDEX=TMGINDEX+1
"RTN","TMGRPC3E",89,0)
        SET TMGOUT(0)="1^Success"
"RTN","TMGRPC3E",90,0)
GHMDONE QUIT
"RTN","TMGRPC3E",91,0)
 ;
"RTN","TMGRPC3E",92,0)
STUBNEWR(TMGFILE,TMGNEWVALUE,TMGOUT) ;"STUB NEW RECORD
"RTN","TMGRPC3E",93,0)
        ;"Purpose: to create a stub entry in the file (200), to be filled in elsewhere
"RTN","TMGRPC3E",94,0)
        ;"Input: TMGNEWVALUE -- a value for the .01 field
"RTN","TMGRPC3E",95,0)
        ;"       TMGOUT -- PASS BY REFERENCE, an OUT PARAMETER.
"RTN","TMGRPC3E",96,0)
        ;"Output: A NEW record will be added to file, IF no errors
"RTN","TMGRPC3E",97,0)
        ;"       TMGOUT(0): 1^Success^NewIEN   or -1^See Fileman message
"RTN","TMGRPC3E",98,0)
        ;"       TMGOUT(1) will contain Fileman error, IF any
"RTN","TMGRPC3E",99,0)
        ;"Results: none
"RTN","TMGRPC3E",100,0)
        ;"NOTICE: This function makes no promise that the creation of the
"RTN","TMGRPC3E",101,0)
        ;"      NEW record will succeed.  For example, IF there are required
"RTN","TMGRPC3E",102,0)
        ;"      fields, the creation will fail.  So users should check for success
"RTN","TMGRPC3E",103,0)
        ;"      result and error feedback.
"RTN","TMGRPC3E",104,0)
        ;"Results: none
"RTN","TMGRPC3E",105,0)
        NEW TMGFDA,TMGIEN,TMGMSG,DIC
"RTN","TMGRPC3E",106,0)
        SET DIC(0)=""  ;"I get a crash without this, for some reason...
"RTN","TMGRPC3E",107,0)
        SET TMGFDA(TMGFILE,"+1,",.01)=TMGNEWVALUE
"RTN","TMGRPC3E",108,0)
        DO UPDATE^DIE("S","TMGFDA","TMGIEN","TMGMSG")
"RTN","TMGRPC3E",109,0)
        ;
"RTN","TMGRPC3E",110,0)
        IF $DATA(TMGMSG("DIERR")) DO  GOTO SNPDONE
"RTN","TMGRPC3E",111,0)
        . SET TMGOUT(0)="-1^See Fileman message"
"RTN","TMGRPC3E",112,0)
        . SET TMGOUT(1)=$$GETERSTR^TMGRPC3G(.TMGMSG)
"RTN","TMGRPC3E",113,0)
        ;
"RTN","TMGRPC3E",114,0)
        SET TMGOUT(0)="1^Success^"_$GET(TMGIEN(1))
"RTN","TMGRPC3E",115,0)
SNPDONE QUIT
"RTN","TMGRPC3E",116,0)
 ;
"RTN","TMGRPC3E",117,0)
GETIFWP(TMGOUT,TMGPARAMS) ;"GET IF WP FIELD
"RTN","TMGRPC3E",118,0)
        ;"Purpose: to return IF filenumber is a WP subfile
"RTN","TMGRPC3E",119,0)
        ;"Input: TMGOUT -- an OUT PARAMETER, PASS BY REFERENCE.
"RTN","TMGRPC3E",120,0)
        ;"       TMGPARAMS -- file^field
"RTN","TMGRPC3E",121,0)
        ;"Output:
"RTN","TMGRPC3E",122,0)
        ;"       TMGOUT(0): "1^Success^YES/NO" or "-1^Message"
"RTN","TMGRPC3E",123,0)
        ;"            "YES" IF is a WP subfile, otherwise "NO"
"RTN","TMGRPC3E",124,0)
        ;"       TMGOUT(1) will contain Fileman error, IF any
"RTN","TMGRPC3E",125,0)
        ;"Results: none
"RTN","TMGRPC3E",126,0)
        NEW TMGRESULT
"RTN","TMGRPC3E",127,0)
        NEW TMGFILE SET TMGFILE=+$PIECE(TMGPARAMS,"^",1)
"RTN","TMGRPC3E",128,0)
        NEW TMGFIELD SET TMGFIELD=+$PIECE(TMGPARAMS,"^",2)
"RTN","TMGRPC3E",129,0)
        IF TMGFILE'>0 DO  GOTO GWPSDONE
"RTN","TMGRPC3E",130,0)
        . SET TMGOUT(0)="-1^No file number supplied"
"RTN","TMGRPC3E",131,0)
        IF TMGFIELD'>0 DO  GOTO GWPSDONE
"RTN","TMGRPC3E",132,0)
        . SET TMGOUT(0)="-1^No Field Number supplied"
"RTN","TMGRPC3E",133,0)
        ;
"RTN","TMGRPC3E",134,0)
        DO FIELD^DID(TMGFILE,TMGFIELD,"","TYPE","TMGARRAY","TMGMSG")
"RTN","TMGRPC3E",135,0)
        ;
"RTN","TMGRPC3E",136,0)
        IF $DATA(TMGMSG("DIERR")) DO  GOTO GWPSDONE
"RTN","TMGRPC3E",137,0)
        . SET TMGOUT(0)="-1^See Fileman message"
"RTN","TMGRPC3E",138,0)
        . SET TMGOUT(1)=$$GETERSTR^TMGRPC3G(.TMGMSG)
"RTN","TMGRPC3E",139,0)
        ;
"RTN","TMGRPC3E",140,0)
        IF $GET(TMGARRAY("TYPE"))="WORD-PROCESSING" DO
"RTN","TMGRPC3E",141,0)
        . SET TMGRESULT="YES"
"RTN","TMGRPC3E",142,0)
        ELSE  DO
"RTN","TMGRPC3E",143,0)
        . SET TMGRESULT="NO"
"RTN","TMGRPC3E",144,0)
        ;
"RTN","TMGRPC3E",145,0)
        SET TMGOUT(0)="1^Success^"_TMGRESULT
"RTN","TMGRPC3E",146,0)
GWPSDONE ;
"RTN","TMGRPC3E",147,0)
        QUIT
"RTN","TMGRPC3E",148,0)
 ;
"RTN","TMGRPC3E",149,0)
GETWPFLD(TMGOUT,TMGPARAMS) ;"GET WP FIELD
"RTN","TMGRPC3E",150,0)
        ;"Purpose: To retrieve on word processing (WP) field entry
"RTN","TMGRPC3E",151,0)
        ;"Input: TMGOUT -- an OUT PARAMETER, PASS BY REFERENCE.
"RTN","TMGRPC3E",152,0)
        ;"       TMGPARAMS -- FileNum^Field^IENS (e.g. 'GET ONE WP FIELD^200^73,')
"RTN","TMGRPC3E",153,0)
        ;"Output:
"RTN","TMGRPC3E",154,0)
        ;"       TMGOUT(0): "1^Success" or "-1^Message"
"RTN","TMGRPC3E",155,0)
        ;"       TMGOUT(1) will contain Fileman error, IF any
"RTN","TMGRPC3E",156,0)
        ;"       - or to return WP array -
"RTN","TMGRPC3E",157,0)
        ;"       TMGOUT(1)=1st line of text
"RTN","TMGRPC3E",158,0)
        ;"       TMGOUT(2)=2nd line of text
"RTN","TMGRPC3E",159,0)
        ;"       etc..
"RTN","TMGRPC3E",160,0)
        ;"Results: None
"RTN","TMGRPC3E",161,0)
        NEW TMGFILE SET TMGFILE=+$PIECE(TMGPARAMS,"^",1)
"RTN","TMGRPC3E",162,0)
        NEW TMGFIELD SET TMGFIELD=+$PIECE(TMGPARAMS,"^",2)
"RTN","TMGRPC3E",163,0)
        NEW TMGIENS SET TMGIENS=$PIECE(TMGPARAMS,"^",3)  ;//kt removed +$PIECE
"RTN","TMGRPC3E",164,0)
        IF TMGFILE'>0 DO  GOTO GWPDONE
"RTN","TMGRPC3E",165,0)
        . SET TMGOUT(0)="-1^No file number supplied"
"RTN","TMGRPC3E",166,0)
        IF TMGFIELD'>0 DO  GOTO GWPDONE
"RTN","TMGRPC3E",167,0)
        . SET TMGOUT(0)="-1^No Field Number supplied"
"RTN","TMGRPC3E",168,0)
        IF TMGIENS="" DO  GOTO GWPDONE
"RTN","TMGRPC3E",169,0)
        . SET TMGOUT(0)="-1^No IENS supplied"
"RTN","TMGRPC3E",170,0)
        ;
"RTN","TMGRPC3E",171,0)
        NEW TMGARRAY,TMGMSG,TMGTEMP
"RTN","TMGRPC3E",172,0)
        SET TMGTEMP=$$GET1^DIQ(TMGFILE,TMGIENS,TMGFIELD,"","TMGARRAY","TMGMSG")
"RTN","TMGRPC3E",173,0)
        IF $DATA(TMGMSG("DIERR")) DO  GOTO GWPDONE
"RTN","TMGRPC3E",174,0)
        . SET TMGOUT(0)="-1^See Fileman message"
"RTN","TMGRPC3E",175,0)
        . SET TMGOUT(1)=$$GETERSTR^TMGRPC3G(.TMGMSG)
"RTN","TMGRPC3E",176,0)
        . SET TMGOUT(2)="Actual call was:"
"RTN","TMGRPC3E",177,0)
        . SET TMGOUT(3)="$$GET1^DIQ("_TMGFILE_","_TMGIENS_","_TMGFIELD_","""",""TMGARRAY"",""TMGMSG"")"
"RTN","TMGRPC3E",178,0)
        ;
"RTN","TMGRPC3E",179,0)
        SET TMGOUT(0)="1^Success"
"RTN","TMGRPC3E",180,0)
        NEW TMGINDEX SET TMGINDEX=1
"RTN","TMGRPC3E",181,0)
        NEW TMGI SET TMGI=0
"RTN","TMGRPC3E",182,0)
        FOR  SET TMGI=$ORDER(TMGARRAY(TMGI)) QUIT:(TMGI="")  DO
"RTN","TMGRPC3E",183,0)
        . SET TMGOUT(TMGINDEX)=TMGARRAY(TMGI)
"RTN","TMGRPC3E",184,0)
        . SET TMGINDEX=TMGINDEX+1
"RTN","TMGRPC3E",185,0)
GWPDONE QUIT
"RTN","TMGRPC3E",186,0)
 ;
"RTN","TMGRPC3E",187,0)
PSTWPFLD(TMGOUT,TMGPARAMS,INPUT) ;"POST WP FIELD
"RTN","TMGRPC3E",188,0)
        ;"Purpose: To store a word processing (WP) field entry
"RTN","TMGRPC3E",189,0)
        ;"Input: TMGOUT -- an OUT PARAMETER, PASS BY REFERENCE.
"RTN","TMGRPC3E",190,0)
        ;"       TMGPARAMS -- FileNum^FieldNum^IENS (e.g. 'GET ONE WP FIELD^200^73,')
"RTN","TMGRPC3E",191,0)
        ;"       INPUT -- holds the WP itself to be stored:
"RTN","TMGRPC3E",192,0)
        ;"                   INPUT(0)=0TH line
"RTN","TMGRPC3E",193,0)
        ;"                   INPUT(1)=1st line
"RTN","TMGRPC3E",194,0)
        ;"                   INPUT(2)=2nd line
"RTN","TMGRPC3E",195,0)
        ;"                   ...
"RTN","TMGRPC3E",196,0)
        ;"Output:
"RTN","TMGRPC3E",197,0)
        ;"       TMGOUT(0): "1^Success" or "-1^Message"
"RTN","TMGRPC3E",198,0)
        ;"       TMGOUT(1) will contain Fileman error, IF any
"RTN","TMGRPC3E",199,0)
        ;"Results: None
"RTN","TMGRPC3E",200,0)
        NEW TMGFILE SET TMGFILE=+$PIECE(TMGPARAMS,"^",1)
"RTN","TMGRPC3E",201,0)
        NEW TMGFIELD SET TMGFIELD=+$PIECE(TMGPARAMS,"^",2)
"RTN","TMGRPC3E",202,0)
        NEW TMGIENS SET TMGIENS=$PIECE(TMGPARAMS,"^",3) ;//kt removed +$PIECE
"RTN","TMGRPC3E",203,0)
        IF TMGFILE'>0 DO  GOTO PWPDONE
"RTN","TMGRPC3E",204,0)
        . SET TMGOUT(0)="-1^No file number supplied"
"RTN","TMGRPC3E",205,0)
        IF TMGFIELD'>0 DO  GOTO PWPDONE
"RTN","TMGRPC3E",206,0)
        . SET TMGOUT(0)="-1^No Field Number supplied"
"RTN","TMGRPC3E",207,0)
        IF TMGIENS="" DO  GOTO PWPDONE
"RTN","TMGRPC3E",208,0)
        . SET TMGOUT(0)="-1^No IENS supplied"
"RTN","TMGRPC3E",209,0)
        IF $LENGTH(TMGIENS,",")=1 SET TMGIENS=TMGIENS_","
"RTN","TMGRPC3E",210,0)
        ;
"RTN","TMGRPC3E",211,0)
        DO WP^DIE(TMGFILE,TMGIENS,TMGFIELD,"K","INPUT","TMGMSG")
"RTN","TMGRPC3E",212,0)
        ;
"RTN","TMGRPC3E",213,0)
        IF $DATA(TMGMSG("DIERR")) DO  GOTO GWPDONE
"RTN","TMGRPC3E",214,0)
        . SET TMGOUT(0)="-1^See Fileman message"
"RTN","TMGRPC3E",215,0)
        . SET TMGOUT(1)=$$GETERSTR^TMGRPC3G(.TMGMSG)
"RTN","TMGRPC3E",216,0)
        ;
"RTN","TMGRPC3E",217,0)
        SET TMGOUT(0)="1^Success"
"RTN","TMGRPC3E",218,0)
PWPDONE QUIT
"RTN","TMGRPC3E",219,0)
 ;
"RTN","TMGRPC3E",220,0)
GETRCODE(TMGOUT,TMGPARAMS) ;"GET GODE ROUTINE
"RTN","TMGRPC3E",221,0)
        ;"Purpose: To retrieve mumps code in specified routine. 
"RTN","TMGRPC3E",222,0)
        ;"Input:  TMGOUT -- an OUT PARAMETER, PASS BY REFERENCE.
"RTN","TMGRPC3E",223,0)
        ;"        TMGPARAMS -- RoutineName (e.g. 'DIT3')
"RTN","TMGRPC3E",224,0)
        ;"Output: TMGOUT(0): "1^Success" or "-1^Message"
"RTN","TMGRPC3E",225,0)
        ;"        TMGOUT(1) -- 1st line of code
"RTN","TMGRPC3E",226,0)
        ;"        TMGOUT(2) -- 2nd line of code  etc. 
"RTN","TMGRPC3E",227,0)
        ;"       etc..
"RTN","TMGRPC3E",228,0)
        ;"Results: None
"RTN","TMGRPC3E",229,0)
        SET TMGOUT(0)="1^Success"
"RTN","TMGRPC3E",230,0)
        NEW ROUTINE SET ROUTINE=$$TRIM^XLFSTR(TMGPARAMS)
"RTN","TMGRPC3E",231,0)
        IF ROUTINE["^" SET ROUTINE=$PIECE(ROUTINE,"^",2)
"RTN","TMGRPC3E",232,0)
        IF ROUTINE="" DO  GOTO GRCDN
"RTN","TMGRPC3E",233,0)
        . SET TMGOUT(0)="-1^No routine name specified"
"RTN","TMGRPC3E",234,0)
        NEW STR,IDX SET IDX=0
"RTN","TMGRPC3E",235,0)
        FOR  DO  QUIT:(STR="")
"RTN","TMGRPC3E",236,0)
        . SET IDX=IDX+1
"RTN","TMGRPC3E",237,0)
        . NEW REF SET REF="+"_IDX_"^"_ROUTINE
"RTN","TMGRPC3E",238,0)
        . SET STR=$TEXT(@REF)
"RTN","TMGRPC3E",239,0)
        . NEW TRIMSTR SET TRIMSTR=$$TRIM^XLFSTR(STR)
"RTN","TMGRPC3E",240,0)
        . IF TRIMSTR'="" SET TMGOUT(IDX)=STR
"RTN","TMGRPC3E",241,0)
        IF $DATA(TMGOUT(1))=0 DO  GOTO GRCDN
"RTN","TMGRPC3E",242,0)
        . SET TMGOUT(0)="-1^No text found in routine '"_ROUTINE_"'"
"RTN","TMGRPC3E",243,0)
GRCDN  QUIT
"RTN","TMGRPC3E",244,0)
 
"RTN","TMGRPC3F")
0^6^B148728777
"RTN","TMGRPC3F",1,0)
TMGRPC3F ;TMG/kst/Support Functions for GUI_Config ;08/31/08, 2/2/14
"RTN","TMGRPC3F",2,0)
         ;;1.02;TMG-LIB;**1**;11/18/08;Build 9
"RTN","TMGRPC3F",3,0)
 ;
"RTN","TMGRPC3F",4,0)
 ;"TMG RPC FUNCTIONS for a GUI config program
"RTN","TMGRPC3F",5,0)
 ;
"RTN","TMGRPC3F",6,0)
 ;"Kevin Toppenberg MD
"RTN","TMGRPC3F",7,0)
 ;"GNU Lessor General Public License (LGPL) applies
"RTN","TMGRPC3F",8,0)
 ;"7/20/08
"RTN","TMGRPC3F",9,0)
 ;
"RTN","TMGRPC3F",10,0)
 ;"=======================================================================
"RTN","TMGRPC3F",11,0)
 ;" RPC -- Public Functions.
"RTN","TMGRPC3F",12,0)
 ;"=======================================================================
"RTN","TMGRPC3F",13,0)
 ;" <none>
"RTN","TMGRPC3F",14,0)
 ;"=======================================================================
"RTN","TMGRPC3F",15,0)
 ;"PRIVATE API FUNCTIONS
"RTN","TMGRPC3F",16,0)
 ;"=======================================================================
"RTN","TMGRPC3F",17,0)
 ;"REGPAT(TMGOUT,TMGPARAMS) -- register a NEW patient into VistA, providing not already been registered.
"RTN","TMGRPC3F",18,0)
 ;"SRCHPTEXACT(TMGARRAY) -- search for a preexisting patient, using an exact search
"RTN","TMGRPC3F",19,0)
 ;
"RTN","TMGRPC3F",20,0)
 ;"=======================================================================
"RTN","TMGRPC3F",21,0)
 ;"Dependencies:
"RTN","TMGRPC3F",22,0)
 ;"  TMGRPC3* only
"RTN","TMGRPC3F",23,0)
 ;
"RTN","TMGRPC3F",24,0)
 ;"=======================================================================
"RTN","TMGRPC3F",25,0)
 ;
"RTN","TMGRPC3F",26,0)
REGPAT(TMGOUT,TMGPARAMS) ;"REGISTER PATIENT
"RTN","TMGRPC3F",27,0)
        ;"Purpose: to register a NEW patient into VistA, providing that they have not
"RTN","TMGRPC3F",28,0)
        ;"         already been registered.
"RTN","TMGRPC3F",29,0)
        ;"Note: The search for preexisting records is exact, meaning that DOE,JOHN
"RTN","TMGRPC3F",30,0)
        ;"      would be considered different from DOE,JOHN H
"RTN","TMGRPC3F",31,0)
        ;"Input: TMGOUT -- an OUT PARAMETER, PASS BY REFERENCE.
"RTN","TMGRPC3F",32,0)
        ;"       TMGPARAMS -- FieldNum1^FieldValue1^FieldNum2^FieldValue2^FieldNum3^FieldValue3^...
"RTN","TMGRPC3F",33,0)
        ;"       NOTE: Because I want to be able to specify here the HealthRecordNumber (HRN),
"RTN","TMGRPC3F",34,0)
        ;"             even though it is not truly a field in the PATIENT file, I am going
"RTN","TMGRPC3F",35,0)
        ;"             to manually allow a field of '0' (HRN) to be specified as a FieldNumber
"RTN","TMGRPC3F",36,0)
        ;"Output: TMGOUT is filled as follows:
"RTN","TMGRPC3F",37,0)
        ;"          TMGOUT(0)="1^Success^NewIEN" or
"RTN","TMGRPC3F",38,0)
        ;"                    "0^BoolAndMessage^NewIEN".  Format:
"RTN","TMGRPC3F",39,0)
        ;"                       [Bool1;Bool2;Bool3;Bool4;Bool5*MessageText]  (e.g. '1;0;1;0;0*ErrorMsg')
"RTN","TMGRPC3F",40,0)
        ;"                         (for Bool fields, 0=no or 1=yes)
"RTN","TMGRPC3F",41,0)
        ;"                         Bool1 -- patient had previously been registered
"RTN","TMGRPC3F",42,0)
        ;"                         Bool2 -- patient registered during this Fn
"RTN","TMGRPC3F",43,0)
        ;"                         Bool3 -- problem filing data into non-identifier fields
"RTN","TMGRPC3F",44,0)
        ;"                         Bool4 -- problem filing data into sub-file fields
"RTN","TMGRPC3F",45,0)
        ;"                         Bool5 -- problem with filing HRN
"RTN","TMGRPC3F",46,0)
        ;"                    "-1^Message"    Frank failure...
"RTN","TMGRPC3F",47,0)
        ;"          TMGOUT(1)=Long Fileman message (if -1 error, or perhaps 0 code)
"RTN","TMGRPC3F",48,0)
 ;
"RTN","TMGRPC3F",49,0)
        NEW TMGRSLT,TMGRCOD1,TMGRCOD2,TMGRCOD3,TMGRCOD4,TMGRCOD5,TMGRMSG
"RTN","TMGRPC3F",50,0)
        SET TMGRSLT=1,(TMGCOD1,TMGCOD2,TMGCOD3,TMGCOD4,TMGCOD5)=0,TMGMSG=""
"RTN","TMGRPC3F",51,0)
        NEW TMGARRAY
"RTN","TMGRPC3F",52,0)
        NEW TMGFDA,TMGMSG
"RTN","TMGRPC3F",53,0)
        FOR  DO  QUIT:($LENGTH(TMGPARAMS,"^"))<2
"RTN","TMGRPC3F",54,0)
        . NEW TMGPAIR,TMGFIELD,TMGVALUE
"RTN","TMGRPC3F",55,0)
        . SET TMGPAIR=$PIECE(TMGPARAMS,"^",1,2)
"RTN","TMGRPC3F",56,0)
        . SET TMGFIELD=$PIECE(TMGPAIR,"^",1)
"RTN","TMGRPC3F",57,0)
        . SET TMGVALUE=$PIECE(TMGPAIR,"^",2)
"RTN","TMGRPC3F",58,0)
        . SET TMGPARAMS=$EXTRACT(TMGPARAMS,$LENGTH(TMGPAIR)+2,999)
"RTN","TMGRPC3F",59,0)
        . IF (TMGFIELD="")!(TMGVALUE="") QUIT
"RTN","TMGRPC3F",60,0)
        . SET TMGARRAY(TMGFIELD)=TMGVALUE
"RTN","TMGRPC3F",61,0)
 ;
"RTN","TMGRPC3F",62,0)
        ;"Prepair list of required identifiers (needed to create record)
"RTN","TMGRPC3F",63,0)
        NEW TMGRECID,TMGFLD
"RTN","TMGRPC3F",64,0)
        SET TMGFLD=0
"RTN","TMGRPC3F",65,0)
        FOR  SET TMGFLD=$O(^DD(2,TMGFLD)) Q:'TMGFLD  DO
"RTN","TMGRPC3F",66,0)
        . NEW NODE,REQUIRED,ID
"RTN","TMGRPC3F",67,0)
        . SET NODE=$GET(^(TMGFLD,0))
"RTN","TMGRPC3F",68,0)
        . IF NODE'="" DO
"RTN","TMGRPC3F",69,0)
        . . SET NAME=$P(NODE,"^")
"RTN","TMGRPC3F",70,0)
        . . SET REQUIRED=$P(NODE,"^",2)["R"
"RTN","TMGRPC3F",71,0)
        . . SET ID=$DATA(^DD(2,0,"ID",TMGFLD))
"RTN","TMGRPC3F",72,0)
        . . IF REQUIRED&ID SET TMGRECID(TMGFLD)=1
"RTN","TMGRPC3F",73,0)
 ;
"RTN","TMGRPC3F",74,0)
        NEW TMGIEN SET TMGIEN=$$SRCHPTEXACT(.TMGARRAY)
"RTN","TMGRPC3F",75,0)
        IF +TMGIEN>0 DO  GOTO RP2  ;"Continue to possibly update data in other fields
"RTN","TMGRPC3F",76,0)
        . SET TMGRSL=0,TMGCOD1=1
"RTN","TMGRPC3F",77,0)
        . ;"SET TMGOUT(0)="-1^Patient already registered^"_TMGIEN
"RTN","TMGRPC3F",78,0)
 ;
"RTN","TMGRPC3F",79,0)
        ;"Load TMGFDA with elements of basic record first, then add other
"RTN","TMGRPC3F",80,0)
        ;"fields on subsequent post (I think I have had problems trying to
"RTN","TMGRPC3F",81,0)
        ;"load some fields when the record has not already been created.)
"RTN","TMGRPC3F",82,0)
        KILL TMGIEN
"RTN","TMGRPC3F",83,0)
        SET TMGFDA(2,"+1,",.01)=TMGARRAY(.01)
"RTN","TMGRPC3F",84,0)
        KILL TMGARRAY(.01)
"RTN","TMGRPC3F",85,0)
        SET TMGFLD=""
"RTN","TMGRPC3F",86,0)
        FOR  SET TMGFLD=$ORDER(TMGRECID(TMGFLD)) Q:TMGFLD=""  DO
"RTN","TMGRPC3F",87,0)
        . IF $DATA(TMGARRAY(TMGFLD))=0 QUIT  ;"Required identifier is missing, expect Filman error below
"RTN","TMGRPC3F",88,0)
        . NEW TMGVALUE SET TMGVALUE=$GET(TMGARRAY(TMGFLD))
"RTN","TMGRPC3F",89,0)
        . KILL TMGARRAY(TMGFLD)
"RTN","TMGRPC3F",90,0)
        . IF TMGVALUE="" QUIT
"RTN","TMGRPC3F",91,0)
        . SET TMGFDA(2,"+1,",TMGFLD)=TMGVALUE
"RTN","TMGRPC3F",92,0)
        ;"Create NEW record
"RTN","TMGRPC3F",93,0)
        DO UPDATE^DIE("SE","TMGFDA","TMGIEN","TMGMSG")
"RTN","TMGRPC3F",94,0)
        IF $DATA(TMGMSG("DIERR")) DO  GOTO RPTDONE
"RTN","TMGRPC3F",95,0)
        . SET TMGOUT(0)="-1^See Fileman message"
"RTN","TMGRPC3F",96,0)
        . SET TMGOUT(1)=$$GETERSTR^TMGRPC3G(.TMGMSG)
"RTN","TMGRPC3F",97,0)
        . DO ADDFDA^TMGRPC3G(.TMGFDA,.TMGOUT,2)
"RTN","TMGRPC3F",98,0)
        SET TMGCOD2=1  ;"patient registered OK
"RTN","TMGRPC3F",99,0)
        ;"Get IEN of NEW record
"RTN","TMGRPC3F",100,0)
        SET TMGIEN=$GET(TMGIEN(1))
"RTN","TMGRPC3F",101,0)
        IF TMGIEN'>0 DO  GOTO RPTDONE
"RTN","TMGRPC3F",102,0)
        . SET TMGRSLT=0
"RTN","TMGRPC3F",103,0)
        . SET TMGOUT(0)=TMGRSLT_"^"_TMGCOD1_";"_TMGCOD2_";"_TMGCOD3_";"_TMGCOD4_";"_TMGCOD5_"*Unable to find IEN of added record"
"RTN","TMGRPC3F",104,0)
 ;
"RTN","TMGRPC3F",105,0)
RP2     ;"Now add the other fields not put in on first pass.
"RTN","TMGRPC3F",106,0)
        NEW TMGFIELD SET TMGFIELD=""
"RTN","TMGRPC3F",107,0)
        KILL TMGFDA,TMGMSG,TMGMVA
"RTN","TMGRPC3F",108,0)
        FOR  SET TMGFIELD=$ORDER(TMGARRAY(TMGFIELD)) QUIT:(TMGFIELD="")  DO
"RTN","TMGRPC3F",109,0)
        . IF TMGFIELD="0" QUIT   ;" pseudoField '0' from client will hold HRN
"RTN","TMGRPC3F",110,0)
        . NEW TMGA
"RTN","TMGRPC3F",111,0)
        . DO FIELD^DID(2,TMGFIELD,,"MULTIPLE-VALUED","TMGA","TMGMSG")
"RTN","TMGRPC3F",112,0)
        . IF TMGA("MULTIPLE-VALUED")=1 SET TMGMVA(TMGFIELD)=1 QUIT  ;"Process separately later
"RTN","TMGRPC3F",113,0)
        . NEW TMGVALUE SET TMGVALUE=$GET(TMGARRAY(TMGFIELD))
"RTN","TMGRPC3F",114,0)
        . IF TMGVALUE="" QUIT
"RTN","TMGRPC3F",115,0)
        . SET TMGFDA(2,TMGIEN_",",TMGFIELD)=TMGVALUE
"RTN","TMGRPC3F",116,0)
 ;
"RTN","TMGRPC3F",117,0)
        ;"File additional info in additional fields (Not multi-valued fields)
"RTN","TMGRPC3F",118,0)
        IF $DATA(TMGFDA) DO
"RTN","TMGRPC3F",119,0)
        . DO FILE^DIE("SE","TMGFDA","TMGMSG")
"RTN","TMGRPC3F",120,0)
        IF $DATA(TMGMSG("DIERR")) DO  ;"GOTO RPTDONE  --Keep going, try to file more...
"RTN","TMGRPC3F",121,0)
        . SET TMGRSLT=0,TMGCOD3=1 ;"Error adding fields
"RTN","TMGRPC3F",122,0)
        . SET TMGOUT(0)=TMGRSLT_"^"_TMGCOD1_";"_TMGCOD2_";"_TMGCOD3_";"_TMGCOD4_";"_TMGCOD5_"*See Fileman message^"_TMGIEN
"RTN","TMGRPC3F",123,0)
        . IF $GET(TMGOUT(1))'="" SET TMGOUT(1)=TMGOUT(1)_"// "
"RTN","TMGRPC3F",124,0)
        . SET TMGOUT(1)=$GET(TMGOUT(1))_$$GETERSTR^TMGRPC3G(.TMGMSG)
"RTN","TMGRPC3F",125,0)
        . DO ADDFDA^TMGRPC3G(.TMGFDA,.TMGOUT,2)
"RTN","TMGRPC3F",126,0)
 ;
"RTN","TMGRPC3F",127,0)
        ;"Now add multi-valued fields into subfiles.
"RTN","TMGRPC3F",128,0)
        ;"It is assumed that the value supplied will go into the .01 field in the subfile.
"RTN","TMGRPC3F",129,0)
        SET TMGFIELD=""
"RTN","TMGRPC3F",130,0)
        KILL TMGFDA,TMGMSG
"RTN","TMGRPC3F",131,0)
        NEW TMGABORT SET TMGABORT=0
"RTN","TMGRPC3F",132,0)
        FOR  SET TMGFIELD=$ORDER(TMGMVA(TMGFIELD)) QUIT:(TMGFIELD="")!TMGABORT  DO
"RTN","TMGRPC3F",133,0)
        . NEW TMGTEMP,TMGFN SET TMGFN=+$PIECE($GET(^DD(2,TMGFIELD,0)),"^",2)
"RTN","TMGRPC3F",134,0)
        . IF TMGFN'>0 QUIT
"RTN","TMGRPC3F",135,0)
        . NEW TMGVALUE SET TMGVALUE=$GET(TMGARRAY(TMGFIELD))
"RTN","TMGRPC3F",136,0)
        . IF TMGVALUE="" QUIT
"RTN","TMGRPC3F",137,0)
        . SET TMGFDA(TMGFN,"?+1,"_TMGIEN_",",.01)=TMGVALUE
"RTN","TMGRPC3F",138,0)
        . DO UPDATE^DIE("E","TMGFDA","TMGTEMP","TMGMSG")
"RTN","TMGRPC3F",139,0)
        . IF $DATA(TMGMSG("DIERR")) DO
"RTN","TMGRPC3F",140,0)
        . . SET TMGRSLT=0,TMGCOD4=1 ;"Problem adding to subfiles
"RTN","TMGRPC3F",141,0)
        . . SET TMGOUT(0)=TMGRSLT_"^"_TMGCOD1_";"_TMGCOD2_";"_TMGCOD3_";"_TMGCOD4_";"_TMGCOD5_"*See Fileman message^"_TMGIEN
"RTN","TMGRPC3F",142,0)
        . . IF $GET(TMGOUT(1))'="" SET TMGOUT(1)=TMGOUT(1)_"// "
"RTN","TMGRPC3F",143,0)
        . . SET TMGOUT(1)=$GET(TMGOUT(1))_$$GETERSTR^TMGRPC3G(.TMGMSG)
"RTN","TMGRPC3F",144,0)
        . . DO ADDFDA^TMGRPC3G(.TMGFDA,.TMGOUT,2)
"RTN","TMGRPC3F",145,0)
        . . ;"SET TMGABORT=1  --keep going...
"RTN","TMGRPC3F",146,0)
        IF TMGABORT GOTO RPTDONE
"RTN","TMGRPC3F",147,0)
 ;
"RTN","TMGRPC3F",148,0)
        IF $GET(TMGOUT(0))="" SET TMGOUT(0)="1^Success^"_TMGIEN
"RTN","TMGRPC3F",149,0)
 ;
"RTN","TMGRPC3F",150,0)
        NEW TMGHRN SET TMGHRN=$GET(TMGARRAY("0"))=""   ;" pseudoField '0' from client will hold HRN
"RTN","TMGRPC3F",151,0)
        IF TMGHRN="" GOTO RPTDONE
"RTN","TMGRPC3F",152,0)
        ;"Set TMGHRN field in file 9000001 (^AUPNPAT), linked to Patient entry
"RTN","TMGRPC3F",153,0)
 ;
"RTN","TMGRPC3F",154,0)
        NEW TMGLOCIEN,TMGINSTIEN
"RTN","TMGRPC3F",155,0)
        ;"Get DEFAULT INSTITUTION from KERNEL SYSTEM PARAMETERS.
"RTN","TMGRPC3F",156,0)
        SET TMGINSTIEN=$PIECE($GET(^XTV(8989.3,1,"XUS")),"^",17) ;" XUS;17 = DEFAULT INSTITUTION
"RTN","TMGRPC3F",157,0)
        IF +TMGINSTIEN'>0 DO  GOTO RPTDONE
"RTN","TMGRPC3F",158,0)
        . ;"SET TMGOUT(0)="1^Success (but see message)^"_TMGIEN
"RTN","TMGRPC3F",159,0)
        . SET TMGOUT(0)="0^"_TMGCOD1_";"_TMGCOD2_";"_TMGCOD3_";"_TMGCOD4_";"_TMGCOD5_"*See message^"_TMGIEN
"RTN","TMGRPC3F",160,0)
        . SET TMGOUT(1)="Unable to add HRN because couldn't find value for DEFAULT INSTITUTION in KERNEL SYSTEM PARAMETERS file."
"RTN","TMGRPC3F",161,0)
 ;
"RTN","TMGRPC3F",162,0)
        ;"Get LOCATION file entry pointing to this INSTITUTION
"RTN","TMGRPC3F",163,0)
        SET TMGLOCIEN=$ORDER(^AUTTLOC("B",TMGINSTIEN,""))
"RTN","TMGRPC3F",164,0)
        IF +TMGLOCIEN'>0 DO  GOTO RPTDONE
"RTN","TMGRPC3F",165,0)
        . SET TMGOUT(0)="0^"_TMGCOD1_";"_TMGCOD2_";"_TMGCOD3_";"_TMGCOD4_";"_TMGCOD5_"*See message^"_TMGIEN
"RTN","TMGRPC3F",166,0)
        . ;"SET TMGOUT(0)="1^Success (but see message)^"_TMGIEN
"RTN","TMGRPC3F",167,0)
        . SET TMGOUT(1)="Unable to add HRN because couldn't find `"_TMGINSTIEN_" in LOCATION file"
"RTN","TMGRPC3F",168,0)
 ;
"RTN","TMGRPC3F",169,0)
        NEW TMGHRNIEN SET TMGHRNIEN=+$ORDER(^AUNPNPAT("B",TMGIEN,""))
"RTN","TMGRPC3F",170,0)
        IF TMGHRNIEN'>0 DO  GOTO RPTDONE
"RTN","TMGRPC3F",171,0)
        . SET TMGOUT(0)="0^"_TMGCOD1_";"_TMGCOD2_";"_TMGCOD3_";"_TMGCOD4_";"_TMGCOD5_"*See message^"_TMGIEN
"RTN","TMGRPC3F",172,0)
        . ;"SET TMGOUT(0)="1^Success (but see message)^"_TMGIEN
"RTN","TMGRPC3F",173,0)
        . SET TMGOUT(1)="Unable to add HRN because couldn't find record in PATIENT/IHS file"
"RTN","TMGRPC3F",174,0)
 ;
"RTN","TMGRPC3F",175,0)
        KILL TMGFDA,TMGMSG
"RTN","TMGRPC3F",176,0)
        ;"Now see IF there already is an entry for TMGLOCIEN  (DINUM in play, so subFile record#=TMGLOCIEN)
"RTN","TMGRPC3F",177,0)
        IF $GET(^AUPNPAT(TMGHRNIEN,41,TMGLOCIEN,0))="" DO
"RTN","TMGRPC3F",178,0)
        . ;"Put HRN into value for current subfile entry
"RTN","TMGRPC3F",179,0)
        . SET TMGFDA(9000001.41,TMGLOCIEN_","_TMGHRNIEN_",",.02)=TMGHRN
"RTN","TMGRPC3F",180,0)
        . DO FILE^DIE("S","TMGFDA","TMGMSG")
"RTN","TMGRPC3F",181,0)
        . IF $DATA(TMGMSG("DIERR")) DO
"RTN","TMGRPC3F",182,0)
        . . SET TMGOUT(0)="0^"_TMGCOD1_";"_TMGCOD2_";"_TMGCOD3_";"_TMGCOD4_";"_TMGCOD5_"*See message^"_TMGIEN
"RTN","TMGRPC3F",183,0)
        . . ;"SET TMGOUT(0)="1^Success (but see message)^"_TMGIEN
"RTN","TMGRPC3F",184,0)
        . . IF $GET(TMGOUT(1))'="" SET TMGOUT(1)=TMGOUT(1)_"// "
"RTN","TMGRPC3F",185,0)
        . . SET TMGOUT(1)=$GET(TMGOUT(1))_$$GETERSTR^TMGRPC3G(.TMGMSG)
"RTN","TMGRPC3F",186,0)
        . . DO ADDFDA^TMGRPC3G(.TMGFDA,.TMGOUT,2)
"RTN","TMGRPC3F",187,0)
        ELSE  DO
"RTN","TMGRPC3F",188,0)
        . ;"Add NEW subfile entry for HRN
"RTN","TMGRPC3F",189,0)
        . NEW TMGSIEN
"RTN","TMGRPC3F",190,0)
        . SET TMGFDA(9000001.41,TMGLOCIEN_","_TMGHRNIEN_",",.01)=TMGLOCIEN
"RTN","TMGRPC3F",191,0)
        . SET TMGFDA(9000001.41,TMGLOCIEN_","_TMGHRNIEN_",",.02)=TMGHRN
"RTN","TMGRPC3F",192,0)
        . DO UPDATE^DIE("S","TMGFDA","TMGSIEN","TMGMSG")
"RTN","TMGRPC3F",193,0)
        . IF $DATA(TMGMSG("DIERR")) DO
"RTN","TMGRPC3F",194,0)
        . . SET TMGOUT(0)="0^"_TMGCOD1_";"_TMGCOD2_";"_TMGCOD3_";"_TMGCOD4_";"_TMGCOD5_"*See message^"_TMGIEN
"RTN","TMGRPC3F",195,0)
        . . ;"SET TMGOUT(0)="1^Success (but see message)^"_TMGIEN
"RTN","TMGRPC3F",196,0)
        . . IF $GET(TMGOUT(1))'="" SET TMGOUT(1)=TMGOUT(1)_"// "
"RTN","TMGRPC3F",197,0)
        . . SET TMGOUT(1)=$GET(TMGOUT(1))_$$GETERSTR^TMGRPC3G(.TMGMSG)
"RTN","TMGRPC3F",198,0)
        . . DO ADDFDA^TMGRPC3G(.TMGFDA,.TMGOUT,2)
"RTN","TMGRPC3F",199,0)
 ;
"RTN","TMGRPC3F",200,0)
RPTDONE ;
"RTN","TMGRPC3F",201,0)
        QUIT
"RTN","TMGRPC3F",202,0)
 ;
"RTN","TMGRPC3F",203,0)
SRCHPTEXACT(TMGARRAY) ;
"RTN","TMGRPC3F",204,0)
        ;"Purpose: to search for a preexisting patient, using an exact search
"RTN","TMGRPC3F",205,0)
        ;"      By exact search, I mean that DOE,JOHN would be considered different
"RTN","TMGRPC3F",206,0)
        ;"      from DOE,JOHN H because it is a different ascii string.  Etc.
"RTN","TMGRPC3F",207,0)
        ;"      However, see search description below.
"RTN","TMGRPC3F",208,0)
        ;"Input: TMGARRAY -- PASS BY REFERENCE. Search info.  Format:
"RTN","TMGRPC3F",209,0)
        ;"              TMGARRAY(.01)=PatientName, e.g. DOE,JOHN
"RTN","TMGRPC3F",210,0)
        ;"              TMGARRAY(.02)=Sex          e.g. M
"RTN","TMGRPC3F",211,0)
        ;"              TMGARRAY(.03)=DOB          e.g. 01-04-69 (an external date format)
"RTN","TMGRPC3F",212,0)
        ;"              TMGARRAY(.09)=SSNum        e.g. 123-45-6789
"RTN","TMGRPC3F",213,0)
        ;"Result: returns DFN (patient IEN), or 0^Message IF not found.
"RTN","TMGRPC3F",214,0)
        ;"Notes:
"RTN","TMGRPC3F",215,0)
        ;"    The following are sufficient for search:
"RTN","TMGRPC3F",216,0)
        ;"    -- SSNum only
"RTN","TMGRPC3F",217,0)
        ;"    -- or Name-Sex-DOB
"RTN","TMGRPC3F",218,0)
        ;"
"RTN","TMGRPC3F",219,0)
        ;"    Search technique:
"RTN","TMGRPC3F",220,0)
        ;"    1. Search for SSN, IF found then no further comparison made.
"RTN","TMGRPC3F",221,0)
        ;"    2. Search for exact name match, no none found, then exit with 0
"RTN","TMGRPC3F",222,0)
        ;"    3. ...
"RTN","TMGRPC3F",223,0)
 ;
"RTN","TMGRPC3F",224,0)
        NEW TMGRESULT SET TMGRESULT=0
"RTN","TMGRPC3F",225,0)
 ;
"RTN","TMGRPC3F",226,0)
        ;"Search by SSN.  Quit IF match found
"RTN","TMGRPC3F",227,0)
        NEW TMGSSN SET TMGSSN=$TRANSLATE($GET(TMGARRAY(.09)),"-","")
"RTN","TMGRPC3F",228,0)
        IF TMGSSN'="" SET TMGRESULT=+$ORDER(^DPT("SSN",TMGSSN,""))
"RTN","TMGRPC3F",229,0)
        IF TMGRESULT>0 GOTO PSEDONE
"RTN","TMGRPC3F",230,0)
 ;
"RTN","TMGRPC3F",231,0)
        NEW TMGNAME,TMGSEX,TMGDOB
"RTN","TMGRPC3F",232,0)
        SET TMGNAME=$GET(TMGARRAY(.01))
"RTN","TMGRPC3F",233,0)
        IF TMGNAME="" DO  GOTO PSEDONE
"RTN","TMGRPC3F",234,0)
        . SET TMGRESULT="0^No Name (.01 field) provided"
"RTN","TMGRPC3F",235,0)
 ;
"RTN","TMGRPC3F",236,0)
        SET TMGSEX=$GET(TMGARRAY(.02))
"RTN","TMGRPC3F",237,0)
        IF TMGSEX="" DO  GOTO PSEDONE
"RTN","TMGRPC3F",238,0)
        . SET TMGRESULT="0^Sex (.02 field) not specified"
"RTN","TMGRPC3F",239,0)
        IF (TMGSEX'="M")&(TMGSEX'="F") DO  GOTO PSEDONE
"RTN","TMGRPC3F",240,0)
        . SET TMGRESULT="0^Sex should be 'Y' or 'N'.  Value provided="_TMGSEX
"RTN","TMGRPC3F",241,0)
 ;
"RTN","TMGRPC3F",242,0)
        SET TMGDOB=$GET(TMGARRAY(.03))
"RTN","TMGRPC3F",243,0)
        IF TMGDOB="" DO  GOTO PSEDONE
"RTN","TMGRPC3F",244,0)
        . SET TMGRESULT="0^No DOB (.03 field) provided"
"RTN","TMGRPC3F",245,0)
        NEW %DT,X,Y SET %DT="P"  ;"P-Post dates assumed
"RTN","TMGRPC3F",246,0)
        SET X=TMGDOB DO ^%DT SET TMGDOB=Y  ;"convert external date into internal format
"RTN","TMGRPC3F",247,0)
        IF +TMGDOB'>0 DO  GOTO PSEDONE
"RTN","TMGRPC3F",248,0)
        . SET TMGRESULT="0^Invalid date: "_$GET(TMGARRAY(.03))
"RTN","TMGRPC3F",249,0)
 ;
"RTN","TMGRPC3F",250,0)
        NEW TMGMATCHES MERGE TMGMATCHES=^DPT("B",TMGNAME)
"RTN","TMGRPC3F",251,0)
        IF $DATA(TMGMATCHES)=0 DO  GOTO PSEDONE
"RTN","TMGRPC3F",252,0)
        . SET TMGRESULT="0^No match for name"
"RTN","TMGRPC3F",253,0)
 ;
"RTN","TMGRPC3F",254,0)
        ;"Now compare each name match for also matching sex and DOB
"RTN","TMGRPC3F",255,0)
        NEW TMGIEN SET TMGIEN=""
"RTN","TMGRPC3F",256,0)
        FOR  SET TMGIEN=$ORDER(TMGMATCHES(TMGIEN)) QUIT:(+TMGIEN'>0)  DO
"RTN","TMGRPC3F",257,0)
        . NEW TMGNODE0 SET TMGNODE0=$GET(^DPT(TMGIEN,0))
"RTN","TMGRPC3F",258,0)
        . IF $PIECE(TMGNODE0,"^",2)'=TMGSEX DO  QUIT
"RTN","TMGRPC3F",259,0)
        . . KILL TMGMATCHES(TMGIEN)
"RTN","TMGRPC3F",260,0)
        . IF $PIECE(TMGNODE0,"^",3)'=TMGDOB DO  QUIT
"RTN","TMGRPC3F",261,0)
        . . KILL TMGMATCHES(TMGIEN)
"RTN","TMGRPC3F",262,0)
 ;
"RTN","TMGRPC3F",263,0)
        ;"TMGMATCHES should contain all entries matching name+sex+DOB
"RTN","TMGRPC3F",264,0)
        SET TMGRESULT=+$ORDER(TMGMATCHES(""))
"RTN","TMGRPC3F",265,0)
        ;"Now check for more than one match
"RTN","TMGRPC3F",266,0)
        IF $ORDER(TMGMATCHES(TMGRESULT))'="" DO  GOTO PSEDONE
"RTN","TMGRPC3F",267,0)
        . SET TMGRESULT="0^More than one match found for Name+Sex+DOB"
"RTN","TMGRPC3F",268,0)
 ;
"RTN","TMGRPC3F",269,0)
PSEDONE ;
"RTN","TMGRPC3F",270,0)
        QUIT TMGRESULT
"RTN","TMGRPC3F",271,0)
 ;
"RTN","TMGRPC3F",272,0)
 ;
"RTN","TMGRPC3G")
0^7^B926921876
"RTN","TMGRPC3G",1,0)
TMGRPC3G ;TMG/kst/Support Functions for GUI_Config ;08/31/08, 2/10/13, 2/2/14
"RTN","TMGRPC3G",2,0)
         ;;1.0;TMG-LIB;**1**;08/31/08;Build 9
"RTN","TMGRPC3G",3,0)
 ;
"RTN","TMGRPC3G",4,0)
 ;"TMG RPC FUNCTIONS for a GUI config program
"RTN","TMGRPC3G",5,0)
 ;
"RTN","TMGRPC3G",6,0)
 ;"Kevin Toppenberg MD
"RTN","TMGRPC3G",7,0)
 ;"GNU Lessor General Public License (LGPL) applies
"RTN","TMGRPC3G",8,0)
 ;"7/20/08
"RTN","TMGRPC3G",9,0)
 ;
"RTN","TMGRPC3G",10,0)
 ;"=======================================================================
"RTN","TMGRPC3G",11,0)
 ;" RPC -- Public Functions.
"RTN","TMGRPC3G",12,0)
 ;"=======================================================================
"RTN","TMGRPC3G",13,0)
 ;" <none>
"RTN","TMGRPC3G",14,0)
 ;"=======================================================================
"RTN","TMGRPC3G",15,0)
 ;"PRIVATE API FUNCTIONS
"RTN","TMGRPC3G",16,0)
 ;"=======================================================================
"RTN","TMGRPC3G",17,0)
 ;"GETERSTR(TMGEARRAY) -- convert a standard DIERR array into a string for output
"RTN","TMGRPC3G",18,0)
 ;"ADDFDA(TMGFDA,TMGOUT,INDX) -- output the TMGFDA into the TMGOUT variable
"RTN","TMGRPC3G",19,0)
 ;"GETDLGIF(TMGOUT,TMGPARAMS) -- Get reminder dialog information
"RTN","TMGRPC3G",20,0)
 ;"GETSRC(TMGOUT) -- Get linked Reminder definition for reminder dialogs.
"RTN","TMGRPC3G",21,0)
 ;"MOVDLGEL(TMGOUT,TMGPARAMS) -- Move Reminder Dialog Element
"RTN","TMGRPC3G",22,0)
 ;"RPTPXRM(TMGRESULT,TMGIEN) -- HANDLE RPC CHANNEL REQUEST FOR TAXONOMY INQUIRE
"RTN","TMGRPC3G",23,0)
 ;"GDLGROOT(TMGRESULT,TMGIEN) -- Return list of root items of any reminder dialog tree that items is part of
"RTN","TMGRPC3G",24,0)
 ;"EXPFNAME(TMGRESULT,TMGFNUM) -- Handle Channel command: GET EXPANDED FILENAME
"RTN","TMGRPC3G",25,0)
 ;"TESTREM(TMGRESULT,PARAMS) -- HANDLE RPC CHANNEL REQUEST FOR: GET REMINDER TEST
"RTN","TMGRPC3G",26,0)
 ;"FIND1(TMGRESULT,TMGPARAMS) --HANDLE RPC CHANNEL REQUEST FOR: FIND ONE RECORD
"RTN","TMGRPC3G",27,0)
 ;"DOCPYRMD(TMGRESULT,TMGPARAMS) --HANDLE RPC CHANNEL REQUEST FOR: COPY REMINDER DIALOG
"RTN","TMGRPC3G",28,0)
 ;"GETCHLST(TMGRESULT,TMGPARAMS) --HANDLE RPC CHANNEL REQUEST FOR: GET REMINDER DIALOG CHILDREN
"RTN","TMGRPC3G",29,0)
 ;"GETFFNSG(TMGRESULT,NAME) -- HANDLE RPC CHANNEL REQUEST FOR: GET FUNC FINDING ARG SIGNATURE
"RTN","TMGRPC3G",30,0)
 ;
"RTN","TMGRPC3G",31,0)
 ;"=======================================================================
"RTN","TMGRPC3G",32,0)
 ;"Utility functions
"RTN","TMGRPC3G",33,0)
 ;"=======================================================================
"RTN","TMGRPC3G",34,0)
 ;"RPT1PXRM(TMGREF,TMGIEN) -- GET INQUIRE REPORT FOR REMINDER TAXONOMY 
"RTN","TMGRPC3G",35,0)
 ;"LOADPRNT(TMGIEN,TMGARR) --Gather list of parents in 801.41.  
"RTN","TMGRPC3G",36,0)
 ;"IFRMDLGO(TMGIEN,TMGPARENTIEN) -- IF REMINDER DIALOG element item is compatable with parent
"RTN","TMGRPC3G",37,0)
 ;"IFREMFLG(TMGIEN,TMGFLAGS) --screen entries from 811.9 (REMINDER DEFINITION) for matching flags.
"RTN","TMGRPC3G",38,0)
 ;"EXPFNAM2(FILENUM) -- Convert file number info expanded name, PARENTNAME:SUBNAME:...
"RTN","TMGRPC3G",39,0)
 ;"TEST1REM(TMGREF,TMGIEN,TMGPAT,TMGDT,TMGALLTERMS) -- GET REMINDER TEST
"RTN","TMGRPC3G",40,0)
 ;"FIND1(TMGRESULT,TMGPARAMS) --WRAPPER FOR $$FIND1^DIC
"RTN","TMGRPC3G",41,0)
 ;"CPYRMDLG(SOURCEIEN,NAMESPACE,ACCEPT) -- Copy a reminder dialog tree (including all descendents)
"RTN","TMGRPC3G",42,0)
 ;"CHILDLST(IEN,ARRAY)  --Compile list of child (and grandchildren etc) elements
"RTN","TMGRPC3G",43,0)
 ;
"RTN","TMGRPC3G",44,0)
 ;"=======================================================================
"RTN","TMGRPC3G",45,0)
 ;"Private functions
"RTN","TMGRPC3G",46,0)
 ;"=======================================================================
"RTN","TMGRPC3G",47,0)
 ;"SHDACEPT(IEN,ACCEPT) -- See CPYRMDLG for discussion of ACCEPT array
"RTN","TMGRPC3G",48,0)
 ;"TRNMRGEX(DIFLG,DIFFNO,DITFNO,DIFIEN,DITIEN,DIERRROOT) -- wrapper for Fileman functionality. 
"RTN","TMGRPC3G",49,0)
 ; 
"RTN","TMGRPC3G",50,0)
 ;"=======================================================================
"RTN","TMGRPC3G",51,0)
 ;"=======================================================================
"RTN","TMGRPC3G",52,0)
 ;"Dependencies:
"RTN","TMGRPC3G",53,0)
 ;"  DILF,%ZISH,PXRMRPCA, DIC, XLFDT, DIT3 
"RTN","TMGRPC3G",54,0)
 ;"  Designed to be called FROM TMGRPC3* only
"RTN","TMGRPC3G",55,0)
 ;"     (Other calls might work, but not specifically tested)
"RTN","TMGRPC3G",56,0)
 ;"  TMGZWR
"RTN","TMGRPC3G",57,0)
 ;
"RTN","TMGRPC3G",58,0)
 ;"=======================================================================
"RTN","TMGRPC3G",59,0)
 ;"=======================================================================
"RTN","TMGRPC3G",60,0)
 ;
"RTN","TMGRPC3G",61,0)
GETERSTR(TMGEARRAY) ;
"RTN","TMGRPC3G",62,0)
        ;"Purpose: convert a standard DIERR array into a string for output
"RTN","TMGRPC3G",63,0)
        ;"Input: TMGEARRAY -- PASS BY REFERENCE.  example:
"RTN","TMGRPC3G",64,0)
        ;"      array("DIERR")="1^1"
"RTN","TMGRPC3G",65,0)
        ;"      array("DIERR",1)=311
"RTN","TMGRPC3G",66,0)
        ;"      array("DIERR",1,"PARAM",0)=3
"RTN","TMGRPC3G",67,0)
        ;"      array("DIERR",1,"PARAM","FIELD")=.02
"RTN","TMGRPC3G",68,0)
        ;"      array("DIERR",1,"PARAM","FILE")=2
"RTN","TMGRPC3G",69,0)
        ;"      array("DIERR",1,"PARAM","IENS")="+1,"
"RTN","TMGRPC3G",70,0)
        ;"      array("DIERR",1,"TEXT",1)="The NEW record '+1,' lacks some required identifiers."
"RTN","TMGRPC3G",71,0)
        ;"      array("DIERR","E",311,1)=""
"RTN","TMGRPC3G",72,0)
        ;"Results: returns one long equivalent string from above array.
"RTN","TMGRPC3G",73,0)
        ;"Note: This is a copy of the function GetErrStr^TMGDEBUG
"RTN","TMGRPC3G",74,0)
        ;"      I copied it here so that this file has no TMG* dependencies.
"RTN","TMGRPC3G",75,0)
 ;
"RTN","TMGRPC3G",76,0)
        NEW TMGESTR,TMGIDX,TMGENUM
"RTN","TMGRPC3G",77,0)
        NEW TMGRESULT SET TMGRESULT=""
"RTN","TMGRPC3G",78,0)
        FOR TMGENUM=1:1:+$GET(TMGEARRAY("DIERR")) DO
"RTN","TMGRPC3G",79,0)
        . NEW TMGESTR SET TMGESTR="Fileman says: '"
"RTN","TMGRPC3G",80,0)
        . ;"SET TMGESTR=TMGESTR_"Fileman says: '"
"RTN","TMGRPC3G",81,0)
        . IF TMGENUM'=1 SET TMGESTR=TMGESTR_"(Error# "_TMGENUM_") "
"RTN","TMGRPC3G",82,0)
        . SET TMGIDX=$ORDER(TMGEARRAY("DIERR",TMGENUM,"TEXT",""))
"RTN","TMGRPC3G",83,0)
        . IF TMGIDX'="" FOR  DO  QUIT:(TMGIDX="")
"RTN","TMGRPC3G",84,0)
        . . SET TMGESTR=TMGESTR_$GET(TMGEARRAY("DIERR",TMGENUM,"TEXT",TMGIDX))_" "
"RTN","TMGRPC3G",85,0)
        . . SET TMGIDX=$ORDER(TMGEARRAY("DIERR",TMGENUM,"TEXT",TMGIDX))
"RTN","TMGRPC3G",86,0)
        . IF $GET(TMGEARRAY("DIERR",TMGENUM,"PARAM",0))>0 DO
"RTN","TMGRPC3G",87,0)
        . . SET TMGIDX=$ORDER(TMGEARRAY("DIERR",TMGENUM,"PARAM",0))
"RTN","TMGRPC3G",88,0)
        . . SET TMGESTR=TMGESTR_"Details: "
"RTN","TMGRPC3G",89,0)
        . . FOR  DO  QUIT:(TMGIDX="")
"RTN","TMGRPC3G",90,0)
        . . . IF TMGIDX="" QUIT
"RTN","TMGRPC3G",91,0)
        . . . SET TMGESTR=TMGESTR_"["_TMGIDX_"]="_$GET(TMGEARRAY("DIERR",1,"PARAM",TMGIDX))_"  "
"RTN","TMGRPC3G",92,0)
        . . . SET TMGIDX=$ORDER(TMGEARRAY("DIERR",TMGENUM,"PARAM",TMGIDX))
"RTN","TMGRPC3G",93,0)
        . IF TMGRESULT'[TMGESTR SET TMGRESULT=TMGRESULT_TMGESTR
"RTN","TMGRPC3G",94,0)
 ;
"RTN","TMGRPC3G",95,0)
        QUIT TMGRESULT
"RTN","TMGRPC3G",96,0)
 ;
"RTN","TMGRPC3G",97,0)
ADDFDA(TMGFDA,TMGOUT,INDX) ;
"RTN","TMGRPC3G",98,0)
        ;"Purpose: To output the TMGFDA into the TMGOUT variable (so show erroneous
"RTN","TMGRPC3G",99,0)
        ;"         FDA.
"RTN","TMGRPC3G",100,0)
        ;"Input: TMGFDA -- the FDA as send to fileman.  PASS BY REFERENCE
"RTN","TMGRPC3G",101,0)
        ;"       TMGOUT -- the variable that will be passed back as the result of
"RTN","TMGRPC3G",102,0)
        ;"                 the RPC call.  PASS BY REFERENCE.
"RTN","TMGRPC3G",103,0)
        ;"       INDX -- the index to start adding the TMGFDA at.
"RTN","TMGRPC3G",104,0)
        ;"Results: none.
"RTN","TMGRPC3G",105,0)
        ;"
"RTN","TMGRPC3G",106,0)
        NEW TMGI SET TMGI=""
"RTN","TMGRPC3G",107,0)
        FOR  SET TMGI=$ORDER(TMGFDA(TMGI)) QUIT:TMGI=""  DO
"RTN","TMGRPC3G",108,0)
        . SET TMGOUT(INDX)="FDA("_TMGI_")="_$GET(TMGFDA(TMGI))
"RTN","TMGRPC3G",109,0)
        . SET INDX=INDX+1
"RTN","TMGRPC3G",110,0)
        QUIT
"RTN","TMGRPC3G",111,0)
        ;
"RTN","TMGRPC3G",112,0)
GETDLGIF(TMGOUT,TMGPARAMS) ;
"RTN","TMGRPC3G",113,0)
        ;"Purpose: to return information about every REMINDER DIALOG (#801.41)
"RTN","TMGRPC3G",114,0)
        ;"         entry in system, provided type = R (reminder dialog)
"RTN","TMGRPC3G",115,0)
        ;"Input:  TMGOUT -- the is the result OUT PARAMETER. Pass by reference
"RTN","TMGRPC3G",116,0)
        ;"        TMGPARAMS -- Not used. Include for future expansion
"RTN","TMGRPC3G",117,0)
        ;"Output: TMGOUT is filled as follows:
"RTN","TMGRPC3G",118,0)
        ;"          TMGOUT(0)="1^Success" or "-1^Message"
"RTN","TMGRPC3G",119,0)
        ;"          TMGOUT(1)= (as below)
"RTN","TMGRPC3G",120,0)
        ;"             piece#   Description
"RTN","TMGRPC3G",121,0)
        ;"              1       IEN801.4
"RTN","TMGRPC3G",122,0)
        ;"              2       Reminder dialog name
"RTN","TMGRPC3G",123,0)
        ;"              ----- Below to match output from ORWCV START and ORWCV POL ----
"RTN","TMGRPC3G",124,0)
        ;"              ----- only included IF there is a matching reminder definition ----
"RTN","TMGRPC3G",125,0)
        ;"              3       IEN of linked REMINDER DEF (#811.9)    matches piece 1
"RTN","TMGRPC3G",126,0)
        ;"              4       print name of REMINDER DEF             matches piece 2
"RTN","TMGRPC3G",127,0)
        ;"              5-8     not used here                          matches piece 3-6
"RTN","TMGRPC3G",128,0)
        ;"              9       Has linked active Rem Dlg (0 or 1)     matches piece 7
"RTN","TMGRPC3G",129,0)
        ;"              10-12   not used here                          matches piece 8-10
"RTN","TMGRPC3G",130,0)
        ;"              13      Additional check "DLGWIPE" (0 or 1)    matches piece 11
"RTN","TMGRPC3G",131,0)
        NEW TMGI SET TMGI=0
"RTN","TMGRPC3G",132,0)
        KILL TMGOUT
"RTN","TMGRPC3G",133,0)
        NEW TMGLINK
"RTN","TMGRPC3G",134,0)
        DO GETSRC(.TMGLINK)
"RTN","TMGRPC3G",135,0)
        SET TMGOUT(0)="1^Success" ;"default
"RTN","TMGRPC3G",136,0)
        NEW TMGIEN811D9
"RTN","TMGRPC3G",137,0)
        NEW TMGIEN SET TMGIEN=0
"RTN","TMGRPC3G",138,0)
        FOR  SET TMGIEN=$ORDER(^PXRMD(801.41,TMGIEN)) QUIT:(+TMGIEN'>0)  DO
"RTN","TMGRPC3G",139,0)
        . NEW S
"RTN","TMGRPC3G",140,0)
        . SET S=TMGIEN_"^"
"RTN","TMGRPC3G",141,0)
        . NEW TMGZN SET TMGZN=$GET(^PXRMD(801.41,TMGIEN,0))
"RTN","TMGRPC3G",142,0)
        . IF $PIECE(TMGZN,"^",4)'="R" QUIT
"RTN","TMGRPC3G",143,0)
        . SET S=S_$PIECE(TMGZN,"^",1)_"^"
"RTN","TMGRPC3G",144,0)
        . SET TMGIEN811D9=+$ORDER(TMGLINK(TMGIEN,""))
"RTN","TMGRPC3G",145,0)
        . SET S=S_TMGIEN811D9_"^"
"RTN","TMGRPC3G",146,0)
        . IF TMGIEN811D9>0 DO
"RTN","TMGRPC3G",147,0)
        . . ;"below based on code from AVAL^PXRMRPCA
"RTN","TMGRPC3G",148,0)
        . . SET S=S_$PIECE($GET(^PXD(811.9,TMGIEN811D9,0)),"^",3)
"RTN","TMGRPC3G",149,0)
        . . SET S=S_"^^^^^"
"RTN","TMGRPC3G",150,0)
        . . SET S=S_$$DLG^PXRMRPCA(TMGIEN811D9)_"^^^^"
"RTN","TMGRPC3G",151,0)
        . . SET S=S_$$DLGWIPE^PXRMRPCA(TMGIEN811D9)
"RTN","TMGRPC3G",152,0)
        . SET TMGI=TMGI+1
"RTN","TMGRPC3G",153,0)
        . SET TMGOUT(TMGI)=S
"RTN","TMGRPC3G",154,0)
        QUIT
"RTN","TMGRPC3G",155,0)
        ;
"RTN","TMGRPC3G",156,0)
GETSRC(TMGOUT) ;
"RTN","TMGRPC3G",157,0)
        ;"Purpose: Get linked Reminder definition for reminder dialogs.
"RTN","TMGRPC3G",158,0)
        ;"Input: TMGOUT -- AN OUT PARAMETER
"RTN","TMGRPC3G",159,0)
        ;"Result:  TMGOUT(ReminderDlgIEN801.41,ReminderDef811.9)=""
"RTN","TMGRPC3G",160,0)
        ;"Note: the REMINDER DIALOG field SOURCE REMINDER doesn't seem reliably populated
"RTN","TMGRPC3G",161,0)
        KILL TMGOUT
"RTN","TMGRPC3G",162,0)
        NEW TMGIEN801D41
"RTN","TMGRPC3G",163,0)
        NEW TMGIEN811D9 SET TMGIEN811D9=0
"RTN","TMGRPC3G",164,0)
        FOR  SET TMGIEN811D9=$ORDER(^PXD(811.9,TMGIEN811D9)) QUIT:(+TMGIEN811D9'>0)  DO
"RTN","TMGRPC3G",165,0)
        . SET TMGIEN801D41=+$PIECE($GET(^PXD(811.9,TMGIEN811D9,51)),"^",1)
"RTN","TMGRPC3G",166,0)
        . QUIT:(TMGIEN801D41'>0)
"RTN","TMGRPC3G",167,0)
        . SET TMGOUT(TMGIEN801D41,TMGIEN811D9)=""
"RTN","TMGRPC3G",168,0)
        ;"SET TMGIEN801D41=0
"RTN","TMGRPC3G",169,0)
        ;"FOR  SET TMGIEN801D41=$ORDER(^PXRMD(801.41,TMGIEN801D41)) QUIT:(+TMGIEN801D41'>0)  DO
"RTN","TMGRPC3G",170,0)
        ;". IF $DATA(TMGOUT(TMGIEN801D41))>0 QUIT
"RTN","TMGRPC3G",171,0)
        ;". SET TMGOUT(TMGIEN801D41,0)=""
"RTN","TMGRPC3G",172,0)
        QUIT
"RTN","TMGRPC3G",173,0)
        ;
"RTN","TMGRPC3G",174,0)
MOVDLGEL(TMGOUT,TMGPARAMS) ;Move Reminder Dialog Element
"RTN","TMGRPC3G",175,0)
        ;"Purpose: To move a reminder dialog element from child list of one parent into the child list of another parent
"RTN","TMGRPC3G",176,0)
        ;"Input:  TMGOUT -- the is the result OUT PARAMETER. Pass by reference
"RTN","TMGRPC3G",177,0)
        ;"        TMGPARAMS -- ElementIEN^CurrentParentIEN^NewParentIEN^[NewSeqNum] -- all IEN's are from file 801.41
"RTN","TMGRPC3G",178,0)
        ;"              Note: NewSeqNum is optional.  If provided, element will be put into
"RTN","TMGRPC3G",179,0)
        ;"                    parent's elements (children) list at indicated sequence.
"RTN","TMGRPC3G",180,0)
        ;"                    If requested sequence number is already used, then child
"RTN","TMGRPC3G",181,0)
        ;"                    will be inserted AFTER this number.
"RTN","TMGRPC3G",182,0)
        ;"Output: TMGOUT is filled as follows:
"RTN","TMGRPC3G",183,0)
        ;"          TMGOUT(0)="1^Success^IENS801d42" or "-1^Message"
"RTN","TMGRPC3G",184,0)
        NEW TMGRESULT SET TMGRESULT="1^Success"
"RTN","TMGRPC3G",185,0)
        SET TMGPARAMS=$GET(TMGPARAMS)
"RTN","TMGRPC3G",186,0)
        NEW TMGIEN SET TMGIEN=+$PIECE(TMGPARAMS,"^",1)
"RTN","TMGRPC3G",187,0)
        IF '$DATA(^PXRMD(801.41,TMGIEN)) DO  GOTO MVDN
"RTN","TMGRPC3G",188,0)
        . SET TMGRESULT="-1^Invalid dialog element IEN.  Got '"_$PIECE(TMGPARAMS,"^",1)_"'"
"RTN","TMGRPC3G",189,0)
        NEW TMGPIEN SET TMGPIEN=+$PIECE(TMGPARAMS,"^",2)
"RTN","TMGRPC3G",190,0)
        IF '$DATA(^PXRMD(801.41,TMGPIEN)) DO  GOTO MVDN
"RTN","TMGRPC3G",191,0)
        . SET TMGRESULT="-1^Invalid parent dialog element IEN.  Got '"_$PIECE(TMGPARAMS,"^",2)_"'"
"RTN","TMGRPC3G",192,0)
        NEW TMGNEWPIEN SET TMGNEWPIEN=+$PIECE(TMGPARAMS,"^",3)
"RTN","TMGRPC3G",193,0)
        IF '$DATA(^PXRMD(801.41,TMGNEWPIEN)) DO  GOTO MVDN
"RTN","TMGRPC3G",194,0)
        . SET TMGRESULT="-1^Invalid NEW parent dialog element IEN.  Got '"_$PIECE(TMGPARAMS,"^",3)_"'"
"RTN","TMGRPC3G",195,0)
        NEW TMGSUBIEN SET TMGSUBIEN=+$ORDER(^PXRMD(801.41,TMGPIEN,10,"D",TMGIEN,0))
"RTN","TMGRPC3G",196,0)
        IF TMGSUBIEN'>0 DO  GOTO MVDN
"RTN","TMGRPC3G",197,0)
        . SET TMGRESULT="-1^Element (IEN #"_TMGIEN_") not found as child of parent (IEN #"_TMGPIEN_")."
"RTN","TMGRPC3G",198,0)
        NEW TMGNEWSEQ SET TMGNEWSEQ=+$PIECE(TMGPARAMS,"^",4)
"RTN","TMGRPC3G",199,0)
        IF (TMGNEWSEQ'>0) DO
"RTN","TMGRPC3G",200,0)
        . SET TMGNEWSEQ=+$ORDER(^PXRMD(801.41,TMGNEWPIEN,"B",""),-1)
"RTN","TMGRPC3G",201,0)
        IF (TMGNEWSEQ=0)!(+$ORDER(^PXRMD(801.41,TMGNEWPIEN,10,"B",TMGNEWSEQ,""))>0) DO
"RTN","TMGRPC3G",202,0)
        . FOR  DO  QUIT:(+$ORDER(^PXRMD(801.41,TMGNEWPIEN,10,"B",TMGNEWSEQ,""))=0)
"RTN","TMGRPC3G",203,0)
        . . SET TMGNEWSEQ=TMGNEWSEQ+5
"RTN","TMGRPC3G",204,0)
        ;"Try to add to NEW parent, into child elements list
"RTN","TMGRPC3G",205,0)
        NEW TMGFDA,TMGMSG,TMGIENOUT
"RTN","TMGRPC3G",206,0)
        NEW TMGIENS SET TMGIENS="+1,"_TMGNEWPIEN_","
"RTN","TMGRPC3G",207,0)
        SET TMGFDA(801.412,TMGIENS,.01)=TMGNEWSEQ
"RTN","TMGRPC3G",208,0)
        SET TMGFDA(801.412,TMGIENS,2)="`"_TMGIEN
"RTN","TMGRPC3G",209,0)
        DO UPDATE^DIE("E","TMGFDA","TMGIENOUT","TMGMSG")
"RTN","TMGRPC3G",210,0)
        IF $DATA(TMGMSG("DIERR")) DO  GOTO MVDN
"RTN","TMGRPC3G",211,0)
        . SET TMGRESULT="-1^"_$$GETERSTR(.TMGMSG)
"RTN","TMGRPC3G",212,0)
        SET TMGIENS=$GET(TMGIENOUT("1"),"???")_","_TMGNEWPIEN_","
"RTN","TMGRPC3G",213,0)
        SET TMGRESULT=TMGRESULT_"^"_TMGIENS
"RTN","TMGRPC3G",214,0)
        ;"Now remove from source record
"RTN","TMGRPC3G",215,0)
        KILL TMGFDA
"RTN","TMGRPC3G",216,0)
        SET TMGIENS=TMGSUBIEN_","_TMGPIEN_","
"RTN","TMGRPC3G",217,0)
        SET TMGFDA(801.412,TMGIENS,.01)="@"
"RTN","TMGRPC3G",218,0)
        DO UPDATE^DIE("E","TMGFDA","TMGIEN","TMGMSG")
"RTN","TMGRPC3G",219,0)
        IF $DATA(TMGMSG("DIERR")) DO  GOTO MVDN
"RTN","TMGRPC3G",220,0)
        . SET TMGRESULT="-1^"_$$GETERSTR(.TMGMSG)
"RTN","TMGRPC3G",221,0)
        ;
"RTN","TMGRPC3G",222,0)
MVDN    SET TMGOUT(0)=TMGRESULT
"RTN","TMGRPC3G",223,0)
        QUIT
"RTN","TMGRPC3G",224,0)
        ;
"RTN","TMGRPC3G",225,0)
RPTPXRM(TMGRESULT,TMGIEN)  ; 
"RTN","TMGRPC3G",226,0)
        ;"Purpose: HANDLE RPC CHANNEL REQUEST FOR TAXONOMY INQUIRE
"RTN","TMGRPC3G",227,0)
        NEW TEMP SET TEMP=$$RPT1PXRM("TMGRESULT",.TMGIEN)
"RTN","TMGRPC3G",228,0)
        SET TMGRESULT(0)=TEMP
"RTN","TMGRPC3G",229,0)
        QUIT
"RTN","TMGRPC3G",230,0)
        ;
"RTN","TMGRPC3G",231,0)
RPT1PXRM(TMGREF,TMGIEN) ;
"RTN","TMGRPC3G",232,0)
        ;"Purpose: GET INQUIRE REPORT FOR REMINDER TAXONOMY
"RTN","TMGRPC3G",233,0)
        ;"Input:  TMGREF -- Location to store report.  Closed format.
"RTN","TMGRPC3G",234,0)
        ;"                  E.g. "TMP(5)" --> text will be stored as follows
"RTN","TMGRPC3G",235,0)
        ;"                    TMP(5,1)="first line"
"RTN","TMGRPC3G",236,0)
        ;"                    TMP(5,2)="second line"  etc.
"RTN","TMGRPC3G",237,0)
        ;"        TMGIEN -- IEN IN FILE 811.2, or name to look up.
"RTN","TMGRPC3G",238,0)
        ;"Result: 1 IF success, OR -1^Message IF error
"RTN","TMGRPC3G",239,0)
        NEW RESULT,X,Y,DC
"RTN","TMGRPC3G",240,0)
        SET TMGIEN=$GET(TMGIEN)
"RTN","TMGRPC3G",241,0)
        IF +TMGIEN>0 SET TMGIEN=+TMGIEN
"RTN","TMGRPC3G",242,0)
        ELSE  DO
"RTN","TMGRPC3G",243,0)
        . SET X=TMGIEN
"RTN","TMGRPC3G",244,0)
        . IF X["TX." SET X=$PIECE(X,"TX.",2)
"RTN","TMGRPC3G",245,0)
        . NEW DIC SET DIC=811.2,DIC(0)="M"
"RTN","TMGRPC3G",246,0)
        . DO ^DIC
"RTN","TMGRPC3G",247,0)
        . IF +Y>0 SET TMGIEN=+Y
"RTN","TMGRPC3G",248,0)
        IF +TMGIEN'>0 DO  GOTO RPDN
"RTN","TMGRPC3G",249,0)
        . SET RESULT="-1^Expected entry in file 811.2.  Got: "_TMGIEN
"RTN","TMGRPC3G",250,0)
        NEW FLDS SET FLDS="[PXRM TAXONOMY INQUIRY]"                                          
"RTN","TMGRPC3G",251,0)
        NEW HEADER SET HEADER="REMINDER TAXONOMY INQUIRY"                                      
"RTN","TMGRPC3G",252,0)
        NEW DIC SET DIC="^PXD(811.2,"                                                  
"RTN","TMGRPC3G",253,0)
        NEW BY SET BY="NUMBER"
"RTN","TMGRPC3G",254,0)
        NEW FR,TO SET (FR,TO)=+TMGIEN
"RTN","TMGRPC3G",255,0)
        NEW NOW SET NOW=$$FMTE^XLFDT($$NOW^XLFDT,"1P")
"RTN","TMGRPC3G",256,0)
        NEW DHD SET DHD="W ?0 D HEADER^PXRMINQ("""_HEADER_""")"
"RTN","TMGRPC3G",257,0)
        NEW L SET L=0
"RTN","TMGRPC3G",258,0)
        NEW IOP SET IOP="HFS"
"RTN","TMGRPC3G",259,0)
        NEW %ZIS SET %ZIS("HFSMODE")="W"
"RTN","TMGRPC3G",260,0)
        NEW H SET H=$H
"RTN","TMGRPC3G",261,0)
        NEW PATH SET PATH="/tmp/"
"RTN","TMGRPC3G",262,0)
        NEW FNAME SET FNAME="TMG_"_$J_"_"_$P(H,",",1)_"_"_$P(H,",",2)_".txt"
"RTN","TMGRPC3G",263,0)
        SET %ZIS("HFSNAME")=PATH_FNAME
"RTN","TMGRPC3G",264,0)
        DO EN1^DIP  ;"<--- Here is where the report is generated
"RTN","TMGRPC3G",265,0)
        SET TMGREF=$$OREF^DILF(TMGREF)_"1)"
"RTN","TMGRPC3G",266,0)
        SET RESULT=$$FTG^%ZISH(PATH,FNAME,TMGREF,$QLENGTH(TMGREF))
"RTN","TMGRPC3G",267,0)
        IF RESULT'>0 DO  GOTO RPDN
"RTN","TMGRPC3G",268,0)
        . SET RESULT="-1^Failed to open report file: "_PATH_FNAME
"RTN","TMGRPC3G",269,0)
        NEW TMGDEL SET TMGDEL(FNAME)=""
"RTN","TMGRPC3G",270,0)
        SET RESULT=$$DEL^%ZISH(PATH,"TMGDEL")
"RTN","TMGRPC3G",271,0)
        IF RESULT'>0 DO  GOTO RPDN
"RTN","TMGRPC3G",272,0)
        . SET RESULT="-1^Report succeded, but failed to delete report file: "_PATH_FNAME
"RTN","TMGRPC3G",273,0)
        SET RESULT="1^Success"
"RTN","TMGRPC3G",274,0)
RPDN    QUIT RESULT        
"RTN","TMGRPC3G",275,0)
        ;
"RTN","TMGRPC3G",276,0)
LOADPRNT(TMGIEN,TMGARR) ;"Gather list of parents in 801.41.  
"RTN","TMGRPC3G",277,0)
        ;"NOTE: Will make endless loop is child is also ancestor to itself (loop situation) 
"RTN","TMGRPC3G",278,0)
        ;"TMGIEN -- IEN IN 801.41
"RTN","TMGRPC3G",279,0)
        ;"TMGARR -- PASS BY REFERENCE.  Resulting array
"RTN","TMGRPC3G",280,0)
        NEW TEMP,IEN
"RTN","TMGRPC3G",281,0)
        NEW FOUND SET FOUND=0
"RTN","TMGRPC3G",282,0)
        SET IEN=0 FOR  SET IEN=$ORDER(^PXRMD(801.41,"AD",TMGIEN,IEN)) QUIT:(+IEN'>0)  DO
"RTN","TMGRPC3G",283,0)
        . SET TMGARR(IEN)="",FOUND=1
"RTN","TMGRPC3G",284,0)
        . DO LOADPRNT(IEN,.TMGARR)
"RTN","TMGRPC3G",285,0)
        IF FOUND=0 SET TMGARR("TOP",TMGIEN)=""
"RTN","TMGRPC3G",286,0)
        QUIT
"RTN","TMGRPC3G",287,0)
        ;  
"RTN","TMGRPC3G",288,0)
GDLGROOT(TMGRESULT,TMGIEN)  ; 
"RTN","TMGRPC3G",289,0)
        ;"Purpose: Return list of root items of any reminder dialog tree that items is part of
"RTN","TMGRPC3G",290,0)
        ;"Input: TMGIEN -- IEN in 801.41
"RTN","TMGRPC3G",291,0)
        ;"Output: TMGOUT is filled as follows:
"RTN","TMGRPC3G",292,0)
        ;"        TMGOUT(0)="1^Success" or "-1^Message"
"RTN","TMGRPC3G",293,0)
        ;"        TMGOUT(#)=IEN801d41^External name <-- a root item
"RTN","TMGRPC3G",294,0)
        NEW TEMP,IEN,IDX
"RTN","TMGRPC3G",295,0)
        KILL TMGRESULT
"RTN","TMGRPC3G",296,0)
        DO LOADPRNT(TMGIEN,.TEMP)   
"RTN","TMGRPC3G",297,0)
        KILL TEMP("TOP",TMGIEN)
"RTN","TMGRPC3G",298,0)
        SET IDX=1,IEN=0 
"RTN","TMGRPC3G",299,0)
        FOR  SET IEN=$ORDER(TEMP("TOP",IEN)) QUIT:(+IEN'>0)  DO
"RTN","TMGRPC3G",300,0)
        . NEW NAME SET NAME=$PIECE($GET(^PXRMD(801.41,IEN,0)),"^",1)
"RTN","TMGRPC3G",301,0)
        . SET TMGRESULT(IDX)=IEN_"^"_NAME
"RTN","TMGRPC3G",302,0)
        . SET IDX=IDX+1
"RTN","TMGRPC3G",303,0)
        SET TMGRESULT(0)="1^Success"
"RTN","TMGRPC3G",304,0)
        QUIT
"RTN","TMGRPC3G",305,0)
        ;        
"RTN","TMGRPC3G",306,0)
IFREMFLG(TMGIEN,TMGFLAGS) ; 
"RTN","TMGRPC3G",307,0)
        ;"Purpose: screen entries from 811.9 (REMINDER DEFINITION) for matching flags.
"RTN","TMGRPC3G",308,0)
        ;"Input: TMGIEN -- IEN in 811.9
"RTN","TMGRPC3G",309,0)
        ;"       TMGFLAGS -- Flags as defined in data dictionary for USAGE field in file 811.9
"RTN","TMGRPC3G",310,0)
        ;"                   Only those records compatible with these flags should be acceptable.
"RTN","TMGRPC3G",311,0)
        ;"  ...This field must contain C IF the reminder is to be
"RTN","TMGRPC3G",312,0)
        ;"  selected in CPRS. The L value will override all other
"RTN","TMGRPC3G",313,0)
        ;"  values. For example, IF L and C are defined in the usage
"RTN","TMGRPC3G",314,0)
        ;"  field, the Reminder will not show on the cover sheet in
"RTN","TMGRPC3G",315,0)
        ;"  CPRS, because L is in the Usage field.
"RTN","TMGRPC3G",316,0)
        ;"  This is free text field and can contain any combination of
"RTN","TMGRPC3G",317,0)
        ;"  the following codes: 
"RTN","TMGRPC3G",318,0)
        ;"  Code Usage 
"RTN","TMGRPC3G",319,0)
        ;"  C    CPRS  
"RTN","TMGRPC3G",320,0)
        ;"  L    Reminder Patient List
"RTN","TMGRPC3G",321,0)
        ;"  P    Patient
"RTN","TMGRPC3G",322,0)
        ;"  R    Reminder Reports  
"RTN","TMGRPC3G",323,0)
        ;"  X    Reminder Extracts  
"RTN","TMGRPC3G",324,0)
        ;"  *    All of the above, except L and P.                            
"RTN","TMGRPC3G",325,0)
        ;"Result: 1 IF record USAGE flags match input TMGFLAGS, otherwise 0
"RTN","TMGRPC3G",326,0)
        ;
"RTN","TMGRPC3G",327,0)
        NEW ISOK SET ISOK=1  ;"default is OK
"RTN","TMGRPC3G",328,0)
        SET TMGIEN=+$GET(TMGIEN)
"RTN","TMGRPC3G",329,0)
        SET TMGFLAGS=$GET(TMGFLAGS)
"RTN","TMGRPC3G",330,0)
        NEW RECFLAGS SET RECFLAGS=$PIECE($GET(^PXD(811.9,TMGIEN,100)),"^",4)
"RTN","TMGRPC3G",331,0)
        IF (RECFLAGS["*")&(TMGFLAGS'["L")&(TMGFLAGS'["P") GOTO IRFDN
"RTN","TMGRPC3G",332,0)
        NEW CH,IDX
"RTN","TMGRPC3G",333,0)
        ;"FOR IDX=1:1:$LENGTH(RECFLAGS) DO  QUIT:(ISOK=0)
"RTN","TMGRPC3G",334,0)
        FOR IDX=1:1:$LENGTH(TMGFLAGS) DO  QUIT:(ISOK=0)
"RTN","TMGRPC3G",335,0)
        . ;"SET THISCH=$EXTRACT(RECFLAGS,IDX)
"RTN","TMGRPC3G",336,0)
        . ;"IF TMGFLAGS[THISCH QUIT  ;"still OK
"RTN","TMGRPC3G",337,0)
        . SET CH=$EXTRACT(TMGFLAGS,IDX)  QUIT:(CH="")  
"RTN","TMGRPC3G",338,0)
        . IF RECFLAGS[CH QUIT  ;"still OK
"RTN","TMGRPC3G",339,0)
        . IF (CH'="L")&(CH'="P")&(TMGFLAGS["*") QUIT  ;"still OK.
"RTN","TMGRPC3G",340,0)
        . IF (CH="*")&(TMGFLAGS'["L")&(TMGFLAGS'["P") QUIT
"RTN","TMGRPC3G",341,0)
        . SET ISOK=0  ;"not a match, break look
"RTN","TMGRPC3G",342,0)
IRFDN   QUIT ISOK
"RTN","TMGRPC3G",343,0)
        ;
"RTN","TMGRPC3G",344,0)
IFRMDLGO(TMGIEN,TMGPARENTIEN) ;"IF REMINDER DIALOG OK
"RTN","TMGRPC3G",345,0)
        ;"Purpose: determine IF REMINDER DIALOG element item is compatable with parent
"RTN","TMGRPC3G",346,0)
        ;"Input: TMGIEN, TMGPARENTIEN -- IEN's from file 801.41
"RTN","TMGRPC3G",347,0)
        ;"NOTE: Also uses TMGTEMP1 in global scope.  List of IEN's of ancestors of parent  
"RTN","TMGRPC3G",348,0)
        ;"      Was NEW'd in GFLSUBST. Setup in GFSSCRN^TMGRPC3B  
"RTN","TMGRPC3G",349,0)
        ;"NOTE: Most of logic taken from SCREEN^PXRMDD41
"RTN","TMGRPC3G",350,0)
        ;"Type options: P:prompt, E:dialog element, R:reminder dialog, F:forced value
"RTN","TMGRPC3G",351,0)
        ;"              G:dialog group, S:result group (MH), T:result element (MH)
"RTN","TMGRPC3G",352,0)
        ;"Result: 1 IF record is compatable, otherwise 0
"RTN","TMGRPC3G",353,0)
        NEW ISOK SET ISOK=0
"RTN","TMGRPC3G",354,0)
        SET TMGPARENTIEN=+$GET(TMGPARENTIEN) IF TMGPARENTIEN'>0 GOTO IFDGODN
"RTN","TMGRPC3G",355,0)
        NEW PTYPE SET PTYPE=$PIECE($GET(^PXRMD(801.41,TMGPARENTIEN,0)),"^",4) ;"Parent type
"RTN","TMGRPC3G",356,0)
        NEW ITYPE SET ITYPE=$PIECE($GET(^PXRMD(801.41,TMGIEN,0)),"^",4)       ;"Item type  
"RTN","TMGRPC3G",357,0)
        IF PTYPE="E" SET ISOK=("FP"[ITYPE)       ;"Dialog (E)lements can only contain prompts/forced values
"RTN","TMGRPC3G",358,0)
        IF PTYPE="R" SET ISOK=("EG"[ITYPE) ;"(R)eminder dialogs can contain only Elements and Groups
"RTN","TMGRPC3G",359,0)
        IF PTYPE="S" SET ISOK=("T"[ITYPE)  ;"MH Re(S)ult Groups can only contain MH Result Elements
"RTN","TMGRPC3G",360,0)
        IF PTYPE="G" SET ISOK=(TMGIEN'=TMGPARENTIEN) ;"Dialog (G)roups cannot point to themselves
"RTN","TMGRPC3G",361,0)
        IF "PFT"[PTYPE SET ISOK=("RST"'[ITYPE)   ;"MH re(s)ul(t)s and (R)eminder dialogs dissallowed
"RTN","TMGRPC3G",362,0)
        IF ISOK SET ISOK=($DATA(TMGTEMP1(TMGIEN))=0) ;"Make sure item in question is not already an ancestor to parent
"RTN","TMGRPC3G",363,0)
IFDGODN QUIT ISOK 
"RTN","TMGRPC3G",364,0)
        ;
"RTN","TMGRPC3G",365,0)
EXPFNAME(TMGRESULT,TMGFNUM) ;
"RTN","TMGRPC3G",366,0)
        ;"Purpose: Handle Channel command: GET EXPANDED FILENAME
"RTN","TMGRPC3G",367,0)
        ;"Input:  TMGRESULT -- An OUT parameter.  Pass by ref.
"RTN","TMGRPC3G",368,0)
        ;"        TMGFNUM -- Filenumber to expand
"RTN","TMGRPC3G",369,0)
        ;"          NOTE: IF a file NAME is passed, and NAME is valid,
"RTN","TMGRPC3G",370,0)
        ;"               then NAME is converted to number, and then processed as before
"RTN","TMGRPC3G",371,0)
        ;"Output: TMGRESULT(0)=1^Success  or -1^Error message
"RTN","TMGRPC3G",372,0)
        ;"        TMGRESULT(1)=ExpandedFilename^FileNumber
"RTN","TMGRPC3G",373,0)
        KILL TMGRESULT
"RTN","TMGRPC3G",374,0)
        IF +$GET(TMGFNUM)'>0 DO
"RTN","TMGRPC3G",375,0)
        . IF $GET(TMGFNUM)="" QUIT
"RTN","TMGRPC3G",376,0)
        . NEW X,Y,DIC SET DIC=1,DIC(0)="M"
"RTN","TMGRPC3G",377,0)
        . SET X=TMGFNUM
"RTN","TMGRPC3G",378,0)
        . DO ^DIC
"RTN","TMGRPC3G",379,0)
        . IF +Y>0 SET TMGFNUM=+Y QUIT
"RTN","TMGRPC3G",380,0)
        . SET TMGRESULT(0)="-1^Valid unique file name not found.  Got: "_$GET(TMGFNUM)
"RTN","TMGRPC3G",381,0)
        IF $DATA(TMGRESULT) GOTO EFNDN 
"RTN","TMGRPC3G",382,0)
        IF +$GET(TMGFNUM)'>0 DO  GOTO EFNDN
"RTN","TMGRPC3G",383,0)
        . SET TMGRESULT(0)="-1^Numeric file number not found.  Got: "_$GET(TMGFNUM)
"RTN","TMGRPC3G",384,0)
        SET TMGFNUM=+$GET(TMGFNUM)
"RTN","TMGRPC3G",385,0)
        NEW TEMP SET TEMP=$$EXPFNAM2(TMGFNUM)
"RTN","TMGRPC3G",386,0)
        IF TEMP="??" DO  GOTO EFNDN
"RTN","TMGRPC3G",387,0)
        . SET TMGRESULT(0)="-1^Unable to expand file number: "_TMGFNUM
"RTN","TMGRPC3G",388,0)
        SET TMGRESULT(0)="1^Success"
"RTN","TMGRPC3G",389,0)
        SET TMGRESULT(1)=TEMP_"^"_TMGFNUM
"RTN","TMGRPC3G",390,0)
EFNDN   QUIT  
"RTN","TMGRPC3G",391,0)
        ;
"RTN","TMGRPC3G",392,0)
EXPFNAM2(FILENUM)  ;Copied from EXPFNAME^TMGDBAP2 to remove dependency
"RTN","TMGRPC3G",393,0)
        ;"Purpose: Convert file number info expanded name, PARENTNAME:SUBNAME:...
"RTN","TMGRPC3G",394,0)
        ;"Input: FILENUM -- File or subfile number
"RTN","TMGRPC3G",395,0)
        ;"Result: If FILENUM is a normal file number, then simply file name is returned
"RTN","TMGRPC3G",396,0)
        ;"        IF FILENUM is a subfile number, then an expanded name is returned:
"RTN","TMGRPC3G",397,0)
        ;"            GRANDPARENTFILENAME:PARENTILENAME:FILENAME
"RTN","TMGRPC3G",398,0)
        ;"            For subfiles, then the name of the file will be considered the
"RTN","TMGRPC3G",399,0)
        ;"              field name in the parent file.
"RTN","TMGRPC3G",400,0)
        ;"Result: returns expanded name, or "??" IF problem
"RTN","TMGRPC3G",401,0)
        NEW RESULT SET RESULT=""
"RTN","TMGRPC3G",402,0)
        NEW NUM SET NUM=FILENUM
"RTN","TMGRPC3G",403,0)
        NEW NAME SET NAME=""
"RTN","TMGRPC3G",404,0)
        NEW DONE SET DONE=0
"RTN","TMGRPC3G",405,0)
        FOR  DO  QUIT:DONE
"RTN","TMGRPC3G",406,0)
        . IF RESULT'="" SET RESULT=":"_RESULT
"RTN","TMGRPC3G",407,0)
        . IF $DATA(^DIC(NUM)) DO  QUIT
"RTN","TMGRPC3G",408,0)
        . . SET RESULT=$PIECE($GET(^DIC(NUM,0)),"^",1)_RESULT
"RTN","TMGRPC3G",409,0)
        . . SET DONE=1
"RTN","TMGRPC3G",410,0)
        . IF $DATA(^DD(NUM,0)) DO
"RTN","TMGRPC3G",411,0)
        . . NEW SUBNAME SET SUBNAME=$PIECE($GET(^DD(NUM,0)),"^",1)
"RTN","TMGRPC3G",412,0)
        . . SET SUBNAME=$PIECE(SUBNAME," SUB-FIELD",1)
"RTN","TMGRPC3G",413,0)
        . . SET RESULT=SUBNAME_RESULT
"RTN","TMGRPC3G",414,0)
        . . SET NUM=+$GET(^DD(NUM,0,"UP"))
"RTN","TMGRPC3G",415,0)
        . ELSE  DO  QUIT
"RTN","TMGRPC3G",416,0)
        . . SET RESULT="??"_RESULT
"RTN","TMGRPC3G",417,0)
        . . SET DONE=1
"RTN","TMGRPC3G",418,0)
        QUIT RESULT
"RTN","TMGRPC3G",419,0)
        ;
"RTN","TMGRPC3G",420,0)
TESTREM(TMGRESULT,PARAMS)  ; 
"RTN","TMGRPC3G",421,0)
        ;"Purpose: HANDLE RPC CHANNEL REQUEST FOR: GET REMINDER TEST
"RTN","TMGRPC3G",422,0)
        ;"Input:  TMGRESULT -- The result parameter
"RTN","TMGRPC3G",423,0)
        ;"        PARAMS -- ReminderIEN^DFNorPatientName^AsOfDate(External format)^DisplayAllTerms(Y/N)
"RTN","TMGRPC3G",424,0)
        NEW TMGIEN,TMGPAT,TMGDT,TMGALLTERMS
"RTN","TMGRPC3G",425,0)
        SET TMGIEN=$PIECE(PARAMS,"^",1)
"RTN","TMGRPC3G",426,0)
        SET TMGPAT=$PIECE(PARAMS,"^",2)
"RTN","TMGRPC3G",427,0)
        SET TMGDATE=$PIECE(PARAMS,"^",3)
"RTN","TMGRPC3G",428,0)
        SET TMGALLTERMS=($PIECE(PARAMS,"^",4)="Y")
"RTN","TMGRPC3G",429,0)
        NEW TEMP SET TEMP=$$TEST1REM("TMGRESULT",.TMGIEN,TMGPAT,TMGDATE,TMGALLTERMS)
"RTN","TMGRPC3G",430,0)
        SET TMGRESULT(0)=TEMP
"RTN","TMGRPC3G",431,0)
        QUIT
"RTN","TMGRPC3G",432,0)
        ;
"RTN","TMGRPC3G",433,0)
TEST1REM(TMGREF,TMGIEN,TMGPAT,TMGDT,TMGALLTERMS) ;
"RTN","TMGRPC3G",434,0)
        ;"Purpose: GET REMINDER TEST
"RTN","TMGRPC3G",435,0)
        ;"Input:  TMGREF -- Location to store report.  Closed format.
"RTN","TMGRPC3G",436,0)
        ;"                  E.g. "TMP(5)" --> text will be stored as follows
"RTN","TMGRPC3G",437,0)
        ;"                    TMP(5,1)="first line"
"RTN","TMGRPC3G",438,0)
        ;"                    TMP(5,2)="second line"  etc.
"RTN","TMGRPC3G",439,0)
        ;"        TMGIEN -- IEN IN FILE 811.9 (REMINDER DEFINITION)
"RTN","TMGRPC3G",440,0)
        ;"        TMGPAT -- DFN or patient name to look up
"RTN","TMGRPC3G",441,0)
        ;"        TMGDT -- As of Date (external format)
"RTN","TMGRPC3G",442,0)
        ;"        TMGALLTERMS -- 1 IF to return all terms
"RTN","TMGRPC3G",443,0)
        ;"Result: 1 IF success, OR -1^Message IF error
"RTN","TMGRPC3G",444,0)
        ;"---------------------------------------
"RTN","TMGRPC3G",445,0)
        NEW RESULT,X,Y,DIC
"RTN","TMGRPC3G",446,0)
        SET TMGIEN=$GET(TMGIEN)
"RTN","TMGRPC3G",447,0)
        IF +TMGIEN'>0 DO  GOTO T1RMDN  ;"Ensure TMGIEN is numeric...
"RTN","TMGRPC3G",448,0)
        . SET RESULT="-1^Numeric reminder IEN not found.  Got: "_TMGIEN
"RTN","TMGRPC3G",449,0)
        NEW TMGDFN SET TMGDFN=$GET(TMGPAT)
"RTN","TMGRPC3G",450,0)
        IF +TMGDFN'=TMGDFN DO
"RTN","TMGRPC3G",451,0)
        . SET DIC=2,DIC(0)="M"
"RTN","TMGRPC3G",452,0)
        . SET X=TMGDFN
"RTN","TMGRPC3G",453,0)
        . DO ^DIC
"RTN","TMGRPC3G",454,0)
        . IF +Y>0 SET TMGDFN=+Y
"RTN","TMGRPC3G",455,0)
        IF +TMGDFN'>0 DO  GOTO T1RMDN
"RTN","TMGRPC3G",456,0)
        . SET RESULT="-1^Unable to find DFN for patient.  Got: "_TMGDFN
"RTN","TMGRPC3G",457,0)
        NEW %DT SET %DT="TP" SET X=TMGDT DO ^%DT
"RTN","TMGRPC3G",458,0)
        IF Y>0 SET TMGDT=Y
"RTN","TMGRPC3G",459,0)
        ELSE  SET RESULT="-1^Unable to process date.  Got: "_TMGDT
"RTN","TMGRPC3G",460,0)
        NEW PXRMTDEB SET PXRMTDEB=TMGALLTERMS  
"RTN","TMGRPC3G",461,0)
        SET PXRHM=5
"RTN","TMGRPC3G",462,0)
        NEW H SET H=$H
"RTN","TMGRPC3G",463,0)
        NEW PATH SET PATH="/tmp/"
"RTN","TMGRPC3G",464,0)
        NEW FNAME SET FNAME="TMG_"_$J_"_"_$P(H,",",1)_"_"_$P(H,",",2)_".txt"
"RTN","TMGRPC3G",465,0)
        NEW IOP SET IOP="HFS"
"RTN","TMGRPC3G",466,0)
        NEW %ZIS SET %ZIS("HFSMODE")="W"
"RTN","TMGRPC3G",467,0)
        SET %ZIS("HFSNAME")=PATH_FNAME
"RTN","TMGRPC3G",468,0)
        DO ^%ZIS
"RTN","TMGRPC3G",469,0)
        IF POP>0 DO  GOTO T1RMDN
"RTN","TMGRPC3G",470,0)
        . SET RESULT="-1^Error opening host file for writing.  POP="_POP
"RTN","TMGRPC3G",471,0)
        USE IO
"RTN","TMGRPC3G",472,0)
        ;"NEW I FOR I=1:1:100 WRITE I,!
"RTN","TMGRPC3G",473,0)
        DO DOREM^PXRMDEV(TMGDFN,TMGIEN,PXRHM,TMGDT)
"RTN","TMGRPC3G",474,0)
        DO ^%ZISC
"RTN","TMGRPC3G",475,0)
        SET TMGREF=$$OREF^DILF(TMGREF)_"1)"
"RTN","TMGRPC3G",476,0)
        SET RESULT=$$FTG^%ZISH(PATH,FNAME,TMGREF,$QLENGTH(TMGREF))
"RTN","TMGRPC3G",477,0)
        IF RESULT'>0 DO  GOTO RPDN
"RTN","TMGRPC3G",478,0)
        . SET RESULT="-1^Failed to open report file: "_PATH_FNAME
"RTN","TMGRPC3G",479,0)
        NEW TMGDEL SET TMGDEL(FNAME)=""
"RTN","TMGRPC3G",480,0)
        SET RESULT=$$DEL^%ZISH(PATH,"TMGDEL")
"RTN","TMGRPC3G",481,0)
        IF RESULT'>0 DO  GOTO RPDN
"RTN","TMGRPC3G",482,0)
        . SET RESULT="-1^Report succeded, but failed to delete report file: "_PATH_FNAME
"RTN","TMGRPC3G",483,0)
        SET RESULT="1^Success"
"RTN","TMGRPC3G",484,0)
T1RMDN  QUIT RESULT        
"RTN","TMGRPC3G",485,0)
        ;
"RTN","TMGRPC3G",486,0)
FIND1(TMGRESULT,TMGPARAMS) ;"WRAPPER FOR $$FIND1^DIC
"RTN","TMGRPC3G",487,0)
        ;"Purpose: HANDLE RPC CHANNEL REQUEST FOR: FIND ONE RECORD
"RTN","TMGRPC3G",488,0)
        ;"Input:  TMGRESULT -- The result parameter
"RTN","TMGRPC3G",489,0)
        ;"        PARAMS -- File^IENS^Value^Flags^Indexes^Screen        
"RTN","TMGRPC3G",490,0)
        ;"                   See Fileman reference for details of input values.
"RTN","TMGRPC3G",491,0)
        ;"                   Note: Indexes should be delimited with ";", not "^" -- e.g. B;C;D 
"RTN","TMGRPC3G",492,0)
        ;"                         Screen code can not contain "^"
"RTN","TMGRPC3G",493,0)
        ;"Result: 1^FoundRecordIEN IF success, OR -1^Message IF error
"RTN","TMGRPC3G",494,0)
        NEW TMGFILE,TMGIENS,TMGVALUE,TMGFLAGS,TMGINDEXES,TMGSCREEN
"RTN","TMGRPC3G",495,0)
        SET TMGFILE=$PIECE(TMGPARAMS,"^",1)
"RTN","TMGRPC3G",496,0)
        SET TMGIENS=$PIECE(TMGPARAMS,"^",2)
"RTN","TMGRPC3G",497,0)
        SET TMGVALUE=$PIECE(TMGPARAMS,"^",3)
"RTN","TMGRPC3G",498,0)
        SET TMGFLAGS=$PIECE(TMGPARAMS,"^",4)
"RTN","TMGRPC3G",499,0)
        SET TMGINDEXES=$PIECE(TMGPARAMS,"^",5)
"RTN","TMGRPC3G",500,0)
        SET TMGINDEXES=$TRANSLATE(TMGINDEXES,";","^")
"RTN","TMGRPC3G",501,0)
        SET TMGSCREEN=$PIECE(TMGPARAMS,"^",6)
"RTN","TMGRPC3G",502,0)
        NEW FOUNDIEN,TMGMSG
"RTN","TMGRPC3G",503,0)
        SET FOUNDIEN=$$FIND1^DIC(TMGFILE,TMGIENS,TMGFLAGS,TMGVALUE,TMGINDEXES,TMGSCREEN,"TMGMSG")
"RTN","TMGRPC3G",504,0)
        IF $DATA(TMGMSG("DIERR")) DO  GOTO F1DN
"RTN","TMGRPC3G",505,0)
        . SET TMGRESULT(0)="-1^"_$$GETERSTR(.TMGMSG)
"RTN","TMGRPC3G",506,0)
        SET TMGRESULT(0)="1^"_FOUNDIEN
"RTN","TMGRPC3G",507,0)
F1DN    QUIT
"RTN","TMGRPC3G",508,0)
        ;
"RTN","TMGRPC3G",509,0)
FIND(TMGRESULT,TMGPARAMS) ;"WRAPPER FOR FIND^DIC
"RTN","TMGRPC3G",510,0)
        ;"Purpose: HANDLE RPC CHANNEL REQUEST FOR: FIND RECORDS
"RTN","TMGRPC3G",511,0)
        ;"Input:  TMGRESULT -- The result parameter
"RTN","TMGRPC3G",512,0)
        ;"        PARAMS -- File^IENS^Value^Fields^Flags^Number^Indexes^Screen^Identifier        
"RTN","TMGRPC3G",513,0)
        ;"                   See Fileman reference for details of input values.
"RTN","TMGRPC3G",514,0)
        ;"                   Note: Indexes should be delimited with ";", not "^" -- e.g. B;C;D 
"RTN","TMGRPC3G",515,0)
        ;"                         Screen code can not contain "^"
"RTN","TMGRPC3G",516,0)
        ;"Result: 1^FoundRecordIEN IF success, OR -1^Message IF error
"RTN","TMGRPC3G",517,0)
        NEW TMGFILE,TMGIENS,TMGVALUE,TMGFIELDS,TMGFLAGS
"RTN","TMGRPC3G",518,0)
        NEW TMGNUMBER,TMGINDEXES,TMGSCREEN,TMGIDENTIFIER
"RTN","TMGRPC3G",519,0)
        SET TMGFILE=$PIECE(TMGPARAMS,"^",1)
"RTN","TMGRPC3G",520,0)
        SET TMGIENS=$PIECE(TMGPARAMS,"^",2)
"RTN","TMGRPC3G",521,0)
        SET TMGVALUE=$PIECE(TMGPARAMS,"^",3)
"RTN","TMGRPC3G",522,0)
        SET TMGFIELDS=$PIECE(TMGPARAMS,"^",4)
"RTN","TMGRPC3G",523,0)
        SET TMGFLAGS=$PIECE(TMGPARAMS,"^",5)
"RTN","TMGRPC3G",524,0)
        SET TMGNUMBER=$PIECE(TMGPARAMS,"^",6)
"RTN","TMGRPC3G",525,0)
        SET TMGINDEXES=$PIECE(TMGPARAMS,"^",7)
"RTN","TMGRPC3G",526,0)
        SET TMGINDEXES=$TRANSLATE(TMGINDEXES,";","^")
"RTN","TMGRPC3G",527,0)
        SET TMGSCREEN=$PIECE(TMGPARAMS,"^",8)
"RTN","TMGRPC3G",528,0)
        SET TMGIDENTIFIER=$PIECE(TMGPARAMS,"^",9)
"RTN","TMGRPC3G",529,0)
        NEW TMGOUT,TMGMSG
"RTN","TMGRPC3G",530,0)
        DO FIND^DIC(TMGFILE,TMGIENS,TMGFIELDS,TMGFLAGS,TMGVALUE,TMGNUMBER,TMGINDEXES,TMGSCREEN,TMGIDENTIFIER,"TMGOUT","TMGMSG")
"RTN","TMGRPC3G",531,0)
        IF $DATA(TMGMSG("DIERR")) DO  GOTO FNDDN
"RTN","TMGRPC3G",532,0)
        . SET TMGRESULT(0)="-1^"_$$GETERSTR(.TMGMSG)
"RTN","TMGRPC3G",533,0)
        SET TMGRESULT(0)="1^Success"
"RTN","TMGRPC3G",534,0)
        NEW SRCH MERGE SRCH=TMGOUT("DILIST")
"RTN","TMGRPC3G",535,0)
        DO ZWR2ARR^TMGZWR("SRCH","TMGRESULT")
"RTN","TMGRPC3G",536,0)
FNDDN   QUIT                
"RTN","TMGRPC3G",537,0)
        ;
"RTN","TMGRPC3G",538,0)
DOCPYRMD(TMGRESULT,TMGPARAMS) ;
"RTN","TMGRPC3G",539,0)
        ;"Purpose: HANDLE RPC CHANNEL REQUEST FOR: COPY REMINDER DIALOG
"RTN","TMGRPC3G",540,0)
        ;"Input:  TMGRESULT -- The result parameter
"RTN","TMGRPC3G",541,0)
        ;"        PARAMS -- IEN^Namespace^AcceptList
"RTN","TMGRPC3G",542,0)
        ;"              IEN - IEN in REMINDER DIALOG (801.41) file.
"RTN","TMGRPC3G",543,0)
        ;"              NAMESPACE -- See CPYRMDLG for examples.
"RTN","TMGRPC3G",544,0)
        ;"              SponsorIEN -- IEN in SPONSOR file.
"RTN","TMGRPC3G",545,0)
        ;"              AcceptList -- semicolon delimited.  See CPYRMDLG for meaning
"RTN","TMGRPC3G",546,0)
        ;"                  e.g. DG PH;ED;VA-HDL
"RTN","TMGRPC3G",547,0)
        ;"Output: TMGRESULT(0)=1^Success^IENOfNewDialogTreeRoot^NewName IF success, OR -1^Message IF error
"RTN","TMGRPC3G",548,0)
        ;"Result : none.
"RTN","TMGRPC3G",549,0)
        NEW IEN SET IEN=$PIECE(TMGPARAMS,"^",1)
"RTN","TMGRPC3G",550,0)
        NEW NS SET NS=$PIECE(TMGPARAMS,"^",2)
"RTN","TMGRPC3G",551,0)
        NEW SPONIEN SET SPONIEN=$PIECE(TMGPARAMS,"^",3)
"RTN","TMGRPC3G",552,0)
        NEW TEMP SET TEMP=$PIECE(TMGPARAMS,"^",4)
"RTN","TMGRPC3G",553,0)
        NEW ACCEPT,IDX,DONELIST
"RTN","TMGRPC3G",554,0)
        FOR IDX=0:1:$LENGTH(TEMP,";") DO
"RTN","TMGRPC3G",555,0)
        . NEW ONE SET ONE=$PIECE(TEMP,";",IDX) QUIT:ONE=""
"RTN","TMGRPC3G",556,0)
        . SET ACCEPT(ONE)=""
"RTN","TMGRPC3G",557,0)
        SET TEMP=$$CPYRMDLG(IEN,NS,SPONIEN,.ACCEPT,.DONELIST)
"RTN","TMGRPC3G",558,0)
        IF +TEMP=-1 SET TMGRESULT(0)=TEMP
"RTN","TMGRPC3G",559,0)
        ELSE  SET TMGRESULT(0)="1^Success^"_TEMP
"RTN","TMGRPC3G",560,0)
        QUIT
"RTN","TMGRPC3G",561,0)
        ;
"RTN","TMGRPC3G",562,0)
CPYRMDLG(SOURCEIEN,NAMESPACE,SPONIEN,ACCEPT,DONELIST) ;"COPY REMINDER DIALOG
"RTN","TMGRPC3G",563,0)
        ;"Purpose: To copy a reminder dialog tree (including all descendents)
"RTN","TMGRPC3G",564,0)
        ;"         into NEW namespace, with LOCAL status.
"RTN","TMGRPC3G",565,0)
        ;"Input: SOURCEIEN -- IEN in REMINDER DIALOG (801.41) file.
"RTN","TMGRPC3G",566,0)
        ;"       NAMESPACE -- The NEW namespace to put records into.  Should be 2-4 chars
"RTN","TMGRPC3G",567,0)
        ;"         NAMESPACE is prefixed to .01 field (name).  E.g. IF NAMESPACE="ZZ", and
"RTN","TMGRPC3G",568,0)
        ;"         prior name was "VA-HTN", then NEW name will be "ZZ-VA-HTN"
"RTN","TMGRPC3G",569,0)
        ;"       SPONIEN -- IEN IN SPONSOR file.
"RTN","TMGRPC3G",570,0)
        ;"       ACCEPT.  PASS BY REFERENCE.  List of component names spaces to accept
"RTN","TMGRPC3G",571,0)
        ;"          If Reminder dialog subcomponents were to refer to a standard
"RTN","TMGRPC3G",572,0)
        ;"          library, and when copying a parent, these library items should
"RTN","TMGRPC3G",573,0)
        ;"          not also be copied, then these items should be noted in the
"RTN","TMGRPC3G",574,0)
        ;"          ACCEPT array.  E.g.
"RTN","TMGRPC3G",575,0)
        ;"              ACCEPT("DG PH")="" <-- will cause all subcomponents with
"RTN","TMGRPC3G",576,0)
        ;"                                     names starting with "DG PH" to not be copied
"RTN","TMGRPC3G",577,0)
        ;"              ACCEPT("ED") <-- all with name starting with "ED" not copied.
"RTN","TMGRPC3G",578,0)
        ;"       DONELIST -- PASS BY REFERENCE.  A list of records that have 
"RTN","TMGRPC3G",579,0)
        ;"          already been copied, to prevent recursive endless loops. 
"RTN","TMGRPC3G",580,0)
        ;"          Format: DONELIST(SOURCEIEN)=1  <-- means already copied.
"RTN","TMGRPC3G",581,0)
        ;"Output: NEW records are added to file 801.41, copies of specified tree
"RTN","TMGRPC3G",582,0)
        ;"Result: IENOfNewDialogTreeRoot^NewItemName, 
"RTN","TMGRPC3G",583,0)
        ;"         or -1^Message IF error. or "0^Already done" IF already copied
"RTN","TMGRPC3G",584,0)
        NEW TMGRESULT SET TMGRESULT=1
"RTN","TMGRPC3G",585,0)
        SET NAMESPACE=$GET(NAMESPACE)
"RTN","TMGRPC3G",586,0)
        NEW L SET L=$LENGTH(NAMESPACE)
"RTN","TMGRPC3G",587,0)
        IF (NAMESPACE="")!(L<2)!(L>4) DO  GOTO CRDDN
"RTN","TMGRPC3G",588,0)
        . SET TMGRESULT="-1^Invalid Namespace parameter.  Got ["_NAMESPACE_"]"
"RTN","TMGRPC3G",589,0)
        NEW IEN SET IEN=+$GET(SOURCEIEN)
"RTN","TMGRPC3G",590,0)
        IF IEN'>0 DO  GOTO CRDDN
"RTN","TMGRPC3G",591,0)
        . SET TMGRESULT="-1^Invalid IEN.  Got ["_SOURCEIEN_"]"
"RTN","TMGRPC3G",592,0)
        IF $GET(DONELIST(IEN))=1 DO  GOTO CRDDN
"RTN","TMGRPC3G",593,0)
        . SET TMGRESULT="0^Already done"
"RTN","TMGRPC3G",594,0)
        NEW OLDNAME SET OLDNAME=$PIECE($GET(^PXRMD(801.41,IEN,0)),"^",1)
"RTN","TMGRPC3G",595,0)
        IF OLDNAME="" DO  GOTO CRDDN
"RTN","TMGRPC3G",596,0)
        . SET TMGRESULT="-1^Source IEN record doesn't exist."
"RTN","TMGRPC3G",597,0)
        NEW NEWIEN SET NEWIEN="ADD,"  ;"Will be changed to true NEW IEN
"RTN","TMGRPC3G",598,0)
        NEW TMGMSG
"RTN","TMGRPC3G",599,0)
        DO TRNMRGEX("A",801.41,801.41,IEN,.NEWIEN,"TMGMSG")  ;"Copy source record to new
"RTN","TMGRPC3G",600,0)
        IF $DATA(TMGMSG("DIERR")) DO  GOTO CRDDN
"RTN","TMGRPC3G",601,0)
        . SET TMGRESULT="-1^"_$$GETERSTR(.TMGMSG)
"RTN","TMGRPC3G",602,0)
        IF +NEWIEN'>0 DO  GOTO CRDDN
"RTN","TMGRPC3G",603,0)
        . SET TMGRESULT="-1^Unable to get IEN of newly added record"
"RTN","TMGRPC3G",604,0)
        NEW NEWNAME,NAMEOK,INSTANCECOUNT SET (NAMEOK,INSTANCECOUNT)=0
"RTN","TMGRPC3G",605,0)
        FOR  DO  QUIT:NAMEOK  ;"Setup NEW name, ensure unique and length OK
"RTN","TMGRPC3G",606,0)
        . SET NEWNAME=NAMESPACE_"-"_OLDNAME
"RTN","TMGRPC3G",607,0)
        . IF INSTANCECOUNT>0 SET NEWNAME=NEWNAME_INSTANCECOUNT
"RTN","TMGRPC3G",608,0)
        . IF $LENGTH(NEWNAME)>64 DO  QUIT
"RTN","TMGRPC3G",609,0)
        . . SET OLDNAME=$EXTRACT(OLDNAME,1,$LENGTH(OLDNAME)-1)
"RTN","TMGRPC3G",610,0)
        . NEW X,Y,DIC SET DIC=801.41,DIC(0)="MX",X=NEWNAME
"RTN","TMGRPC3G",611,0)
        . DO ^DIC  ;"Check IF NEWNAME has already been used.
"RTN","TMGRPC3G",612,0)
        . IF +Y>0 SET INSTANCECOUNT=INSTANCECOUNT+1 QUIT
"RTN","TMGRPC3G",613,0)
        . SET NAMEOK=1
"RTN","TMGRPC3G",614,0)
        NEW TMGFDA KILL TMGMSG        
"RTN","TMGRPC3G",615,0)
        SET TMGFDA(801.41,NEWIEN,.01)=NEWNAME
"RTN","TMGRPC3G",616,0)
        SET TMGFDA(801.41,NEWIEN,100)="LOCAL"
"RTN","TMGRPC3G",617,0)
        IF SPONIEN'="" SET TMGFDA(801.41,NEWIEN,101)="`"_SPONIEN
"RTN","TMGRPC3G",618,0)
        DO FILE^DIE("ET","TMGFDA","TMGMSG")  ;"Rename NEW record and SET to LOCAL
"RTN","TMGRPC3G",619,0)
        IF $DATA(TMGMSG("DIERR")) DO  GOTO CRDDN
"RTN","TMGRPC3G",620,0)
        . SET TMGRESULT="-1^"_$$GETERSTR(.TMGMSG)
"RTN","TMGRPC3G",621,0)
        SET DONELIST(IEN)=1  ;"Remember that record successfully copied. 
"RTN","TMGRPC3G",622,0)
        ;"Next copy all components of NEW dialog, and put them into namespace too.
"RTN","TMGRPC3G",623,0)
        NEW SUBIEN SET SUBIEN=0
"RTN","TMGRPC3G",624,0)
        FOR  SET SUBIEN=$ORDER(^PXRMD(801.41,+NEWIEN,10,SUBIEN)) QUIT:(+SUBIEN'>0)!(+TMGRESULT=-1)  DO
"RTN","TMGRPC3G",625,0)
        . NEW SUBPTR SET SUBPTR=$PIECE($GET(^PXRMD(801.41,+NEWIEN,10,SUBIEN,0)),"^",2)
"RTN","TMGRPC3G",626,0)
        . IF $$SHDACEPT(SUBPTR,.ACCEPT) QUIT
"RTN","TMGRPC3G",627,0)
        . NEW NEWSUBPTR SET NEWSUBPTR=$$CPYRMDLG(SUBPTR,NAMESPACE,SPONIEN,.ACCEPT,.DONELIST) ;"Recursive COPY REMINDER DIALOG ELEMENT
"RTN","TMGRPC3G",628,0)
        . IF +NEWSUBPTR'>0 SET TMGRESULT=NEWSUBPTR QUIT
"RTN","TMGRPC3G",629,0)
        . KILL TMGFDA,TMGMSG
"RTN","TMGRPC3G",630,0)
        . NEW IENS SET IENS=SUBIEN_","_+NEWIEN_","
"RTN","TMGRPC3G",631,0)
        . SET TMGFDA(801.412,IENS,2)="`"_+NEWSUBPTR
"RTN","TMGRPC3G",632,0)
        . DO FILE^DIE("E","TMGFDA","TMGMSG")  ;"Point subrecord to newly copied record
"RTN","TMGRPC3G",633,0)
        . IF $DATA(TMGMSG("DIERR")) DO  QUIT
"RTN","TMGRPC3G",634,0)
        . . SET TMGRESULT="-1^"_$$GETERSTR(.TMGMSG)        
"RTN","TMGRPC3G",635,0)
        IF +TMGRESULT=-1 GOTO CRDDN
"RTN","TMGRPC3G",636,0)
        SET TMGRESULT=+NEWIEN_"^"_NEWNAME                
"RTN","TMGRPC3G",637,0)
CRDDN   QUIT TMGRESULT     
"RTN","TMGRPC3G",638,0)
        ;
"RTN","TMGRPC3G",639,0)
SHDACEPT(IEN,ACCEPT) ;"SHOULD ACCEPT (i.e. not copy).   See CPYRMDLG for discussion of ACCEPT array
"RTN","TMGRPC3G",640,0)
        NEW TMGRESULT SET TMGRESULT=0
"RTN","TMGRPC3G",641,0)
        SET IEN=$GET(IEN) IF IEN'>0 GOTO SADN
"RTN","TMGRPC3G",642,0)
        NEW NAME SET NAME=$PIECE($GET(^PXRMD(801.41,IEN,0)),"^",1)
"RTN","TMGRPC3G",643,0)
        NEW ONE SET ONE=""
"RTN","TMGRPC3G",644,0)
        FOR  SET ONE=$ORDER(ACCEPT(ONE)) QUIT:(ONE="")!(TMGRESULT=1)  DO
"RTN","TMGRPC3G",645,0)
        . IF $EXTRACT(NAME,1,$LENGTH(ONE))=ONE SET TMGRESULT=1 QUIT
"RTN","TMGRPC3G",646,0)
SADN    QUIT TMGRESULT
"RTN","TMGRPC3G",647,0)
        ;
"RTN","TMGRPC3G",648,0)
TRNMRGEX(DIFLG,DIFFNO,DITFNO,DIFIEN,DITIEN,DIERRROOT)        ;"//kt added
"RTN","TMGRPC3G",649,0)
        ;"//NOTE: This is a wrapper for Fileman functionality.  A formal API for
"RTN","TMGRPC3G",650,0)
        ;"        future version of Fileman has proposed.  If approved, then change
"RTN","TMGRPC3G",651,0)
        ;"        call to use that functionality.  
"RTN","TMGRPC3G",652,0)
        ;"Purpose: Extended SILENT TRANSFER/MERGE OF SINGLE RECORDS IN FILE OR SUBFILE
"RTN","TMGRPC3G",653,0)
        ;"See TMGDIT for documentation of parameters. 
"RTN","TMGRPC3G",654,0)
        SET DITIEN=$G(DITIEN)
"RTN","TMGRPC3G",655,0)
        IF DITIEN,$E(DITIEN)="+" SET DITIEN="ADD"_$P(DITIEN,"+",2,999) ;"+1," --> "ADD1,"
"RTN","TMGRPC3G",656,0)
        IF DIFIEN'["," SET DIFIEN=DIFIEN_","
"RTN","TMGRPC3G",657,0)
        IF DITIEN'["," SET DITIEN=DITIEN_","
"RTN","TMGRPC3G",658,0)
        KILL ^TMP("DIERR",$J)            
"RTN","TMGRPC3G",659,0)
        DO TRNMRG^DIT3  ;"modifies DITIEN IF successful
"RTN","TMGRPC3G",660,0)
        IF $G(DIERRROOT)'="" M @DIERRROOT@("DIERR")=^TMP("DIERR",$J) K ^TMP("DIERR",$J)
"RTN","TMGRPC3G",661,0)
        IF DIFLG'["X" DO
"RTN","TMGRPC3G",662,0)
        . NEW DA,IDX,J,DIK,DIERR
"RTN","TMGRPC3G",663,0)
        . FOR IDX=1:1 SET J=$P(DITIEN,",",IDX) QUIT:'J  DO
"RTN","TMGRPC3G",664,0)
        . . SET:IDX=1 DA=J 
"RTN","TMGRPC3G",665,0)
        . . IF IDX>1 SET DA(IDX-1)=J
"RTN","TMGRPC3G",666,0)
        . SET DIK=$$ROOT^DIQGU(DITFNO,DITIEN,"",1) Q:$D(DIERR)        
"RTN","TMGRPC3G",667,0)
        . DO IX1^DIK ;"Just SET logic for 1 entry. 
"RTN","TMGRPC3G",668,0)
        QUIT
"RTN","TMGRPC3G",669,0)
        ;
"RTN","TMGRPC3G",670,0)
GETCHLST(TMGRESULT,TMGPARAMS) ;"GET CHILD LIST
"RTN","TMGRPC3G",671,0)
        ;"Purpose: HANDLE RPC CHANNEL REQUEST FOR: GET REMINDER DIALOG CHILDREN
"RTN","TMGRPC3G",672,0)
        ;"Input:  TMGRESULT -- The result parameter
"RTN","TMGRPC3G",673,0)
        ;"        PARAMS -- IEN^
"RTN","TMGRPC3G",674,0)
        ;"              IEN - IEN in REMINDER DIALOG (801.41) file.
"RTN","TMGRPC3G",675,0)
        ;"Output: TMGRESULT(0)=1^Success or -1^Message
"RTN","TMGRPC3G",676,0)
        NEW IEN SET IEN=$PIECE(TMGPARAMS,"^",1)
"RTN","TMGRPC3G",677,0)
        SET IEN=$GET(IEN) IF +IEN'>0 DO  GOTO GCHLDN
"RTN","TMGRPC3G",678,0)
        . SET TMGRESULT(0)="-1^Invalid IEN. Got ["_IEN_"]"
"RTN","TMGRPC3G",679,0)
        NEW ARRAY DO CHILDLST(+IEN,.ARRAY)
"RTN","TMGRPC3G",680,0)
        NEW ONE SET ONE=""
"RTN","TMGRPC3G",681,0)
        NEW IDX SET IDX=0
"RTN","TMGRPC3G",682,0)
        FOR  SET ONE=$ORDER(ARRAY(ONE)) QUIT:(ONE="")  DO
"RTN","TMGRPC3G",683,0)
        . SET IDX=IDX+1,TMGRESULT(IDX)=ONE
"RTN","TMGRPC3G",684,0)
        SET TMGRESULT(0)="1^Success"
"RTN","TMGRPC3G",685,0)
GCHLDN  QUIT                
"RTN","TMGRPC3G",686,0)
        ;
"RTN","TMGRPC3G",687,0)
CHILDLST(IEN,ARRAY)  ;"GET LIST OF CHILD ELEMENTS        
"RTN","TMGRPC3G",688,0)
        ;"Purpose: Compile list of child (and grandchildren etc) elements
"RTN","TMGRPC3G",689,0)
        ;"Input: IEN -- IEN in REMINDER DIALOG (801.41) file.
"RTN","TMGRPC3G",690,0)
        ;"       ARRAY -- PASS BY REFERENCE.  An OUT parameter
"RTN","TMGRPC3G",691,0)
        ;"Result: none.
"RTN","TMGRPC3G",692,0)
        SET IEN=+$GET(IEN) IF IEN'>0 GOTO CLDN
"RTN","TMGRPC3G",693,0)
        NEW SUBIEN SET SUBIEN=0
"RTN","TMGRPC3G",694,0)
        FOR  SET SUBIEN=$ORDER(^PXRMD(801.41,IEN,10,SUBIEN)) QUIT:(+SUBIEN'>0)  DO
"RTN","TMGRPC3G",695,0)
        . NEW PTR SET PTR=+$PIECE($GET(^PXRMD(801.41,IEN,10,SUBIEN,0)),"^",2) QUIT:PTR'>0
"RTN","TMGRPC3G",696,0)
        . NEW NAME SET NAME=$PIECE($GET(^PXRMD(801.41,PTR,0)),"^",1) QUIT:NAME=""
"RTN","TMGRPC3G",697,0)
        . SET ARRAY(NAME)=""
"RTN","TMGRPC3G",698,0)
        . DO CHILDLST(PTR,.ARRAY)
"RTN","TMGRPC3G",699,0)
CLDN    QUIT        
"RTN","TMGRPC3G",700,0)
        ;
"RTN","TMGRPC3G",701,0)
GETFFNSG(TMGRESULT,NAME)  ;"GET FUNC FINDING ARG SIGNATURE
"RTN","TMGRPC3G",702,0)
        ;"Purpose:  HANDLE RPC CHANNEL REQUEST FOR: GET FUNC FINDING ARG SIGNATURE
"RTN","TMGRPC3G",703,0)
        ;"Input:  TMGRESULT -- The result parameter
"RTN","TMGRPC3G",704,0)
        ;"        NAME -- Name of function (.01 value for record in 802.4)
"RTN","TMGRPC3G",705,0)
        ;"Output: TMGRESULT(0)=1^Success or -1^Message
"RTN","TMGRPC3G",706,0)
        ;"        TMGRESULT(1)=<result>
"RTN","TMGRPC3G",707,0)
        ;"<result> format:  X^X^X^X^X^....
"RTN","TMGRPC3G",708,0)
        ;"          <X> is one of following codes: F=FINDING, N=NUMBER, S=STRING
"RTN","TMGRPC3G",709,0)
        ;"          Piece position of code matches argument position.
"RTN","TMGRPC3G",710,0)
        ;"          e.g. F^N^S  means 1st param is function, 2nd is number, 3rd is string.
"RTN","TMGRPC3G",711,0)
        ;"NOTE: IF NAME is not found, then "" is returned.
"RTN","TMGRPC3G",712,0)
        ;"Result : none.
"RTN","TMGRPC3G",713,0)
        SET TMGRESULT(0)="1^Success",TMGRESULT(1)=""
"RTN","TMGRPC3G",714,0)
        IF +$ORDER(^PXRMD(802.4,"B",NAME,0))'>0 GOTO GFFNSDN 
"RTN","TMGRPC3G",715,0)
        NEW AN,CODE SET CODE=""
"RTN","TMGRPC3G",716,0)
        FOR AN=1:1:100 DO  QUIT:CODE="U"
"RTN","TMGRPC3G",717,0)
        . SET CODE=$$ARGTYPE^PXRMFFAT(NAME,AN)
"RTN","TMGRPC3G",718,0)
        . IF (CODE="")!("FNS"'[CODE) SET CODE="U" QUIT
"RTN","TMGRPC3G",719,0)
        . SET TMGRESULT(1)=TMGRESULT(1)_CODE_"^"        
"RTN","TMGRPC3G",720,0)
GFFNSDN QUIT        
"RTN","TMGRPC3G",721,0)
        
"RTN","TMGRPC3H")
0^8^B41138984
"RTN","TMGRPC3H",1,0)
TMGRPC3H ;TMG/kst/Support Functions for GUI_Config ;12/1/10, 2/2/14
"RTN","TMGRPC3H",2,0)
         ;;1.0;TMG-LIB;**1**;12/1/10;Build 9
"RTN","TMGRPC3H",3,0)
 ;
"RTN","TMGRPC3H",4,0)
 ;"TMG RPC FUNCTIONS for a FM DESKTOP program
"RTN","TMGRPC3H",5,0)
 ;
"RTN","TMGRPC3H",6,0)
 ;"Kevin Toppenberg MD
"RTN","TMGRPC3H",7,0)
 ;"GNU Lessor General Public License (LGPL) applies
"RTN","TMGRPC3H",8,0)
 ;"12/1/10
"RTN","TMGRPC3H",9,0)
 ;
"RTN","TMGRPC3H",10,0)
 ;"=======================================================================
"RTN","TMGRPC3H",11,0)
 ;" RPC -- Public Functions.
"RTN","TMGRPC3H",12,0)
 ;"=======================================================================
"RTN","TMGRPC3H",13,0)
 ;" <none>
"RTN","TMGRPC3H",14,0)
 ;"=======================================================================
"RTN","TMGRPC3H",15,0)
 ;"PRIVATE API FUNCTIONS
"RTN","TMGRPC3H",16,0)
 ;"=======================================================================
"RTN","TMGRPC3H",17,0)
 ;
"RTN","TMGRPC3H",18,0)
 ;"=======================================================================
"RTN","TMGRPC3H",19,0)
 ;"=======================================================================
"RTN","TMGRPC3H",20,0)
 ;"Dependencies:
"RTN","TMGRPC3H",21,0)
 ;"  TMGRPC3* only
"RTN","TMGRPC3H",22,0)
 ;
"RTN","TMGRPC3H",23,0)
 ;"=======================================================================
"RTN","TMGRPC3H",24,0)
 ;"=======================================================================
"RTN","TMGRPC3H",25,0)
 ;
"RTN","TMGRPC3H",26,0)
GETFMDSV(TMGOUT,TMGPARAMS) ;
"RTN","TMGRPC3H",27,0)
        ;"Purpose: Get a list of saved data views.  Those for user, and those shared by others
"RTN","TMGRPC3H",28,0)
        ;"Input: TMGOUT -- an OUT PARAMETER, PASS BY REFERENCE.
"RTN","TMGRPC3H",29,0)
        ;"       TMGPARAMS -- not used
"RTN","TMGRPC3H",30,0)
        ;"Output: TMGOUT is filled as follows:
"RTN","TMGRPC3H",31,0)
        ;"            TMGOUT(0)="1^Success" or "-1^Error Message"
"RTN","TMGRPC3H",32,0)
        ;"            TMGOUT(1)=SELF or OTHERS^Shared(Y/N)^Name^Owner^DateCreated^IEN in 22714
"RTN","TMGRPC3H",33,0)
        ;"            TMGOUT(2)=SELF or OTHERS^Shared(Y/N)^Name^Owner^DateCreated^IEN in 22714  ... etc
"RTN","TMGRPC3H",34,0)
        ;"              Shared:  1 (if shared), or 0 IF owned by user
"RTN","TMGRPC3H",35,0)
        ;"              Name:  Name of data view
"RTN","TMGRPC3H",36,0)
        ;"              Owner: external format name of owner
"RTN","TMGRPC3H",37,0)
        ;"              Date: external format of date of creation of view
"RTN","TMGRPC3H",38,0)
        ;"Results: none
"RTN","TMGRPC3H",39,0)
        NEW SELF,OTHERS,CT
"RTN","TMGRPC3H",40,0)
        NEW TMGI SET TMGI=0
"RTN","TMGRPC3H",41,0)
        FOR  SET TMGI=$ORDER(^TMG(22714,"C",+DUZ,TMGI)) QUIT:(+TMGI'>0)  DO
"RTN","TMGRPC3H",42,0)
        . SET SELF(TMGI)=""
"RTN","TMGRPC3H",43,0)
        SET TMGI=0
"RTN","TMGRPC3H",44,0)
        FOR  SET TMGI=$ORDER(^TMG(22714,"AC","Y",TMGI)) QUIT:(+TMGI'>0)  DO
"RTN","TMGRPC3H",45,0)
        . IF $DATA(SELF(TMGI)) QUIT
"RTN","TMGRPC3H",46,0)
        . SET OTHERS(TMGI)=""
"RTN","TMGRPC3H",47,0)
        SET TMGI=0
"RTN","TMGRPC3H",48,0)
        SET CT=1
"RTN","TMGRPC3H",49,0)
        FOR  SET TMGI=$ORDER(SELF(TMGI)) QUIT:(+TMGI'>0)  DO
"RTN","TMGRPC3H",50,0)
        . SET TMGOUT(CT)="SELF^"_$$STROUT(TMGI)
"RTN","TMGRPC3H",51,0)
        . SET CT=CT+1
"RTN","TMGRPC3H",52,0)
        SET TMGI=0
"RTN","TMGRPC3H",53,0)
        FOR  SET TMGI=$ORDER(OTHERS(TMGI)) QUIT:(+TMGI'>0)  DO
"RTN","TMGRPC3H",54,0)
        . SET TMGOUT(CT)="OTHERS^"_$$STROUT(TMGI)
"RTN","TMGRPC3H",55,0)
        . SET CT=CT+1
"RTN","TMGRPC3H",56,0)
        IF CT>1 SET TMGOUT(0)="1^Success"
"RTN","TMGRPC3H",57,0)
        ELSE  SET TMGOUT(0)="0^No entries found"
"RTN","TMGRPC3H",58,0)
        QUIT
"RTN","TMGRPC3H",59,0)
        ;
"RTN","TMGRPC3H",60,0)
STROUT(IEN) ; Utility function for GETFMDSV
"RTN","TMGRPC3H",61,0)
        NEW S
"RTN","TMGRPC3H",62,0)
        NEW ZN SET ZN=$GET(^TMG(22714,IEN,0))
"RTN","TMGRPC3H",63,0)
        SET S=$PIECE(ZN,"^",3)_"^"                    ;"Shared
"RTN","TMGRPC3H",64,0)
        SET S=S_$PIECE(ZN,"^",1)_"^"                  ;"Name
"RTN","TMGRPC3H",65,0)
        NEW P SET P=+$PIECE(ZN,"^",2)                 ;"Ptr to owner
"RTN","TMGRPC3H",66,0)
        SET S=S_$PIECE($GET(^VA(200,P,0)),"^",1)_"^"  ;"Name of owner
"RTN","TMGRPC3H",67,0)
        NEW Y SET Y=$PIECE(ZN,"^",4)                  ;"Date, internal format
"RTN","TMGRPC3H",68,0)
        DO DD^%DT                                     ;"convert to external
"RTN","TMGRPC3H",69,0)
        SET S=S_Y_"^"_IEN
"RTN","TMGRPC3H",70,0)
        QUIT S
"RTN","TMGRPC3H",71,0)
        ;
"RTN","TMGRPC3H",72,0)
        ;
"RTN","TMGRPC3H",73,0)
SAVFMDV(TMGRESULT,TMGPARAMS,INPUT) ;
"RTN","TMGRPC3H",74,0)
        ;"Purpose: To save (or edit existing) FILEMAN DESKTOP View
"RTN","TMGRPC3H",75,0)
        ;"Input: TMGOUT -- an OUT PARAMETER, PASS BY REFERENCE.
"RTN","TMGRPC3H",76,0)
        ;"       TMGPARAMS -- IEN^Name^Shared  or +1^Name^Shared (for a NEW entry)
"RTN","TMGRPC3H",77,0)
        ;"       INPUT -- PASS BY REFERENCE.  Stores WP data for 2 WP fields.
"RTN","TMGRPC3H",78,0)
        ;"                   The lines will be sent contigously, but the two fields will
"RTN","TMGRPC3H",79,0)
        ;"                   be separated by a specific tag, as below.
"RTN","TMGRPC3H",80,0)
        ;"                   WP lines stored as follows:
"RTN","TMGRPC3H",81,0)
        ;"                   INPUT(0)=1st line of Description
"RTN","TMGRPC3H",82,0)
        ;"                   INPUT(1)=2nd line of Description
"RTN","TMGRPC3H",83,0)
        ;"                   INPUT(2)=3rd line of Description
"RTN","TMGRPC3H",84,0)
        ;"                   ...
"RTN","TMGRPC3H",85,0)
        ;"                   INPUT(17)="{{START OF DATA}}"  <-- tag must match exactly
"RTN","TMGRPC3H",86,0)
        ;"                   INPUT(18)=1st line of Data
"RTN","TMGRPC3H",87,0)
        ;"                   INPUT(29)=2nd line of Data
"RTN","TMGRPC3H",88,0)
        ;"                   ...
"RTN","TMGRPC3H",89,0)
        ;"                   Note: IF Description or Data is not provided when sending
"RTN","TMGRPC3H",90,0)
        ;"                         data for an existing IEN, then prior results will
"RTN","TMGRPC3H",91,0)
        ;"                         be deleted.
"RTN","TMGRPC3H",92,0)
        ;"Output: TMGOUT is filled as follows:
"RTN","TMGRPC3H",93,0)
        ;"          TMGOUT(0)="1^Success" or "-1^Message"
"RTN","TMGRPC3H",94,0)
        ;"Results: none
"RTN","TMGRPC3H",95,0)
        NEW temp
"RTN","TMGRPC3H",96,0)
        SET temp=0
"RTN","TMGRPC3H",97,0)
        IF temp=1 do
"RTN","TMGRPC3H",98,0)
        . KILL TMGPARAMS
"RTN","TMGRPC3H",99,0)
        . KILL INPUT
"RTN","TMGRPC3H",100,0)
        . MERGE TMGPARAMS=^TMG("TMP","RPC","SAVFMDV","TMGPARAMS")
"RTN","TMGRPC3H",101,0)
        . MERGE INPUT=^TMG("TMP","RPC","SAVFMDV","INPUT")
"RTN","TMGRPC3H",102,0)
        KILL ^TMG("TMP","RPC","SAVFMDV")
"RTN","TMGRPC3H",103,0)
        MERGE ^TMG("TMP","RPC","SAVFMDV","TMGPARAMS")=TMGPARAMS
"RTN","TMGRPC3H",104,0)
        MERGE ^TMG("TMP","RPC","SAVFMDV","INPUT")=INPUT
"RTN","TMGRPC3H",105,0)
        NEW TMGIENS,NAME,SHARED,LINE
"RTN","TMGRPC3H",106,0)
        NEW TMGI SET TMGI=-1
"RTN","TMGRPC3H",107,0)
        NEW BDATA SET BDATA=0  ;"Boolean SET when data begins
"RTN","TMGRPC3H",108,0)
        NEW COUNT SET COUNT=1  ;"Array counter
"RTN","TMGRPC3H",109,0)
        NEW DESC,DATA
"RTN","TMGRPC3H",110,0)
        SET TMGIENS=$PIECE(TMGPARAMS,"^",1)
"RTN","TMGRPC3H",111,0)
        SET NAME=$PIECE(TMGPARAMS,"^",2)
"RTN","TMGRPC3H",112,0)
        SET SHARED=$$UP^XLFSTR($PIECE(TMGPARAMS,"^",3))
"RTN","TMGRPC3H",113,0)
        IF SHARED'="Y" SET SHARED="N"  ;"Ensure shared is either Y or N
"RTN","TMGRPC3H",114,0)
        ;"PARSE DESC AND DATA INTO SEPARATE ARRAYS
"RTN","TMGRPC3H",115,0)
        FOR  SET TMGI=$ORDER(INPUT(TMGI)) QUIT:(TMGI="")  DO
"RTN","TMGRPC3H",116,0)
        . SET LINE=INPUT(TMGI)
"RTN","TMGRPC3H",117,0)
        . IF LINE="{{START OF DATA}}" DO
"RTN","TMGRPC3H",118,0)
        . . SET BDATA=1
"RTN","TMGRPC3H",119,0)
        . . SET COUNT=0
"RTN","TMGRPC3H",120,0)
        . ELSE  IF BDATA=1 DO
"RTN","TMGRPC3H",121,0)
        . . SET DATA(COUNT)=LINE
"RTN","TMGRPC3H",122,0)
        . ELSE  DO
"RTN","TMGRPC3H",123,0)
        . . SET DESC(COUNT)=LINE
"RTN","TMGRPC3H",124,0)
        . SET COUNT=COUNT+1
"RTN","TMGRPC3H",125,0)
        ;"
"RTN","TMGRPC3H",126,0)
        NEW TMGFDA KILL TMGFDA
"RTN","TMGRPC3H",127,0)
        NEW TMGMSG
"RTN","TMGRPC3H",128,0)
        ;"Test View Data and IENS
"RTN","TMGRPC3H",129,0)
        IF +TMGIENS'>0 GOTO FDAERR
"RTN","TMGRPC3H",130,0)
        . SET TMGRESULT(0)="-1^No record number sent."
"RTN","TMGRPC3H",131,0)
        IF DATA(1)="" GOTO FDAERR
"RTN","TMGRPC3H",132,0)
        . SET TMGRESULT(1)="-1^No view data received."
"RTN","TMGRPC3H",133,0)
        IF TMGIENS="+1" SET TMGIENS="+1,"
"RTN","TMGRPC3H",134,0)
        ;"
"RTN","TMGRPC3H",135,0)
        ;"FILE DATA
"RTN","TMGRPC3H",136,0)
        SET TMGFDA(22714,TMGIENS,.01)=NAME
"RTN","TMGRPC3H",137,0)
        SET TMGFDA(22714,TMGIENS,1)="`"_DUZ
"RTN","TMGRPC3H",138,0)
        SET TMGFDA(22714,TMGIENS,2)=SHARED
"RTN","TMGRPC3H",139,0)
        SET TMGFDA(22714,TMGIENS,2.5)="NOW"
"RTN","TMGRPC3H",140,0)
        NEW TMGIEN
"RTN","TMGRPC3H",141,0)
        DO UPDATE^DIE("SE","TMGFDA","TMGIEN","TMGMSG")
"RTN","TMGRPC3H",142,0)
        IF $DATA(TMGMSG("DIERR")) DO  GOTO FDAERR
"RTN","TMGRPC3H",143,0)
        . SET TMGRESULT(0)="-1^See Fileman message"
"RTN","TMGRPC3H",144,0)
        . SET TMGRESULT(1)=$$GETERSTR^TMGRPC3G(.TMGMSG)
"RTN","TMGRPC3H",145,0)
        . DO ADDFDA^TMGRPC3G(.TMGFDA,.TMGRESULT,2)
"RTN","TMGRPC3H",146,0)
        IF TMGIENS="+1," SET TMGIENS=$GET(TMGIEN(1))_","
"RTN","TMGRPC3H",147,0)
        ;"
"RTN","TMGRPC3H",148,0)
        ;"FILE WP ARRAYS
"RTN","TMGRPC3H",149,0)
        NEW DESCPARAMS,DATAPARAMS
"RTN","TMGRPC3H",150,0)
        SET DESCPARAMS="22714^3^"_TMGIENS
"RTN","TMGRPC3H",151,0)
        SET DATAPARAMS="22714^4^"_TMGIENS
"RTN","TMGRPC3H",152,0)
        DO PSTWPFLD^TMGRPC3E(.TMGRESULT,.DESCPARAMS,.DESC)
"RTN","TMGRPC3H",153,0)
        DO PSTWPFLD^TMGRPC3E(.TMGRESULT,.DATAPARAMS,.DATA)
"RTN","TMGRPC3H",154,0)
FDAERR: QUIT
"RTN","TMGRPC3H",155,0)
 
"RTN","TMGRPC3I")
0^9^B6566255
"RTN","TMGRPC3I",1,0)
TMGRPC3I ; COPY NEW PERSON SECONDARY OPTION SUBFILE RECORDS , 2/2/14
"RTN","TMGRPC3I",2,0)
         ;;1.0;TMG-LIB;**1**;04/16/12;Build 9
"RTN","TMGRPC3I",3,0)
EN1(SOURCEIEN,DESTIEN)  ;
"RTN","TMGRPC3I",4,0)
 ;
"RTN","TMGRPC3I",5,0)
 ; SOURCEIEN   AS FROM SOURCE IEN IN NEW PERSON FILE
"RTN","TMGRPC3I",6,0)
 ; DESTIEN     AS TO   DESTINATION IEN IN NEW PERSON FILE
"RTN","TMGRPC3I",7,0)
 ;
"RTN","TMGRPC3I",8,0)
 ; OUTPUT AS COPY OF "SECONDARY OPTION" FIELD 203 SUBFILE 200.03 RECORDS IN
"RTN","TMGRPC3I",9,0)
 ; SOURCEIEN RECORD TO DESTIEN RECORD
"RTN","TMGRPC3I",10,0)
 ;
"RTN","TMGRPC3I",11,0)
 ;                              VA(200,D0,203,0)=^200.03IP^^  (#203)
"RTN","TMGRPC3I",12,0)
 ; SECONDARY MENU OPTIONS
"RTN","TMGRPC3I",13,0)
 ;                              ^VA(200,D0,203,D1,0)= (#.01) SECONDARY MENU
"RTN","TMGRPC3I",14,0)
 ;                               OPTIONS [1P:19] ^ (#2) SYNONYM
"RTN","TMGRPC3I",15,0)
 ;                              ==>[2F] ^
"RTN","TMGRPC3I",16,0)
 ;
"RTN","TMGRPC3I",17,0)
 ; EXAMPLE:
"RTN","TMGRPC3I",18,0)
 ;                              ^VA(200,11,203,0)="^200.03IP^1^1"
"RTN","TMGRPC3I",19,0)
 ;                              ^VA(200,11,203,1,0)=8552 <-----FOR EXAMPLE OR CPRS GUI CHART
"RTN","TMGRPC3I",20,0)
 ;                              ^VA(200,11,203,"B",8552,1)=""
"RTN","TMGRPC3I",21,0)
 ;                              ^VA(200,11,203.1)="62356,53649"
"RTN","TMGRPC3I",22,0)
 ;
"RTN","TMGRPC3I",23,0)
 N COUNT,OPTION,SYNONYM,OPTIONE,COUNT1,FOUND,NAME,IEN
"RTN","TMGRPC3I",24,0)
 N TMGREC
"RTN","TMGRPC3I",25,0)
 S TMGREC=$P(SOURCEIEN,",",1)
"RTN","TMGRPC3I",26,0)
 S OPTION=0
"RTN","TMGRPC3I",27,0)
 S COUNT1=0
"RTN","TMGRPC3I",28,0)
 S FOUND=0
"RTN","TMGRPC3I",29,0)
 ;Determine IF DESTIEN has cross refeences (B  cross-ref)
"RTN","TMGRPC3I",30,0)
 ;;;;S ^XTMP("WELCH")=FOUND_"^"_DUZ_"^"
"RTN","TMGRPC3I",31,0)
 S ^VA(200,DESTIEN,203,0)="^200.03P^^0"
"RTN","TMGRPC3I",32,0)
 F  S OPTION=$O(^VA(200,TMGREC,203,"B",OPTION)) Q:OPTION=""  D
"RTN","TMGRPC3I",33,0)
 .S COUNT1=COUNT1+1
"RTN","TMGRPC3I",34,0)
 .S COUNT=0 S COUNT=$O(^VA(200,TMGREC,203,"B",OPTION,COUNT))
"RTN","TMGRPC3I",35,0)
 .S OPTIONE=$P($G(^DIC(19,OPTION,0)),"^",1)
"RTN","TMGRPC3I",36,0)
 .S SYNONYM=$P($G(^VA(200,TMGREC,203,COUNT,0)),"^",2)
"RTN","TMGRPC3I",37,0)
 .S TMGFILE=200.03
"RTN","TMGRPC3I",38,0)
 .K FDA,OROUT,FDAIEN
"RTN","TMGRPC3I",39,0)
 .K FDAIEN
"RTN","TMGRPC3I",40,0)
 .S FDAIEN(1)=DESTIEN
"RTN","TMGRPC3I",41,0)
 .;;;;S ^XTMP("WELCH",5,COUNT)=OPTIONE
"RTN","TMGRPC3I",42,0)
 .S FDA(45+COUNT1,TMGFILE,"?+2,"_FDAIEN(1)_",",.01)=OPTIONE
"RTN","TMGRPC3I",43,0)
 .S FDA(45+COUNT1,TMGFILE,"?+2,"_FDAIEN(1)_",",2)=SYNONYM
"RTN","TMGRPC3I",44,0)
 .;D UPDATE^DIE("E","FDA(45+COUNT1)","FDAIEN","OROUT(45+COUNT1)")
"RTN","TMGRPC3I",45,0)
 .;S ^XTMP("WELCH",4)=FDAIEN(1)
"RTN","TMGRPC3I",46,0)
 .;S ^XTMP("WELCH",3)=FDAIEN(2)
"RTN","TMGRPC3I",47,0)
 .;
"RTN","TMGRPC3I",48,0)
 .;MANUALLY PUT IN GLOBAL AND B CROSS REF AND ZERO NODE
"RTN","TMGRPC3I",49,0)
 .S ^VA(200,DESTIEN,203,COUNT,0)=OPTION_"^"_SYNONYM
"RTN","TMGRPC3I",50,0)
 .S ^VA(200,DESTIEN,203,"B",OPTION,COUNT)=""
"RTN","TMGRPC3I",51,0)
 .;S ^XTMP("WELCH",6,COUNT)=^VA(200,DESTIEN,203,COUNT,0)
"RTN","TMGRPC3I",52,0)
 .;I $D(OROUT(45+COUNT1,"DIERR")) S ^XTMP("WELCH")=OROUT(45+COUNT1,"DIERR",1,"TEXT",1) Q  ;K FDA(45+COUNT1),OROUT(45+COUNT1),FDAIEN Q
"RTN","TMGRPC3I",53,0)
 .;OROUT(45+COUNT1,"DIERR",1,"TEXT",1) K FDA(45+COUNT1),OROUT(45+COUNT1) Q ;W !,"DATE
"RTN","TMGRPC3I",54,0)
 .;ERROR=",OPTION,"",OROUT(45+COUNT1,"DIERR",1,"TEXT",1) Q
"RTN","TMGRPC3I",55,0)
 .K FDA(45+COUNT1),OROUT(45+COUNT1),FDAIEN
"RTN","TMGRPC3I",56,0)
 I COUNT1'=0 S ^VA(200,DESTIEN,203,0)="^200.03IP^"_COUNT1_"^"_COUNT1
"RTN","TMGRPC3I",57,0)
 ;;;;S ^XTMP("WELCH",7)=$G(^VA(200,DESTIEN,203,0))
"RTN","TMGRPC3I",58,0)
 Q
"VER")
8.0^22.2V1
**END**
**END**
